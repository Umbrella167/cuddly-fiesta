// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages_robocup_ssl_geometry.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from messages_robocup_ssl_geometry.proto</summary>
public static partial class MessagesRobocupSslGeometryReflection {

  #region Descriptor
  /// <summary>File descriptor for messages_robocup_ssl_geometry.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MessagesRobocupSslGeometryReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiNtZXNzYWdlc19yb2JvY3VwX3NzbF9nZW9tZXRyeS5wcm90byIgCghWZWN0",
          "b3IyZhIJCgF4GAEgAigCEgkKAXkYAiACKAIiZQoUU1NMX0ZpZWxkTGluZVNl",
          "Z21lbnQSDAoEbmFtZRgBIAIoCRIVCgJwMRgCIAIoCzIJLlZlY3RvcjJmEhUK",
          "AnAyGAMgAigLMgkuVmVjdG9yMmYSEQoJdGhpY2tuZXNzGAQgAigCInkKE1NT",
          "TF9GaWVsZENpY3VsYXJBcmMSDAoEbmFtZRgBIAIoCRIZCgZjZW50ZXIYAiAC",
          "KAsyCS5WZWN0b3IyZhIOCgZyYWRpdXMYAyACKAISCgoCYTEYBCACKAISCgoC",
          "YTIYBSACKAISEQoJdGhpY2tuZXNzGAYgAigCItgBChVTU0xfR2VvbWV0cnlG",
          "aWVsZFNpemUSFAoMZmllbGRfbGVuZ3RoGAEgAigFEhMKC2ZpZWxkX3dpZHRo",
          "GAIgAigFEhIKCmdvYWxfd2lkdGgYAyACKAUSEgoKZ29hbF9kZXB0aBgEIAIo",
          "BRIWCg5ib3VuZGFyeV93aWR0aBgFIAIoBRIqCgtmaWVsZF9saW5lcxgGIAMo",
          "CzIVLlNTTF9GaWVsZExpbmVTZWdtZW50EigKCmZpZWxkX2FyY3MYByADKAsy",
          "FC5TU0xfRmllbGRDaWN1bGFyQXJjIskCCh1TU0xfR2VvbWV0cnlDYW1lcmFD",
          "YWxpYnJhdGlvbhIRCgljYW1lcmFfaWQYASACKA0SFAoMZm9jYWxfbGVuZ3Ro",
          "GAIgAigCEhkKEXByaW5jaXBhbF9wb2ludF94GAMgAigCEhkKEXByaW5jaXBh",
          "bF9wb2ludF95GAQgAigCEhIKCmRpc3RvcnRpb24YBSACKAISCgoCcTAYBiAC",
          "KAISCgoCcTEYByACKAISCgoCcTIYCCACKAISCgoCcTMYCSACKAISCgoCdHgY",
          "CiACKAISCgoCdHkYCyACKAISCgoCdHoYDCACKAISHwoXZGVyaXZlZF9jYW1l",
          "cmFfd29ybGRfdHgYDSABKAISHwoXZGVyaXZlZF9jYW1lcmFfd29ybGRfdHkY",
          "DiABKAISHwoXZGVyaXZlZF9jYW1lcmFfd29ybGRfdHoYDyABKAIiaAoQU1NM",
          "X0dlb21ldHJ5RGF0YRIlCgVmaWVsZBgBIAIoCzIWLlNTTF9HZW9tZXRyeUZp",
          "ZWxkU2l6ZRItCgVjYWxpYhgCIAMoCzIeLlNTTF9HZW9tZXRyeUNhbWVyYUNh",
          "bGlicmF0aW9u"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Vector2f), global::Vector2f.Parser, new[]{ "X", "Y" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SSL_FieldLineSegment), global::SSL_FieldLineSegment.Parser, new[]{ "Name", "P1", "P2", "Thickness" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SSL_FieldCicularArc), global::SSL_FieldCicularArc.Parser, new[]{ "Name", "Center", "Radius", "A1", "A2", "Thickness" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SSL_GeometryFieldSize), global::SSL_GeometryFieldSize.Parser, new[]{ "FieldLength", "FieldWidth", "GoalWidth", "GoalDepth", "BoundaryWidth", "FieldLines", "FieldArcs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SSL_GeometryCameraCalibration), global::SSL_GeometryCameraCalibration.Parser, new[]{ "CameraId", "FocalLength", "PrincipalPointX", "PrincipalPointY", "Distortion", "Q0", "Q1", "Q2", "Q3", "Tx", "Ty", "Tz", "DerivedCameraWorldTx", "DerivedCameraWorldTy", "DerivedCameraWorldTz" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SSL_GeometryData), global::SSL_GeometryData.Parser, new[]{ "Field", "Calib" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// A 2D float vector.
/// </summary>
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class Vector2f : pb::IMessage<Vector2f>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Vector2f> _parser = new pb::MessageParser<Vector2f>(() => new Vector2f());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Vector2f> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesRobocupSslGeometryReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Vector2f() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Vector2f(Vector2f other) : this() {
    _hasBits0 = other._hasBits0;
    x_ = other.x_;
    y_ = other.y_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Vector2f Clone() {
    return new Vector2f(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private readonly static float XDefaultValue = 0F;

  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float X {
    get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
    set {
      _hasBits0 |= 1;
      x_ = value;
    }
  }
  /// <summary>Gets whether the "x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasX {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearX() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private readonly static float YDefaultValue = 0F;

  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Y {
    get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
    set {
      _hasBits0 |= 2;
      y_ = value;
    }
  }
  /// <summary>Gets whether the "y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasY {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearY() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Vector2f);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Vector2f other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasX) {
      size += 1 + 4;
    }
    if (HasY) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Vector2f other) {
    if (other == null) {
      return;
    }
    if (other.HasX) {
      X = other.X;
    }
    if (other.HasY) {
      Y = other.Y;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Represents a field marking as a line segment represented by a start point p1,
/// and end point p2, and a line thickness. The start and end points are along
/// the center of the line, so the thickness of the line extends by thickness / 2
/// on either side of the line.
/// </summary>
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class SSL_FieldLineSegment : pb::IMessage<SSL_FieldLineSegment>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SSL_FieldLineSegment> _parser = new pb::MessageParser<SSL_FieldLineSegment>(() => new SSL_FieldLineSegment());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SSL_FieldLineSegment> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesRobocupSslGeometryReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_FieldLineSegment() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_FieldLineSegment(SSL_FieldLineSegment other) : this() {
    _hasBits0 = other._hasBits0;
    name_ = other.name_;
    p1_ = other.p1_ != null ? other.p1_.Clone() : null;
    p2_ = other.p2_ != null ? other.p2_.Clone() : null;
    thickness_ = other.thickness_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_FieldLineSegment Clone() {
    return new SSL_FieldLineSegment(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private readonly static string NameDefaultValue = "";

  private string name_;
  /// <summary>
  /// Name of this field marking.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "p1" field.</summary>
  public const int P1FieldNumber = 2;
  private global::Vector2f p1_;
  /// <summary>
  /// Start point of the line segment.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Vector2f P1 {
    get { return p1_; }
    set {
      p1_ = value;
    }
  }

  /// <summary>Field number for the "p2" field.</summary>
  public const int P2FieldNumber = 3;
  private global::Vector2f p2_;
  /// <summary>
  /// End point of the line segment.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Vector2f P2 {
    get { return p2_; }
    set {
      p2_ = value;
    }
  }

  /// <summary>Field number for the "thickness" field.</summary>
  public const int ThicknessFieldNumber = 4;
  private readonly static float ThicknessDefaultValue = 0F;

  private float thickness_;
  /// <summary>
  /// Thickness of the line segment.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Thickness {
    get { if ((_hasBits0 & 1) != 0) { return thickness_; } else { return ThicknessDefaultValue; } }
    set {
      _hasBits0 |= 1;
      thickness_ = value;
    }
  }
  /// <summary>Gets whether the "thickness" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasThickness {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "thickness" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearThickness() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SSL_FieldLineSegment);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SSL_FieldLineSegment other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (!object.Equals(P1, other.P1)) return false;
    if (!object.Equals(P2, other.P2)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Thickness, other.Thickness)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasName) hash ^= Name.GetHashCode();
    if (p1_ != null) hash ^= P1.GetHashCode();
    if (p2_ != null) hash ^= P2.GetHashCode();
    if (HasThickness) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Thickness);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (p1_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(P1);
    }
    if (p2_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(P2);
    }
    if (HasThickness) {
      output.WriteRawTag(37);
      output.WriteFloat(Thickness);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (p1_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(P1);
    }
    if (p2_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(P2);
    }
    if (HasThickness) {
      output.WriteRawTag(37);
      output.WriteFloat(Thickness);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (p1_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(P1);
    }
    if (p2_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(P2);
    }
    if (HasThickness) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SSL_FieldLineSegment other) {
    if (other == null) {
      return;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.p1_ != null) {
      if (p1_ == null) {
        P1 = new global::Vector2f();
      }
      P1.MergeFrom(other.P1);
    }
    if (other.p2_ != null) {
      if (p2_ == null) {
        P2 = new global::Vector2f();
      }
      P2.MergeFrom(other.P2);
    }
    if (other.HasThickness) {
      Thickness = other.Thickness;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          if (p1_ == null) {
            P1 = new global::Vector2f();
          }
          input.ReadMessage(P1);
          break;
        }
        case 26: {
          if (p2_ == null) {
            P2 = new global::Vector2f();
          }
          input.ReadMessage(P2);
          break;
        }
        case 37: {
          Thickness = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          if (p1_ == null) {
            P1 = new global::Vector2f();
          }
          input.ReadMessage(P1);
          break;
        }
        case 26: {
          if (p2_ == null) {
            P2 = new global::Vector2f();
          }
          input.ReadMessage(P2);
          break;
        }
        case 37: {
          Thickness = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// Represents a field marking as a circular arc segment represented by center point, a
/// start angle, an end angle, and an arc thickness.
/// </summary>
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class SSL_FieldCicularArc : pb::IMessage<SSL_FieldCicularArc>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SSL_FieldCicularArc> _parser = new pb::MessageParser<SSL_FieldCicularArc>(() => new SSL_FieldCicularArc());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SSL_FieldCicularArc> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesRobocupSslGeometryReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_FieldCicularArc() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_FieldCicularArc(SSL_FieldCicularArc other) : this() {
    _hasBits0 = other._hasBits0;
    name_ = other.name_;
    center_ = other.center_ != null ? other.center_.Clone() : null;
    radius_ = other.radius_;
    a1_ = other.a1_;
    a2_ = other.a2_;
    thickness_ = other.thickness_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_FieldCicularArc Clone() {
    return new SSL_FieldCicularArc(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private readonly static string NameDefaultValue = "";

  private string name_;
  /// <summary>
  /// Name of this field marking.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "center" field.</summary>
  public const int CenterFieldNumber = 2;
  private global::Vector2f center_;
  /// <summary>
  /// Center point of the circular arc.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Vector2f Center {
    get { return center_; }
    set {
      center_ = value;
    }
  }

  /// <summary>Field number for the "radius" field.</summary>
  public const int RadiusFieldNumber = 3;
  private readonly static float RadiusDefaultValue = 0F;

  private float radius_;
  /// <summary>
  /// Radius of the arc.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Radius {
    get { if ((_hasBits0 & 1) != 0) { return radius_; } else { return RadiusDefaultValue; } }
    set {
      _hasBits0 |= 1;
      radius_ = value;
    }
  }
  /// <summary>Gets whether the "radius" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRadius {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "radius" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRadius() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "a1" field.</summary>
  public const int A1FieldNumber = 4;
  private readonly static float A1DefaultValue = 0F;

  private float a1_;
  /// <summary>
  /// Start angle in counter-clockwise order.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float A1 {
    get { if ((_hasBits0 & 2) != 0) { return a1_; } else { return A1DefaultValue; } }
    set {
      _hasBits0 |= 2;
      a1_ = value;
    }
  }
  /// <summary>Gets whether the "a1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasA1 {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "a1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearA1() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "a2" field.</summary>
  public const int A2FieldNumber = 5;
  private readonly static float A2DefaultValue = 0F;

  private float a2_;
  /// <summary>
  /// End angle in counter-clockwise order.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float A2 {
    get { if ((_hasBits0 & 4) != 0) { return a2_; } else { return A2DefaultValue; } }
    set {
      _hasBits0 |= 4;
      a2_ = value;
    }
  }
  /// <summary>Gets whether the "a2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasA2 {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "a2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearA2() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "thickness" field.</summary>
  public const int ThicknessFieldNumber = 6;
  private readonly static float ThicknessDefaultValue = 0F;

  private float thickness_;
  /// <summary>
  /// Thickness of the arc.
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Thickness {
    get { if ((_hasBits0 & 8) != 0) { return thickness_; } else { return ThicknessDefaultValue; } }
    set {
      _hasBits0 |= 8;
      thickness_ = value;
    }
  }
  /// <summary>Gets whether the "thickness" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasThickness {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "thickness" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearThickness() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SSL_FieldCicularArc);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SSL_FieldCicularArc other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (!object.Equals(Center, other.Center)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(A1, other.A1)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(A2, other.A2)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Thickness, other.Thickness)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasName) hash ^= Name.GetHashCode();
    if (center_ != null) hash ^= Center.GetHashCode();
    if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
    if (HasA1) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(A1);
    if (HasA2) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(A2);
    if (HasThickness) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Thickness);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (center_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Center);
    }
    if (HasRadius) {
      output.WriteRawTag(29);
      output.WriteFloat(Radius);
    }
    if (HasA1) {
      output.WriteRawTag(37);
      output.WriteFloat(A1);
    }
    if (HasA2) {
      output.WriteRawTag(45);
      output.WriteFloat(A2);
    }
    if (HasThickness) {
      output.WriteRawTag(53);
      output.WriteFloat(Thickness);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (center_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Center);
    }
    if (HasRadius) {
      output.WriteRawTag(29);
      output.WriteFloat(Radius);
    }
    if (HasA1) {
      output.WriteRawTag(37);
      output.WriteFloat(A1);
    }
    if (HasA2) {
      output.WriteRawTag(45);
      output.WriteFloat(A2);
    }
    if (HasThickness) {
      output.WriteRawTag(53);
      output.WriteFloat(Thickness);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (center_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Center);
    }
    if (HasRadius) {
      size += 1 + 4;
    }
    if (HasA1) {
      size += 1 + 4;
    }
    if (HasA2) {
      size += 1 + 4;
    }
    if (HasThickness) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SSL_FieldCicularArc other) {
    if (other == null) {
      return;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.center_ != null) {
      if (center_ == null) {
        Center = new global::Vector2f();
      }
      Center.MergeFrom(other.Center);
    }
    if (other.HasRadius) {
      Radius = other.Radius;
    }
    if (other.HasA1) {
      A1 = other.A1;
    }
    if (other.HasA2) {
      A2 = other.A2;
    }
    if (other.HasThickness) {
      Thickness = other.Thickness;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          if (center_ == null) {
            Center = new global::Vector2f();
          }
          input.ReadMessage(Center);
          break;
        }
        case 29: {
          Radius = input.ReadFloat();
          break;
        }
        case 37: {
          A1 = input.ReadFloat();
          break;
        }
        case 45: {
          A2 = input.ReadFloat();
          break;
        }
        case 53: {
          Thickness = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          if (center_ == null) {
            Center = new global::Vector2f();
          }
          input.ReadMessage(Center);
          break;
        }
        case 29: {
          Radius = input.ReadFloat();
          break;
        }
        case 37: {
          A1 = input.ReadFloat();
          break;
        }
        case 45: {
          A2 = input.ReadFloat();
          break;
        }
        case 53: {
          Thickness = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class SSL_GeometryFieldSize : pb::IMessage<SSL_GeometryFieldSize>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SSL_GeometryFieldSize> _parser = new pb::MessageParser<SSL_GeometryFieldSize>(() => new SSL_GeometryFieldSize());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SSL_GeometryFieldSize> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesRobocupSslGeometryReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_GeometryFieldSize() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_GeometryFieldSize(SSL_GeometryFieldSize other) : this() {
    _hasBits0 = other._hasBits0;
    fieldLength_ = other.fieldLength_;
    fieldWidth_ = other.fieldWidth_;
    goalWidth_ = other.goalWidth_;
    goalDepth_ = other.goalDepth_;
    boundaryWidth_ = other.boundaryWidth_;
    fieldLines_ = other.fieldLines_.Clone();
    fieldArcs_ = other.fieldArcs_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_GeometryFieldSize Clone() {
    return new SSL_GeometryFieldSize(this);
  }

  /// <summary>Field number for the "field_length" field.</summary>
  public const int FieldLengthFieldNumber = 1;
  private readonly static int FieldLengthDefaultValue = 0;

  private int fieldLength_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int FieldLength {
    get { if ((_hasBits0 & 1) != 0) { return fieldLength_; } else { return FieldLengthDefaultValue; } }
    set {
      _hasBits0 |= 1;
      fieldLength_ = value;
    }
  }
  /// <summary>Gets whether the "field_length" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFieldLength {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "field_length" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFieldLength() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "field_width" field.</summary>
  public const int FieldWidthFieldNumber = 2;
  private readonly static int FieldWidthDefaultValue = 0;

  private int fieldWidth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int FieldWidth {
    get { if ((_hasBits0 & 2) != 0) { return fieldWidth_; } else { return FieldWidthDefaultValue; } }
    set {
      _hasBits0 |= 2;
      fieldWidth_ = value;
    }
  }
  /// <summary>Gets whether the "field_width" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFieldWidth {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "field_width" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFieldWidth() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "goal_width" field.</summary>
  public const int GoalWidthFieldNumber = 3;
  private readonly static int GoalWidthDefaultValue = 0;

  private int goalWidth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int GoalWidth {
    get { if ((_hasBits0 & 4) != 0) { return goalWidth_; } else { return GoalWidthDefaultValue; } }
    set {
      _hasBits0 |= 4;
      goalWidth_ = value;
    }
  }
  /// <summary>Gets whether the "goal_width" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGoalWidth {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "goal_width" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGoalWidth() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "goal_depth" field.</summary>
  public const int GoalDepthFieldNumber = 4;
  private readonly static int GoalDepthDefaultValue = 0;

  private int goalDepth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int GoalDepth {
    get { if ((_hasBits0 & 8) != 0) { return goalDepth_; } else { return GoalDepthDefaultValue; } }
    set {
      _hasBits0 |= 8;
      goalDepth_ = value;
    }
  }
  /// <summary>Gets whether the "goal_depth" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGoalDepth {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "goal_depth" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGoalDepth() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "boundary_width" field.</summary>
  public const int BoundaryWidthFieldNumber = 5;
  private readonly static int BoundaryWidthDefaultValue = 0;

  private int boundaryWidth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int BoundaryWidth {
    get { if ((_hasBits0 & 16) != 0) { return boundaryWidth_; } else { return BoundaryWidthDefaultValue; } }
    set {
      _hasBits0 |= 16;
      boundaryWidth_ = value;
    }
  }
  /// <summary>Gets whether the "boundary_width" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBoundaryWidth {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "boundary_width" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBoundaryWidth() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "field_lines" field.</summary>
  public const int FieldLinesFieldNumber = 6;
  private static readonly pb::FieldCodec<global::SSL_FieldLineSegment> _repeated_fieldLines_codec
      = pb::FieldCodec.ForMessage(50, global::SSL_FieldLineSegment.Parser);
  private readonly pbc::RepeatedField<global::SSL_FieldLineSegment> fieldLines_ = new pbc::RepeatedField<global::SSL_FieldLineSegment>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::SSL_FieldLineSegment> FieldLines {
    get { return fieldLines_; }
  }

  /// <summary>Field number for the "field_arcs" field.</summary>
  public const int FieldArcsFieldNumber = 7;
  private static readonly pb::FieldCodec<global::SSL_FieldCicularArc> _repeated_fieldArcs_codec
      = pb::FieldCodec.ForMessage(58, global::SSL_FieldCicularArc.Parser);
  private readonly pbc::RepeatedField<global::SSL_FieldCicularArc> fieldArcs_ = new pbc::RepeatedField<global::SSL_FieldCicularArc>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::SSL_FieldCicularArc> FieldArcs {
    get { return fieldArcs_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SSL_GeometryFieldSize);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SSL_GeometryFieldSize other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FieldLength != other.FieldLength) return false;
    if (FieldWidth != other.FieldWidth) return false;
    if (GoalWidth != other.GoalWidth) return false;
    if (GoalDepth != other.GoalDepth) return false;
    if (BoundaryWidth != other.BoundaryWidth) return false;
    if(!fieldLines_.Equals(other.fieldLines_)) return false;
    if(!fieldArcs_.Equals(other.fieldArcs_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFieldLength) hash ^= FieldLength.GetHashCode();
    if (HasFieldWidth) hash ^= FieldWidth.GetHashCode();
    if (HasGoalWidth) hash ^= GoalWidth.GetHashCode();
    if (HasGoalDepth) hash ^= GoalDepth.GetHashCode();
    if (HasBoundaryWidth) hash ^= BoundaryWidth.GetHashCode();
    hash ^= fieldLines_.GetHashCode();
    hash ^= fieldArcs_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFieldLength) {
      output.WriteRawTag(8);
      output.WriteInt32(FieldLength);
    }
    if (HasFieldWidth) {
      output.WriteRawTag(16);
      output.WriteInt32(FieldWidth);
    }
    if (HasGoalWidth) {
      output.WriteRawTag(24);
      output.WriteInt32(GoalWidth);
    }
    if (HasGoalDepth) {
      output.WriteRawTag(32);
      output.WriteInt32(GoalDepth);
    }
    if (HasBoundaryWidth) {
      output.WriteRawTag(40);
      output.WriteInt32(BoundaryWidth);
    }
    fieldLines_.WriteTo(output, _repeated_fieldLines_codec);
    fieldArcs_.WriteTo(output, _repeated_fieldArcs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFieldLength) {
      output.WriteRawTag(8);
      output.WriteInt32(FieldLength);
    }
    if (HasFieldWidth) {
      output.WriteRawTag(16);
      output.WriteInt32(FieldWidth);
    }
    if (HasGoalWidth) {
      output.WriteRawTag(24);
      output.WriteInt32(GoalWidth);
    }
    if (HasGoalDepth) {
      output.WriteRawTag(32);
      output.WriteInt32(GoalDepth);
    }
    if (HasBoundaryWidth) {
      output.WriteRawTag(40);
      output.WriteInt32(BoundaryWidth);
    }
    fieldLines_.WriteTo(ref output, _repeated_fieldLines_codec);
    fieldArcs_.WriteTo(ref output, _repeated_fieldArcs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFieldLength) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FieldLength);
    }
    if (HasFieldWidth) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FieldWidth);
    }
    if (HasGoalWidth) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoalWidth);
    }
    if (HasGoalDepth) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoalDepth);
    }
    if (HasBoundaryWidth) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoundaryWidth);
    }
    size += fieldLines_.CalculateSize(_repeated_fieldLines_codec);
    size += fieldArcs_.CalculateSize(_repeated_fieldArcs_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SSL_GeometryFieldSize other) {
    if (other == null) {
      return;
    }
    if (other.HasFieldLength) {
      FieldLength = other.FieldLength;
    }
    if (other.HasFieldWidth) {
      FieldWidth = other.FieldWidth;
    }
    if (other.HasGoalWidth) {
      GoalWidth = other.GoalWidth;
    }
    if (other.HasGoalDepth) {
      GoalDepth = other.GoalDepth;
    }
    if (other.HasBoundaryWidth) {
      BoundaryWidth = other.BoundaryWidth;
    }
    fieldLines_.Add(other.fieldLines_);
    fieldArcs_.Add(other.fieldArcs_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FieldLength = input.ReadInt32();
          break;
        }
        case 16: {
          FieldWidth = input.ReadInt32();
          break;
        }
        case 24: {
          GoalWidth = input.ReadInt32();
          break;
        }
        case 32: {
          GoalDepth = input.ReadInt32();
          break;
        }
        case 40: {
          BoundaryWidth = input.ReadInt32();
          break;
        }
        case 50: {
          fieldLines_.AddEntriesFrom(input, _repeated_fieldLines_codec);
          break;
        }
        case 58: {
          fieldArcs_.AddEntriesFrom(input, _repeated_fieldArcs_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          FieldLength = input.ReadInt32();
          break;
        }
        case 16: {
          FieldWidth = input.ReadInt32();
          break;
        }
        case 24: {
          GoalWidth = input.ReadInt32();
          break;
        }
        case 32: {
          GoalDepth = input.ReadInt32();
          break;
        }
        case 40: {
          BoundaryWidth = input.ReadInt32();
          break;
        }
        case 50: {
          fieldLines_.AddEntriesFrom(ref input, _repeated_fieldLines_codec);
          break;
        }
        case 58: {
          fieldArcs_.AddEntriesFrom(ref input, _repeated_fieldArcs_codec);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class SSL_GeometryCameraCalibration : pb::IMessage<SSL_GeometryCameraCalibration>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SSL_GeometryCameraCalibration> _parser = new pb::MessageParser<SSL_GeometryCameraCalibration>(() => new SSL_GeometryCameraCalibration());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SSL_GeometryCameraCalibration> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesRobocupSslGeometryReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_GeometryCameraCalibration() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_GeometryCameraCalibration(SSL_GeometryCameraCalibration other) : this() {
    _hasBits0 = other._hasBits0;
    cameraId_ = other.cameraId_;
    focalLength_ = other.focalLength_;
    principalPointX_ = other.principalPointX_;
    principalPointY_ = other.principalPointY_;
    distortion_ = other.distortion_;
    q0_ = other.q0_;
    q1_ = other.q1_;
    q2_ = other.q2_;
    q3_ = other.q3_;
    tx_ = other.tx_;
    ty_ = other.ty_;
    tz_ = other.tz_;
    derivedCameraWorldTx_ = other.derivedCameraWorldTx_;
    derivedCameraWorldTy_ = other.derivedCameraWorldTy_;
    derivedCameraWorldTz_ = other.derivedCameraWorldTz_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_GeometryCameraCalibration Clone() {
    return new SSL_GeometryCameraCalibration(this);
  }

  /// <summary>Field number for the "camera_id" field.</summary>
  public const int CameraIdFieldNumber = 1;
  private readonly static uint CameraIdDefaultValue = 0;

  private uint cameraId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CameraId {
    get { if ((_hasBits0 & 1) != 0) { return cameraId_; } else { return CameraIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      cameraId_ = value;
    }
  }
  /// <summary>Gets whether the "camera_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCameraId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "camera_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCameraId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "focal_length" field.</summary>
  public const int FocalLengthFieldNumber = 2;
  private readonly static float FocalLengthDefaultValue = 0F;

  private float focalLength_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float FocalLength {
    get { if ((_hasBits0 & 2) != 0) { return focalLength_; } else { return FocalLengthDefaultValue; } }
    set {
      _hasBits0 |= 2;
      focalLength_ = value;
    }
  }
  /// <summary>Gets whether the "focal_length" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFocalLength {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "focal_length" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFocalLength() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "principal_point_x" field.</summary>
  public const int PrincipalPointXFieldNumber = 3;
  private readonly static float PrincipalPointXDefaultValue = 0F;

  private float principalPointX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PrincipalPointX {
    get { if ((_hasBits0 & 4) != 0) { return principalPointX_; } else { return PrincipalPointXDefaultValue; } }
    set {
      _hasBits0 |= 4;
      principalPointX_ = value;
    }
  }
  /// <summary>Gets whether the "principal_point_x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPrincipalPointX {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "principal_point_x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPrincipalPointX() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "principal_point_y" field.</summary>
  public const int PrincipalPointYFieldNumber = 4;
  private readonly static float PrincipalPointYDefaultValue = 0F;

  private float principalPointY_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PrincipalPointY {
    get { if ((_hasBits0 & 8) != 0) { return principalPointY_; } else { return PrincipalPointYDefaultValue; } }
    set {
      _hasBits0 |= 8;
      principalPointY_ = value;
    }
  }
  /// <summary>Gets whether the "principal_point_y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPrincipalPointY {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "principal_point_y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPrincipalPointY() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "distortion" field.</summary>
  public const int DistortionFieldNumber = 5;
  private readonly static float DistortionDefaultValue = 0F;

  private float distortion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Distortion {
    get { if ((_hasBits0 & 16) != 0) { return distortion_; } else { return DistortionDefaultValue; } }
    set {
      _hasBits0 |= 16;
      distortion_ = value;
    }
  }
  /// <summary>Gets whether the "distortion" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDistortion {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "distortion" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDistortion() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "q0" field.</summary>
  public const int Q0FieldNumber = 6;
  private readonly static float Q0DefaultValue = 0F;

  private float q0_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Q0 {
    get { if ((_hasBits0 & 32) != 0) { return q0_; } else { return Q0DefaultValue; } }
    set {
      _hasBits0 |= 32;
      q0_ = value;
    }
  }
  /// <summary>Gets whether the "q0" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQ0 {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "q0" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQ0() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "q1" field.</summary>
  public const int Q1FieldNumber = 7;
  private readonly static float Q1DefaultValue = 0F;

  private float q1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Q1 {
    get { if ((_hasBits0 & 64) != 0) { return q1_; } else { return Q1DefaultValue; } }
    set {
      _hasBits0 |= 64;
      q1_ = value;
    }
  }
  /// <summary>Gets whether the "q1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQ1 {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "q1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQ1() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "q2" field.</summary>
  public const int Q2FieldNumber = 8;
  private readonly static float Q2DefaultValue = 0F;

  private float q2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Q2 {
    get { if ((_hasBits0 & 128) != 0) { return q2_; } else { return Q2DefaultValue; } }
    set {
      _hasBits0 |= 128;
      q2_ = value;
    }
  }
  /// <summary>Gets whether the "q2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQ2 {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "q2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQ2() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "q3" field.</summary>
  public const int Q3FieldNumber = 9;
  private readonly static float Q3DefaultValue = 0F;

  private float q3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Q3 {
    get { if ((_hasBits0 & 256) != 0) { return q3_; } else { return Q3DefaultValue; } }
    set {
      _hasBits0 |= 256;
      q3_ = value;
    }
  }
  /// <summary>Gets whether the "q3" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQ3 {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "q3" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQ3() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "tx" field.</summary>
  public const int TxFieldNumber = 10;
  private readonly static float TxDefaultValue = 0F;

  private float tx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Tx {
    get { if ((_hasBits0 & 512) != 0) { return tx_; } else { return TxDefaultValue; } }
    set {
      _hasBits0 |= 512;
      tx_ = value;
    }
  }
  /// <summary>Gets whether the "tx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTx {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "tx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTx() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "ty" field.</summary>
  public const int TyFieldNumber = 11;
  private readonly static float TyDefaultValue = 0F;

  private float ty_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Ty {
    get { if ((_hasBits0 & 1024) != 0) { return ty_; } else { return TyDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      ty_ = value;
    }
  }
  /// <summary>Gets whether the "ty" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTy {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "ty" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTy() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "tz" field.</summary>
  public const int TzFieldNumber = 12;
  private readonly static float TzDefaultValue = 0F;

  private float tz_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Tz {
    get { if ((_hasBits0 & 2048) != 0) { return tz_; } else { return TzDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      tz_ = value;
    }
  }
  /// <summary>Gets whether the "tz" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTz {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "tz" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTz() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "derived_camera_world_tx" field.</summary>
  public const int DerivedCameraWorldTxFieldNumber = 13;
  private readonly static float DerivedCameraWorldTxDefaultValue = 0F;

  private float derivedCameraWorldTx_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float DerivedCameraWorldTx {
    get { if ((_hasBits0 & 4096) != 0) { return derivedCameraWorldTx_; } else { return DerivedCameraWorldTxDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      derivedCameraWorldTx_ = value;
    }
  }
  /// <summary>Gets whether the "derived_camera_world_tx" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDerivedCameraWorldTx {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "derived_camera_world_tx" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDerivedCameraWorldTx() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "derived_camera_world_ty" field.</summary>
  public const int DerivedCameraWorldTyFieldNumber = 14;
  private readonly static float DerivedCameraWorldTyDefaultValue = 0F;

  private float derivedCameraWorldTy_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float DerivedCameraWorldTy {
    get { if ((_hasBits0 & 8192) != 0) { return derivedCameraWorldTy_; } else { return DerivedCameraWorldTyDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      derivedCameraWorldTy_ = value;
    }
  }
  /// <summary>Gets whether the "derived_camera_world_ty" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDerivedCameraWorldTy {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "derived_camera_world_ty" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDerivedCameraWorldTy() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "derived_camera_world_tz" field.</summary>
  public const int DerivedCameraWorldTzFieldNumber = 15;
  private readonly static float DerivedCameraWorldTzDefaultValue = 0F;

  private float derivedCameraWorldTz_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float DerivedCameraWorldTz {
    get { if ((_hasBits0 & 16384) != 0) { return derivedCameraWorldTz_; } else { return DerivedCameraWorldTzDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      derivedCameraWorldTz_ = value;
    }
  }
  /// <summary>Gets whether the "derived_camera_world_tz" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDerivedCameraWorldTz {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "derived_camera_world_tz" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDerivedCameraWorldTz() {
    _hasBits0 &= ~16384;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SSL_GeometryCameraCalibration);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SSL_GeometryCameraCalibration other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CameraId != other.CameraId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FocalLength, other.FocalLength)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrincipalPointX, other.PrincipalPointX)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrincipalPointY, other.PrincipalPointY)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distortion, other.Distortion)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Q0, other.Q0)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Q1, other.Q1)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Q2, other.Q2)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Q3, other.Q3)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Tx, other.Tx)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ty, other.Ty)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Tz, other.Tz)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DerivedCameraWorldTx, other.DerivedCameraWorldTx)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DerivedCameraWorldTy, other.DerivedCameraWorldTy)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DerivedCameraWorldTz, other.DerivedCameraWorldTz)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCameraId) hash ^= CameraId.GetHashCode();
    if (HasFocalLength) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FocalLength);
    if (HasPrincipalPointX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrincipalPointX);
    if (HasPrincipalPointY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrincipalPointY);
    if (HasDistortion) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distortion);
    if (HasQ0) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Q0);
    if (HasQ1) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Q1);
    if (HasQ2) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Q2);
    if (HasQ3) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Q3);
    if (HasTx) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Tx);
    if (HasTy) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ty);
    if (HasTz) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Tz);
    if (HasDerivedCameraWorldTx) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DerivedCameraWorldTx);
    if (HasDerivedCameraWorldTy) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DerivedCameraWorldTy);
    if (HasDerivedCameraWorldTz) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DerivedCameraWorldTz);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCameraId) {
      output.WriteRawTag(8);
      output.WriteUInt32(CameraId);
    }
    if (HasFocalLength) {
      output.WriteRawTag(21);
      output.WriteFloat(FocalLength);
    }
    if (HasPrincipalPointX) {
      output.WriteRawTag(29);
      output.WriteFloat(PrincipalPointX);
    }
    if (HasPrincipalPointY) {
      output.WriteRawTag(37);
      output.WriteFloat(PrincipalPointY);
    }
    if (HasDistortion) {
      output.WriteRawTag(45);
      output.WriteFloat(Distortion);
    }
    if (HasQ0) {
      output.WriteRawTag(53);
      output.WriteFloat(Q0);
    }
    if (HasQ1) {
      output.WriteRawTag(61);
      output.WriteFloat(Q1);
    }
    if (HasQ2) {
      output.WriteRawTag(69);
      output.WriteFloat(Q2);
    }
    if (HasQ3) {
      output.WriteRawTag(77);
      output.WriteFloat(Q3);
    }
    if (HasTx) {
      output.WriteRawTag(85);
      output.WriteFloat(Tx);
    }
    if (HasTy) {
      output.WriteRawTag(93);
      output.WriteFloat(Ty);
    }
    if (HasTz) {
      output.WriteRawTag(101);
      output.WriteFloat(Tz);
    }
    if (HasDerivedCameraWorldTx) {
      output.WriteRawTag(109);
      output.WriteFloat(DerivedCameraWorldTx);
    }
    if (HasDerivedCameraWorldTy) {
      output.WriteRawTag(117);
      output.WriteFloat(DerivedCameraWorldTy);
    }
    if (HasDerivedCameraWorldTz) {
      output.WriteRawTag(125);
      output.WriteFloat(DerivedCameraWorldTz);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCameraId) {
      output.WriteRawTag(8);
      output.WriteUInt32(CameraId);
    }
    if (HasFocalLength) {
      output.WriteRawTag(21);
      output.WriteFloat(FocalLength);
    }
    if (HasPrincipalPointX) {
      output.WriteRawTag(29);
      output.WriteFloat(PrincipalPointX);
    }
    if (HasPrincipalPointY) {
      output.WriteRawTag(37);
      output.WriteFloat(PrincipalPointY);
    }
    if (HasDistortion) {
      output.WriteRawTag(45);
      output.WriteFloat(Distortion);
    }
    if (HasQ0) {
      output.WriteRawTag(53);
      output.WriteFloat(Q0);
    }
    if (HasQ1) {
      output.WriteRawTag(61);
      output.WriteFloat(Q1);
    }
    if (HasQ2) {
      output.WriteRawTag(69);
      output.WriteFloat(Q2);
    }
    if (HasQ3) {
      output.WriteRawTag(77);
      output.WriteFloat(Q3);
    }
    if (HasTx) {
      output.WriteRawTag(85);
      output.WriteFloat(Tx);
    }
    if (HasTy) {
      output.WriteRawTag(93);
      output.WriteFloat(Ty);
    }
    if (HasTz) {
      output.WriteRawTag(101);
      output.WriteFloat(Tz);
    }
    if (HasDerivedCameraWorldTx) {
      output.WriteRawTag(109);
      output.WriteFloat(DerivedCameraWorldTx);
    }
    if (HasDerivedCameraWorldTy) {
      output.WriteRawTag(117);
      output.WriteFloat(DerivedCameraWorldTy);
    }
    if (HasDerivedCameraWorldTz) {
      output.WriteRawTag(125);
      output.WriteFloat(DerivedCameraWorldTz);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCameraId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CameraId);
    }
    if (HasFocalLength) {
      size += 1 + 4;
    }
    if (HasPrincipalPointX) {
      size += 1 + 4;
    }
    if (HasPrincipalPointY) {
      size += 1 + 4;
    }
    if (HasDistortion) {
      size += 1 + 4;
    }
    if (HasQ0) {
      size += 1 + 4;
    }
    if (HasQ1) {
      size += 1 + 4;
    }
    if (HasQ2) {
      size += 1 + 4;
    }
    if (HasQ3) {
      size += 1 + 4;
    }
    if (HasTx) {
      size += 1 + 4;
    }
    if (HasTy) {
      size += 1 + 4;
    }
    if (HasTz) {
      size += 1 + 4;
    }
    if (HasDerivedCameraWorldTx) {
      size += 1 + 4;
    }
    if (HasDerivedCameraWorldTy) {
      size += 1 + 4;
    }
    if (HasDerivedCameraWorldTz) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SSL_GeometryCameraCalibration other) {
    if (other == null) {
      return;
    }
    if (other.HasCameraId) {
      CameraId = other.CameraId;
    }
    if (other.HasFocalLength) {
      FocalLength = other.FocalLength;
    }
    if (other.HasPrincipalPointX) {
      PrincipalPointX = other.PrincipalPointX;
    }
    if (other.HasPrincipalPointY) {
      PrincipalPointY = other.PrincipalPointY;
    }
    if (other.HasDistortion) {
      Distortion = other.Distortion;
    }
    if (other.HasQ0) {
      Q0 = other.Q0;
    }
    if (other.HasQ1) {
      Q1 = other.Q1;
    }
    if (other.HasQ2) {
      Q2 = other.Q2;
    }
    if (other.HasQ3) {
      Q3 = other.Q3;
    }
    if (other.HasTx) {
      Tx = other.Tx;
    }
    if (other.HasTy) {
      Ty = other.Ty;
    }
    if (other.HasTz) {
      Tz = other.Tz;
    }
    if (other.HasDerivedCameraWorldTx) {
      DerivedCameraWorldTx = other.DerivedCameraWorldTx;
    }
    if (other.HasDerivedCameraWorldTy) {
      DerivedCameraWorldTy = other.DerivedCameraWorldTy;
    }
    if (other.HasDerivedCameraWorldTz) {
      DerivedCameraWorldTz = other.DerivedCameraWorldTz;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CameraId = input.ReadUInt32();
          break;
        }
        case 21: {
          FocalLength = input.ReadFloat();
          break;
        }
        case 29: {
          PrincipalPointX = input.ReadFloat();
          break;
        }
        case 37: {
          PrincipalPointY = input.ReadFloat();
          break;
        }
        case 45: {
          Distortion = input.ReadFloat();
          break;
        }
        case 53: {
          Q0 = input.ReadFloat();
          break;
        }
        case 61: {
          Q1 = input.ReadFloat();
          break;
        }
        case 69: {
          Q2 = input.ReadFloat();
          break;
        }
        case 77: {
          Q3 = input.ReadFloat();
          break;
        }
        case 85: {
          Tx = input.ReadFloat();
          break;
        }
        case 93: {
          Ty = input.ReadFloat();
          break;
        }
        case 101: {
          Tz = input.ReadFloat();
          break;
        }
        case 109: {
          DerivedCameraWorldTx = input.ReadFloat();
          break;
        }
        case 117: {
          DerivedCameraWorldTy = input.ReadFloat();
          break;
        }
        case 125: {
          DerivedCameraWorldTz = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CameraId = input.ReadUInt32();
          break;
        }
        case 21: {
          FocalLength = input.ReadFloat();
          break;
        }
        case 29: {
          PrincipalPointX = input.ReadFloat();
          break;
        }
        case 37: {
          PrincipalPointY = input.ReadFloat();
          break;
        }
        case 45: {
          Distortion = input.ReadFloat();
          break;
        }
        case 53: {
          Q0 = input.ReadFloat();
          break;
        }
        case 61: {
          Q1 = input.ReadFloat();
          break;
        }
        case 69: {
          Q2 = input.ReadFloat();
          break;
        }
        case 77: {
          Q3 = input.ReadFloat();
          break;
        }
        case 85: {
          Tx = input.ReadFloat();
          break;
        }
        case 93: {
          Ty = input.ReadFloat();
          break;
        }
        case 101: {
          Tz = input.ReadFloat();
          break;
        }
        case 109: {
          DerivedCameraWorldTx = input.ReadFloat();
          break;
        }
        case 117: {
          DerivedCameraWorldTy = input.ReadFloat();
          break;
        }
        case 125: {
          DerivedCameraWorldTz = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class SSL_GeometryData : pb::IMessage<SSL_GeometryData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SSL_GeometryData> _parser = new pb::MessageParser<SSL_GeometryData>(() => new SSL_GeometryData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SSL_GeometryData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesRobocupSslGeometryReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_GeometryData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_GeometryData(SSL_GeometryData other) : this() {
    field_ = other.field_ != null ? other.field_.Clone() : null;
    calib_ = other.calib_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_GeometryData Clone() {
    return new SSL_GeometryData(this);
  }

  /// <summary>Field number for the "field" field.</summary>
  public const int FieldFieldNumber = 1;
  private global::SSL_GeometryFieldSize field_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::SSL_GeometryFieldSize Field {
    get { return field_; }
    set {
      field_ = value;
    }
  }

  /// <summary>Field number for the "calib" field.</summary>
  public const int CalibFieldNumber = 2;
  private static readonly pb::FieldCodec<global::SSL_GeometryCameraCalibration> _repeated_calib_codec
      = pb::FieldCodec.ForMessage(18, global::SSL_GeometryCameraCalibration.Parser);
  private readonly pbc::RepeatedField<global::SSL_GeometryCameraCalibration> calib_ = new pbc::RepeatedField<global::SSL_GeometryCameraCalibration>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::SSL_GeometryCameraCalibration> Calib {
    get { return calib_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SSL_GeometryData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SSL_GeometryData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Field, other.Field)) return false;
    if(!calib_.Equals(other.calib_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (field_ != null) hash ^= Field.GetHashCode();
    hash ^= calib_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (field_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Field);
    }
    calib_.WriteTo(output, _repeated_calib_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (field_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Field);
    }
    calib_.WriteTo(ref output, _repeated_calib_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (field_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
    }
    size += calib_.CalculateSize(_repeated_calib_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SSL_GeometryData other) {
    if (other == null) {
      return;
    }
    if (other.field_ != null) {
      if (field_ == null) {
        Field = new global::SSL_GeometryFieldSize();
      }
      Field.MergeFrom(other.Field);
    }
    calib_.Add(other.calib_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (field_ == null) {
            Field = new global::SSL_GeometryFieldSize();
          }
          input.ReadMessage(Field);
          break;
        }
        case 18: {
          calib_.AddEntriesFrom(input, _repeated_calib_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (field_ == null) {
            Field = new global::SSL_GeometryFieldSize();
          }
          input.ReadMessage(Field);
          break;
        }
        case 18: {
          calib_.AddEntriesFrom(ref input, _repeated_calib_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
