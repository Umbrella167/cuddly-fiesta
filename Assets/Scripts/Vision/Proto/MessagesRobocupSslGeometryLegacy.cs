// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages_robocup_ssl_geometry_legacy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RoboCup2014Legacy.Geometry {

  /// <summary>Holder for reflection information generated from messages_robocup_ssl_geometry_legacy.proto</summary>
  public static partial class MessagesRobocupSslGeometryLegacyReflection {

    #region Descriptor
    /// <summary>File descriptor for messages_robocup_ssl_geometry_legacy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesRobocupSslGeometryLegacyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiptZXNzYWdlc19yb2JvY3VwX3NzbF9nZW9tZXRyeV9sZWdhY3kucHJvdG8S",
            "GlJvYm9DdXAyMDE0TGVnYWN5Lkdlb21ldHJ5GiNtZXNzYWdlc19yb2JvY3Vw",
            "X3NzbF9nZW9tZXRyeS5wcm90byKKAwoVU1NMX0dlb21ldHJ5RmllbGRTaXpl",
            "EhIKCmxpbmVfd2lkdGgYASACKAUSFAoMZmllbGRfbGVuZ3RoGAIgAigFEhMK",
            "C2ZpZWxkX3dpZHRoGAMgAigFEhYKDmJvdW5kYXJ5X3dpZHRoGAQgAigFEhUK",
            "DXJlZmVyZWVfd2lkdGgYBSACKAUSEgoKZ29hbF93aWR0aBgGIAIoBRISCgpn",
            "b2FsX2RlcHRoGAcgAigFEhcKD2dvYWxfd2FsbF93aWR0aBgIIAIoBRIcChRj",
            "ZW50ZXJfY2lyY2xlX3JhZGl1cxgJIAIoBRIWCg5kZWZlbnNlX3JhZGl1cxgK",
            "IAIoBRIXCg9kZWZlbnNlX3N0cmV0Y2gYCyACKAUSIwobZnJlZV9raWNrX2Zy",
            "b21fZGVmZW5zZV9kaXN0GAwgAigFEikKIXBlbmFsdHlfc3BvdF9mcm9tX2Zp",
            "ZWxkX2xpbmVfZGlzdBgNIAIoBRIjChtwZW5hbHR5X2xpbmVfZnJvbV9zcG90",
            "X2Rpc3QYDiACKAUigwEKEFNTTF9HZW9tZXRyeURhdGESQAoFZmllbGQYASAC",
            "KAsyMS5Sb2JvQ3VwMjAxNExlZ2FjeS5HZW9tZXRyeS5TU0xfR2VvbWV0cnlG",
            "aWVsZFNpemUSLQoFY2FsaWIYAiADKAsyHi5TU0xfR2VvbWV0cnlDYW1lcmFD",
            "YWxpYnJhdGlvbg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MessagesRobocupSslGeometryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize), global::RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize.Parser, new[]{ "LineWidth", "FieldLength", "FieldWidth", "BoundaryWidth", "RefereeWidth", "GoalWidth", "GoalDepth", "GoalWallWidth", "CenterCircleRadius", "DefenseRadius", "DefenseStretch", "FreeKickFromDefenseDist", "PenaltySpotFromFieldLineDist", "PenaltyLineFromSpotDist" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RoboCup2014Legacy.Geometry.SSL_GeometryData), global::RoboCup2014Legacy.Geometry.SSL_GeometryData.Parser, new[]{ "Field", "Calib" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SSL_GeometryFieldSize : pb::IMessage<SSL_GeometryFieldSize>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SSL_GeometryFieldSize> _parser = new pb::MessageParser<SSL_GeometryFieldSize>(() => new SSL_GeometryFieldSize());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SSL_GeometryFieldSize> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SSL_GeometryFieldSize() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SSL_GeometryFieldSize(SSL_GeometryFieldSize other) : this() {
      _hasBits0 = other._hasBits0;
      lineWidth_ = other.lineWidth_;
      fieldLength_ = other.fieldLength_;
      fieldWidth_ = other.fieldWidth_;
      boundaryWidth_ = other.boundaryWidth_;
      refereeWidth_ = other.refereeWidth_;
      goalWidth_ = other.goalWidth_;
      goalDepth_ = other.goalDepth_;
      goalWallWidth_ = other.goalWallWidth_;
      centerCircleRadius_ = other.centerCircleRadius_;
      defenseRadius_ = other.defenseRadius_;
      defenseStretch_ = other.defenseStretch_;
      freeKickFromDefenseDist_ = other.freeKickFromDefenseDist_;
      penaltySpotFromFieldLineDist_ = other.penaltySpotFromFieldLineDist_;
      penaltyLineFromSpotDist_ = other.penaltyLineFromSpotDist_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SSL_GeometryFieldSize Clone() {
      return new SSL_GeometryFieldSize(this);
    }

    /// <summary>Field number for the "line_width" field.</summary>
    public const int LineWidthFieldNumber = 1;
    private readonly static int LineWidthDefaultValue = 0;

    private int lineWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LineWidth {
      get { if ((_hasBits0 & 1) != 0) { return lineWidth_; } else { return LineWidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lineWidth_ = value;
      }
    }
    /// <summary>Gets whether the "line_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLineWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "line_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLineWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "field_length" field.</summary>
    public const int FieldLengthFieldNumber = 2;
    private readonly static int FieldLengthDefaultValue = 0;

    private int fieldLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FieldLength {
      get { if ((_hasBits0 & 2) != 0) { return fieldLength_; } else { return FieldLengthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fieldLength_ = value;
      }
    }
    /// <summary>Gets whether the "field_length" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFieldLength {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "field_length" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFieldLength() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "field_width" field.</summary>
    public const int FieldWidthFieldNumber = 3;
    private readonly static int FieldWidthDefaultValue = 0;

    private int fieldWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FieldWidth {
      get { if ((_hasBits0 & 4) != 0) { return fieldWidth_; } else { return FieldWidthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fieldWidth_ = value;
      }
    }
    /// <summary>Gets whether the "field_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFieldWidth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "field_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFieldWidth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "boundary_width" field.</summary>
    public const int BoundaryWidthFieldNumber = 4;
    private readonly static int BoundaryWidthDefaultValue = 0;

    private int boundaryWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BoundaryWidth {
      get { if ((_hasBits0 & 8) != 0) { return boundaryWidth_; } else { return BoundaryWidthDefaultValue; } }
      set {
        _hasBits0 |= 8;
        boundaryWidth_ = value;
      }
    }
    /// <summary>Gets whether the "boundary_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBoundaryWidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "boundary_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBoundaryWidth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "referee_width" field.</summary>
    public const int RefereeWidthFieldNumber = 5;
    private readonly static int RefereeWidthDefaultValue = 0;

    private int refereeWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RefereeWidth {
      get { if ((_hasBits0 & 16) != 0) { return refereeWidth_; } else { return RefereeWidthDefaultValue; } }
      set {
        _hasBits0 |= 16;
        refereeWidth_ = value;
      }
    }
    /// <summary>Gets whether the "referee_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRefereeWidth {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "referee_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRefereeWidth() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "goal_width" field.</summary>
    public const int GoalWidthFieldNumber = 6;
    private readonly static int GoalWidthDefaultValue = 0;

    private int goalWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GoalWidth {
      get { if ((_hasBits0 & 32) != 0) { return goalWidth_; } else { return GoalWidthDefaultValue; } }
      set {
        _hasBits0 |= 32;
        goalWidth_ = value;
      }
    }
    /// <summary>Gets whether the "goal_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGoalWidth {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "goal_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGoalWidth() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "goal_depth" field.</summary>
    public const int GoalDepthFieldNumber = 7;
    private readonly static int GoalDepthDefaultValue = 0;

    private int goalDepth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GoalDepth {
      get { if ((_hasBits0 & 64) != 0) { return goalDepth_; } else { return GoalDepthDefaultValue; } }
      set {
        _hasBits0 |= 64;
        goalDepth_ = value;
      }
    }
    /// <summary>Gets whether the "goal_depth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGoalDepth {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "goal_depth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGoalDepth() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "goal_wall_width" field.</summary>
    public const int GoalWallWidthFieldNumber = 8;
    private readonly static int GoalWallWidthDefaultValue = 0;

    private int goalWallWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GoalWallWidth {
      get { if ((_hasBits0 & 128) != 0) { return goalWallWidth_; } else { return GoalWallWidthDefaultValue; } }
      set {
        _hasBits0 |= 128;
        goalWallWidth_ = value;
      }
    }
    /// <summary>Gets whether the "goal_wall_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGoalWallWidth {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "goal_wall_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGoalWallWidth() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "center_circle_radius" field.</summary>
    public const int CenterCircleRadiusFieldNumber = 9;
    private readonly static int CenterCircleRadiusDefaultValue = 0;

    private int centerCircleRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CenterCircleRadius {
      get { if ((_hasBits0 & 256) != 0) { return centerCircleRadius_; } else { return CenterCircleRadiusDefaultValue; } }
      set {
        _hasBits0 |= 256;
        centerCircleRadius_ = value;
      }
    }
    /// <summary>Gets whether the "center_circle_radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCenterCircleRadius {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "center_circle_radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCenterCircleRadius() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "defense_radius" field.</summary>
    public const int DefenseRadiusFieldNumber = 10;
    private readonly static int DefenseRadiusDefaultValue = 0;

    private int defenseRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefenseRadius {
      get { if ((_hasBits0 & 512) != 0) { return defenseRadius_; } else { return DefenseRadiusDefaultValue; } }
      set {
        _hasBits0 |= 512;
        defenseRadius_ = value;
      }
    }
    /// <summary>Gets whether the "defense_radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefenseRadius {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "defense_radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefenseRadius() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "defense_stretch" field.</summary>
    public const int DefenseStretchFieldNumber = 11;
    private readonly static int DefenseStretchDefaultValue = 0;

    private int defenseStretch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefenseStretch {
      get { if ((_hasBits0 & 1024) != 0) { return defenseStretch_; } else { return DefenseStretchDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        defenseStretch_ = value;
      }
    }
    /// <summary>Gets whether the "defense_stretch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefenseStretch {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "defense_stretch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefenseStretch() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "free_kick_from_defense_dist" field.</summary>
    public const int FreeKickFromDefenseDistFieldNumber = 12;
    private readonly static int FreeKickFromDefenseDistDefaultValue = 0;

    private int freeKickFromDefenseDist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeKickFromDefenseDist {
      get { if ((_hasBits0 & 2048) != 0) { return freeKickFromDefenseDist_; } else { return FreeKickFromDefenseDistDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        freeKickFromDefenseDist_ = value;
      }
    }
    /// <summary>Gets whether the "free_kick_from_defense_dist" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFreeKickFromDefenseDist {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "free_kick_from_defense_dist" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFreeKickFromDefenseDist() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "penalty_spot_from_field_line_dist" field.</summary>
    public const int PenaltySpotFromFieldLineDistFieldNumber = 13;
    private readonly static int PenaltySpotFromFieldLineDistDefaultValue = 0;

    private int penaltySpotFromFieldLineDist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PenaltySpotFromFieldLineDist {
      get { if ((_hasBits0 & 4096) != 0) { return penaltySpotFromFieldLineDist_; } else { return PenaltySpotFromFieldLineDistDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        penaltySpotFromFieldLineDist_ = value;
      }
    }
    /// <summary>Gets whether the "penalty_spot_from_field_line_dist" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPenaltySpotFromFieldLineDist {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "penalty_spot_from_field_line_dist" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPenaltySpotFromFieldLineDist() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "penalty_line_from_spot_dist" field.</summary>
    public const int PenaltyLineFromSpotDistFieldNumber = 14;
    private readonly static int PenaltyLineFromSpotDistDefaultValue = 0;

    private int penaltyLineFromSpotDist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PenaltyLineFromSpotDist {
      get { if ((_hasBits0 & 8192) != 0) { return penaltyLineFromSpotDist_; } else { return PenaltyLineFromSpotDistDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        penaltyLineFromSpotDist_ = value;
      }
    }
    /// <summary>Gets whether the "penalty_line_from_spot_dist" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPenaltyLineFromSpotDist {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "penalty_line_from_spot_dist" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPenaltyLineFromSpotDist() {
      _hasBits0 &= ~8192;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SSL_GeometryFieldSize);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SSL_GeometryFieldSize other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LineWidth != other.LineWidth) return false;
      if (FieldLength != other.FieldLength) return false;
      if (FieldWidth != other.FieldWidth) return false;
      if (BoundaryWidth != other.BoundaryWidth) return false;
      if (RefereeWidth != other.RefereeWidth) return false;
      if (GoalWidth != other.GoalWidth) return false;
      if (GoalDepth != other.GoalDepth) return false;
      if (GoalWallWidth != other.GoalWallWidth) return false;
      if (CenterCircleRadius != other.CenterCircleRadius) return false;
      if (DefenseRadius != other.DefenseRadius) return false;
      if (DefenseStretch != other.DefenseStretch) return false;
      if (FreeKickFromDefenseDist != other.FreeKickFromDefenseDist) return false;
      if (PenaltySpotFromFieldLineDist != other.PenaltySpotFromFieldLineDist) return false;
      if (PenaltyLineFromSpotDist != other.PenaltyLineFromSpotDist) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLineWidth) hash ^= LineWidth.GetHashCode();
      if (HasFieldLength) hash ^= FieldLength.GetHashCode();
      if (HasFieldWidth) hash ^= FieldWidth.GetHashCode();
      if (HasBoundaryWidth) hash ^= BoundaryWidth.GetHashCode();
      if (HasRefereeWidth) hash ^= RefereeWidth.GetHashCode();
      if (HasGoalWidth) hash ^= GoalWidth.GetHashCode();
      if (HasGoalDepth) hash ^= GoalDepth.GetHashCode();
      if (HasGoalWallWidth) hash ^= GoalWallWidth.GetHashCode();
      if (HasCenterCircleRadius) hash ^= CenterCircleRadius.GetHashCode();
      if (HasDefenseRadius) hash ^= DefenseRadius.GetHashCode();
      if (HasDefenseStretch) hash ^= DefenseStretch.GetHashCode();
      if (HasFreeKickFromDefenseDist) hash ^= FreeKickFromDefenseDist.GetHashCode();
      if (HasPenaltySpotFromFieldLineDist) hash ^= PenaltySpotFromFieldLineDist.GetHashCode();
      if (HasPenaltyLineFromSpotDist) hash ^= PenaltyLineFromSpotDist.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLineWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(LineWidth);
      }
      if (HasFieldLength) {
        output.WriteRawTag(16);
        output.WriteInt32(FieldLength);
      }
      if (HasFieldWidth) {
        output.WriteRawTag(24);
        output.WriteInt32(FieldWidth);
      }
      if (HasBoundaryWidth) {
        output.WriteRawTag(32);
        output.WriteInt32(BoundaryWidth);
      }
      if (HasRefereeWidth) {
        output.WriteRawTag(40);
        output.WriteInt32(RefereeWidth);
      }
      if (HasGoalWidth) {
        output.WriteRawTag(48);
        output.WriteInt32(GoalWidth);
      }
      if (HasGoalDepth) {
        output.WriteRawTag(56);
        output.WriteInt32(GoalDepth);
      }
      if (HasGoalWallWidth) {
        output.WriteRawTag(64);
        output.WriteInt32(GoalWallWidth);
      }
      if (HasCenterCircleRadius) {
        output.WriteRawTag(72);
        output.WriteInt32(CenterCircleRadius);
      }
      if (HasDefenseRadius) {
        output.WriteRawTag(80);
        output.WriteInt32(DefenseRadius);
      }
      if (HasDefenseStretch) {
        output.WriteRawTag(88);
        output.WriteInt32(DefenseStretch);
      }
      if (HasFreeKickFromDefenseDist) {
        output.WriteRawTag(96);
        output.WriteInt32(FreeKickFromDefenseDist);
      }
      if (HasPenaltySpotFromFieldLineDist) {
        output.WriteRawTag(104);
        output.WriteInt32(PenaltySpotFromFieldLineDist);
      }
      if (HasPenaltyLineFromSpotDist) {
        output.WriteRawTag(112);
        output.WriteInt32(PenaltyLineFromSpotDist);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLineWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(LineWidth);
      }
      if (HasFieldLength) {
        output.WriteRawTag(16);
        output.WriteInt32(FieldLength);
      }
      if (HasFieldWidth) {
        output.WriteRawTag(24);
        output.WriteInt32(FieldWidth);
      }
      if (HasBoundaryWidth) {
        output.WriteRawTag(32);
        output.WriteInt32(BoundaryWidth);
      }
      if (HasRefereeWidth) {
        output.WriteRawTag(40);
        output.WriteInt32(RefereeWidth);
      }
      if (HasGoalWidth) {
        output.WriteRawTag(48);
        output.WriteInt32(GoalWidth);
      }
      if (HasGoalDepth) {
        output.WriteRawTag(56);
        output.WriteInt32(GoalDepth);
      }
      if (HasGoalWallWidth) {
        output.WriteRawTag(64);
        output.WriteInt32(GoalWallWidth);
      }
      if (HasCenterCircleRadius) {
        output.WriteRawTag(72);
        output.WriteInt32(CenterCircleRadius);
      }
      if (HasDefenseRadius) {
        output.WriteRawTag(80);
        output.WriteInt32(DefenseRadius);
      }
      if (HasDefenseStretch) {
        output.WriteRawTag(88);
        output.WriteInt32(DefenseStretch);
      }
      if (HasFreeKickFromDefenseDist) {
        output.WriteRawTag(96);
        output.WriteInt32(FreeKickFromDefenseDist);
      }
      if (HasPenaltySpotFromFieldLineDist) {
        output.WriteRawTag(104);
        output.WriteInt32(PenaltySpotFromFieldLineDist);
      }
      if (HasPenaltyLineFromSpotDist) {
        output.WriteRawTag(112);
        output.WriteInt32(PenaltyLineFromSpotDist);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLineWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LineWidth);
      }
      if (HasFieldLength) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FieldLength);
      }
      if (HasFieldWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FieldWidth);
      }
      if (HasBoundaryWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoundaryWidth);
      }
      if (HasRefereeWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RefereeWidth);
      }
      if (HasGoalWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoalWidth);
      }
      if (HasGoalDepth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoalDepth);
      }
      if (HasGoalWallWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoalWallWidth);
      }
      if (HasCenterCircleRadius) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CenterCircleRadius);
      }
      if (HasDefenseRadius) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefenseRadius);
      }
      if (HasDefenseStretch) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefenseStretch);
      }
      if (HasFreeKickFromDefenseDist) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeKickFromDefenseDist);
      }
      if (HasPenaltySpotFromFieldLineDist) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PenaltySpotFromFieldLineDist);
      }
      if (HasPenaltyLineFromSpotDist) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PenaltyLineFromSpotDist);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SSL_GeometryFieldSize other) {
      if (other == null) {
        return;
      }
      if (other.HasLineWidth) {
        LineWidth = other.LineWidth;
      }
      if (other.HasFieldLength) {
        FieldLength = other.FieldLength;
      }
      if (other.HasFieldWidth) {
        FieldWidth = other.FieldWidth;
      }
      if (other.HasBoundaryWidth) {
        BoundaryWidth = other.BoundaryWidth;
      }
      if (other.HasRefereeWidth) {
        RefereeWidth = other.RefereeWidth;
      }
      if (other.HasGoalWidth) {
        GoalWidth = other.GoalWidth;
      }
      if (other.HasGoalDepth) {
        GoalDepth = other.GoalDepth;
      }
      if (other.HasGoalWallWidth) {
        GoalWallWidth = other.GoalWallWidth;
      }
      if (other.HasCenterCircleRadius) {
        CenterCircleRadius = other.CenterCircleRadius;
      }
      if (other.HasDefenseRadius) {
        DefenseRadius = other.DefenseRadius;
      }
      if (other.HasDefenseStretch) {
        DefenseStretch = other.DefenseStretch;
      }
      if (other.HasFreeKickFromDefenseDist) {
        FreeKickFromDefenseDist = other.FreeKickFromDefenseDist;
      }
      if (other.HasPenaltySpotFromFieldLineDist) {
        PenaltySpotFromFieldLineDist = other.PenaltySpotFromFieldLineDist;
      }
      if (other.HasPenaltyLineFromSpotDist) {
        PenaltyLineFromSpotDist = other.PenaltyLineFromSpotDist;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LineWidth = input.ReadInt32();
            break;
          }
          case 16: {
            FieldLength = input.ReadInt32();
            break;
          }
          case 24: {
            FieldWidth = input.ReadInt32();
            break;
          }
          case 32: {
            BoundaryWidth = input.ReadInt32();
            break;
          }
          case 40: {
            RefereeWidth = input.ReadInt32();
            break;
          }
          case 48: {
            GoalWidth = input.ReadInt32();
            break;
          }
          case 56: {
            GoalDepth = input.ReadInt32();
            break;
          }
          case 64: {
            GoalWallWidth = input.ReadInt32();
            break;
          }
          case 72: {
            CenterCircleRadius = input.ReadInt32();
            break;
          }
          case 80: {
            DefenseRadius = input.ReadInt32();
            break;
          }
          case 88: {
            DefenseStretch = input.ReadInt32();
            break;
          }
          case 96: {
            FreeKickFromDefenseDist = input.ReadInt32();
            break;
          }
          case 104: {
            PenaltySpotFromFieldLineDist = input.ReadInt32();
            break;
          }
          case 112: {
            PenaltyLineFromSpotDist = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LineWidth = input.ReadInt32();
            break;
          }
          case 16: {
            FieldLength = input.ReadInt32();
            break;
          }
          case 24: {
            FieldWidth = input.ReadInt32();
            break;
          }
          case 32: {
            BoundaryWidth = input.ReadInt32();
            break;
          }
          case 40: {
            RefereeWidth = input.ReadInt32();
            break;
          }
          case 48: {
            GoalWidth = input.ReadInt32();
            break;
          }
          case 56: {
            GoalDepth = input.ReadInt32();
            break;
          }
          case 64: {
            GoalWallWidth = input.ReadInt32();
            break;
          }
          case 72: {
            CenterCircleRadius = input.ReadInt32();
            break;
          }
          case 80: {
            DefenseRadius = input.ReadInt32();
            break;
          }
          case 88: {
            DefenseStretch = input.ReadInt32();
            break;
          }
          case 96: {
            FreeKickFromDefenseDist = input.ReadInt32();
            break;
          }
          case 104: {
            PenaltySpotFromFieldLineDist = input.ReadInt32();
            break;
          }
          case 112: {
            PenaltyLineFromSpotDist = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SSL_GeometryData : pb::IMessage<SSL_GeometryData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SSL_GeometryData> _parser = new pb::MessageParser<SSL_GeometryData>(() => new SSL_GeometryData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SSL_GeometryData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SSL_GeometryData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SSL_GeometryData(SSL_GeometryData other) : this() {
      field_ = other.field_ != null ? other.field_.Clone() : null;
      calib_ = other.calib_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SSL_GeometryData Clone() {
      return new SSL_GeometryData(this);
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 1;
    private global::RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize Field {
      get { return field_; }
      set {
        field_ = value;
      }
    }

    /// <summary>Field number for the "calib" field.</summary>
    public const int CalibFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SSL_GeometryCameraCalibration> _repeated_calib_codec
        = pb::FieldCodec.ForMessage(18, global::SSL_GeometryCameraCalibration.Parser);
    private readonly pbc::RepeatedField<global::SSL_GeometryCameraCalibration> calib_ = new pbc::RepeatedField<global::SSL_GeometryCameraCalibration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SSL_GeometryCameraCalibration> Calib {
      get { return calib_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SSL_GeometryData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SSL_GeometryData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Field, other.Field)) return false;
      if(!calib_.Equals(other.calib_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (field_ != null) hash ^= Field.GetHashCode();
      hash ^= calib_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (field_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Field);
      }
      calib_.WriteTo(output, _repeated_calib_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (field_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Field);
      }
      calib_.WriteTo(ref output, _repeated_calib_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (field_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
      }
      size += calib_.CalculateSize(_repeated_calib_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SSL_GeometryData other) {
      if (other == null) {
        return;
      }
      if (other.field_ != null) {
        if (field_ == null) {
          Field = new global::RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize();
        }
        Field.MergeFrom(other.Field);
      }
      calib_.Add(other.calib_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (field_ == null) {
              Field = new global::RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize();
            }
            input.ReadMessage(Field);
            break;
          }
          case 18: {
            calib_.AddEntriesFrom(input, _repeated_calib_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (field_ == null) {
              Field = new global::RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize();
            }
            input.ReadMessage(Field);
            break;
          }
          case 18: {
            calib_.AddEntriesFrom(ref input, _repeated_calib_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
