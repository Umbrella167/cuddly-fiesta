// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages_robocup_ssl_detection.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from messages_robocup_ssl_detection.proto</summary>
public static partial class MessagesRobocupSslDetectionReflection {

  #region Descriptor
  /// <summary>File descriptor for messages_robocup_ssl_detection.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MessagesRobocupSslDetectionReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiRtZXNzYWdlc19yb2JvY3VwX3NzbF9kZXRlY3Rpb24ucHJvdG8ieAoRU1NM",
          "X0RldGVjdGlvbkJhbGwSEgoKY29uZmlkZW5jZRgBIAIoAhIMCgRhcmVhGAIg",
          "ASgNEgkKAXgYAyACKAISCQoBeRgEIAIoAhIJCgF6GAUgASgCEg8KB3BpeGVs",
          "X3gYBiACKAISDwoHcGl4ZWxfeRgHIAIoAiKXAQoSU1NMX0RldGVjdGlvblJv",
          "Ym90EhIKCmNvbmZpZGVuY2UYASACKAISEAoIcm9ib3RfaWQYAiABKA0SCQoB",
          "eBgDIAIoAhIJCgF5GAQgAigCEhMKC29yaWVudGF0aW9uGAUgASgCEg8KB3Bp",
          "eGVsX3gYBiACKAISDwoHcGl4ZWxfeRgHIAIoAhIOCgZoZWlnaHQYCCABKAIi",
          "2QEKElNTTF9EZXRlY3Rpb25GcmFtZRIUCgxmcmFtZV9udW1iZXIYASACKA0S",
          "EQoJdF9jYXB0dXJlGAIgAigBEg4KBnRfc2VudBgDIAIoARIRCgljYW1lcmFf",
          "aWQYBCACKA0SIQoFYmFsbHMYBSADKAsyEi5TU0xfRGV0ZWN0aW9uQmFsbBIq",
          "Cg1yb2JvdHNfeWVsbG93GAYgAygLMhMuU1NMX0RldGVjdGlvblJvYm90EigK",
          "C3JvYm90c19ibHVlGAcgAygLMhMuU1NMX0RldGVjdGlvblJvYm90"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::SSL_DetectionBall), global::SSL_DetectionBall.Parser, new[]{ "Confidence", "Area", "X", "Y", "Z", "PixelX", "PixelY" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SSL_DetectionRobot), global::SSL_DetectionRobot.Parser, new[]{ "Confidence", "RobotId", "X", "Y", "Orientation", "PixelX", "PixelY", "Height" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SSL_DetectionFrame), global::SSL_DetectionFrame.Parser, new[]{ "FrameNumber", "TCapture", "TSent", "CameraId", "Balls", "RobotsYellow", "RobotsBlue" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class SSL_DetectionBall : pb::IMessage<SSL_DetectionBall>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SSL_DetectionBall> _parser = new pb::MessageParser<SSL_DetectionBall>(() => new SSL_DetectionBall());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SSL_DetectionBall> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesRobocupSslDetectionReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_DetectionBall() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_DetectionBall(SSL_DetectionBall other) : this() {
    _hasBits0 = other._hasBits0;
    confidence_ = other.confidence_;
    area_ = other.area_;
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    pixelX_ = other.pixelX_;
    pixelY_ = other.pixelY_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_DetectionBall Clone() {
    return new SSL_DetectionBall(this);
  }

  /// <summary>Field number for the "confidence" field.</summary>
  public const int ConfidenceFieldNumber = 1;
  private readonly static float ConfidenceDefaultValue = 0F;

  private float confidence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Confidence {
    get { if ((_hasBits0 & 1) != 0) { return confidence_; } else { return ConfidenceDefaultValue; } }
    set {
      _hasBits0 |= 1;
      confidence_ = value;
    }
  }
  /// <summary>Gets whether the "confidence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConfidence {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "confidence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConfidence() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "area" field.</summary>
  public const int AreaFieldNumber = 2;
  private readonly static uint AreaDefaultValue = 0;

  private uint area_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Area {
    get { if ((_hasBits0 & 2) != 0) { return area_; } else { return AreaDefaultValue; } }
    set {
      _hasBits0 |= 2;
      area_ = value;
    }
  }
  /// <summary>Gets whether the "area" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasArea {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "area" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearArea() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 3;
  private readonly static float XDefaultValue = 0F;

  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float X {
    get { if ((_hasBits0 & 4) != 0) { return x_; } else { return XDefaultValue; } }
    set {
      _hasBits0 |= 4;
      x_ = value;
    }
  }
  /// <summary>Gets whether the "x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasX {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearX() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 4;
  private readonly static float YDefaultValue = 0F;

  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Y {
    get { if ((_hasBits0 & 8) != 0) { return y_; } else { return YDefaultValue; } }
    set {
      _hasBits0 |= 8;
      y_ = value;
    }
  }
  /// <summary>Gets whether the "y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasY {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearY() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 5;
  private readonly static float ZDefaultValue = 0F;

  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Z {
    get { if ((_hasBits0 & 16) != 0) { return z_; } else { return ZDefaultValue; } }
    set {
      _hasBits0 |= 16;
      z_ = value;
    }
  }
  /// <summary>Gets whether the "z" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasZ {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "z" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearZ() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "pixel_x" field.</summary>
  public const int PixelXFieldNumber = 6;
  private readonly static float PixelXDefaultValue = 0F;

  private float pixelX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PixelX {
    get { if ((_hasBits0 & 32) != 0) { return pixelX_; } else { return PixelXDefaultValue; } }
    set {
      _hasBits0 |= 32;
      pixelX_ = value;
    }
  }
  /// <summary>Gets whether the "pixel_x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPixelX {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "pixel_x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPixelX() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "pixel_y" field.</summary>
  public const int PixelYFieldNumber = 7;
  private readonly static float PixelYDefaultValue = 0F;

  private float pixelY_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PixelY {
    get { if ((_hasBits0 & 64) != 0) { return pixelY_; } else { return PixelYDefaultValue; } }
    set {
      _hasBits0 |= 64;
      pixelY_ = value;
    }
  }
  /// <summary>Gets whether the "pixel_y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPixelY {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "pixel_y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPixelY() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SSL_DetectionBall);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SSL_DetectionBall other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
    if (Area != other.Area) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PixelX, other.PixelX)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PixelY, other.PixelY)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasConfidence) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
    if (HasArea) hash ^= Area.GetHashCode();
    if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (HasPixelX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PixelX);
    if (HasPixelY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PixelY);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasConfidence) {
      output.WriteRawTag(13);
      output.WriteFloat(Confidence);
    }
    if (HasArea) {
      output.WriteRawTag(16);
      output.WriteUInt32(Area);
    }
    if (HasX) {
      output.WriteRawTag(29);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(37);
      output.WriteFloat(Y);
    }
    if (HasZ) {
      output.WriteRawTag(45);
      output.WriteFloat(Z);
    }
    if (HasPixelX) {
      output.WriteRawTag(53);
      output.WriteFloat(PixelX);
    }
    if (HasPixelY) {
      output.WriteRawTag(61);
      output.WriteFloat(PixelY);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasConfidence) {
      output.WriteRawTag(13);
      output.WriteFloat(Confidence);
    }
    if (HasArea) {
      output.WriteRawTag(16);
      output.WriteUInt32(Area);
    }
    if (HasX) {
      output.WriteRawTag(29);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(37);
      output.WriteFloat(Y);
    }
    if (HasZ) {
      output.WriteRawTag(45);
      output.WriteFloat(Z);
    }
    if (HasPixelX) {
      output.WriteRawTag(53);
      output.WriteFloat(PixelX);
    }
    if (HasPixelY) {
      output.WriteRawTag(61);
      output.WriteFloat(PixelY);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasConfidence) {
      size += 1 + 4;
    }
    if (HasArea) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Area);
    }
    if (HasX) {
      size += 1 + 4;
    }
    if (HasY) {
      size += 1 + 4;
    }
    if (HasZ) {
      size += 1 + 4;
    }
    if (HasPixelX) {
      size += 1 + 4;
    }
    if (HasPixelY) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SSL_DetectionBall other) {
    if (other == null) {
      return;
    }
    if (other.HasConfidence) {
      Confidence = other.Confidence;
    }
    if (other.HasArea) {
      Area = other.Area;
    }
    if (other.HasX) {
      X = other.X;
    }
    if (other.HasY) {
      Y = other.Y;
    }
    if (other.HasZ) {
      Z = other.Z;
    }
    if (other.HasPixelX) {
      PixelX = other.PixelX;
    }
    if (other.HasPixelY) {
      PixelY = other.PixelY;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Confidence = input.ReadFloat();
          break;
        }
        case 16: {
          Area = input.ReadUInt32();
          break;
        }
        case 29: {
          X = input.ReadFloat();
          break;
        }
        case 37: {
          Y = input.ReadFloat();
          break;
        }
        case 45: {
          Z = input.ReadFloat();
          break;
        }
        case 53: {
          PixelX = input.ReadFloat();
          break;
        }
        case 61: {
          PixelY = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Confidence = input.ReadFloat();
          break;
        }
        case 16: {
          Area = input.ReadUInt32();
          break;
        }
        case 29: {
          X = input.ReadFloat();
          break;
        }
        case 37: {
          Y = input.ReadFloat();
          break;
        }
        case 45: {
          Z = input.ReadFloat();
          break;
        }
        case 53: {
          PixelX = input.ReadFloat();
          break;
        }
        case 61: {
          PixelY = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class SSL_DetectionRobot : pb::IMessage<SSL_DetectionRobot>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SSL_DetectionRobot> _parser = new pb::MessageParser<SSL_DetectionRobot>(() => new SSL_DetectionRobot());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SSL_DetectionRobot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesRobocupSslDetectionReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_DetectionRobot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_DetectionRobot(SSL_DetectionRobot other) : this() {
    _hasBits0 = other._hasBits0;
    confidence_ = other.confidence_;
    robotId_ = other.robotId_;
    x_ = other.x_;
    y_ = other.y_;
    orientation_ = other.orientation_;
    pixelX_ = other.pixelX_;
    pixelY_ = other.pixelY_;
    height_ = other.height_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_DetectionRobot Clone() {
    return new SSL_DetectionRobot(this);
  }

  /// <summary>Field number for the "confidence" field.</summary>
  public const int ConfidenceFieldNumber = 1;
  private readonly static float ConfidenceDefaultValue = 0F;

  private float confidence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Confidence {
    get { if ((_hasBits0 & 1) != 0) { return confidence_; } else { return ConfidenceDefaultValue; } }
    set {
      _hasBits0 |= 1;
      confidence_ = value;
    }
  }
  /// <summary>Gets whether the "confidence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConfidence {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "confidence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConfidence() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "robot_id" field.</summary>
  public const int RobotIdFieldNumber = 2;
  private readonly static uint RobotIdDefaultValue = 0;

  private uint robotId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RobotId {
    get { if ((_hasBits0 & 2) != 0) { return robotId_; } else { return RobotIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      robotId_ = value;
    }
  }
  /// <summary>Gets whether the "robot_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRobotId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "robot_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRobotId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 3;
  private readonly static float XDefaultValue = 0F;

  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float X {
    get { if ((_hasBits0 & 4) != 0) { return x_; } else { return XDefaultValue; } }
    set {
      _hasBits0 |= 4;
      x_ = value;
    }
  }
  /// <summary>Gets whether the "x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasX {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearX() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 4;
  private readonly static float YDefaultValue = 0F;

  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Y {
    get { if ((_hasBits0 & 8) != 0) { return y_; } else { return YDefaultValue; } }
    set {
      _hasBits0 |= 8;
      y_ = value;
    }
  }
  /// <summary>Gets whether the "y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasY {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearY() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "orientation" field.</summary>
  public const int OrientationFieldNumber = 5;
  private readonly static float OrientationDefaultValue = 0F;

  private float orientation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Orientation {
    get { if ((_hasBits0 & 16) != 0) { return orientation_; } else { return OrientationDefaultValue; } }
    set {
      _hasBits0 |= 16;
      orientation_ = value;
    }
  }
  /// <summary>Gets whether the "orientation" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOrientation {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "orientation" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOrientation() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "pixel_x" field.</summary>
  public const int PixelXFieldNumber = 6;
  private readonly static float PixelXDefaultValue = 0F;

  private float pixelX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PixelX {
    get { if ((_hasBits0 & 32) != 0) { return pixelX_; } else { return PixelXDefaultValue; } }
    set {
      _hasBits0 |= 32;
      pixelX_ = value;
    }
  }
  /// <summary>Gets whether the "pixel_x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPixelX {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "pixel_x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPixelX() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "pixel_y" field.</summary>
  public const int PixelYFieldNumber = 7;
  private readonly static float PixelYDefaultValue = 0F;

  private float pixelY_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PixelY {
    get { if ((_hasBits0 & 64) != 0) { return pixelY_; } else { return PixelYDefaultValue; } }
    set {
      _hasBits0 |= 64;
      pixelY_ = value;
    }
  }
  /// <summary>Gets whether the "pixel_y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPixelY {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "pixel_y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPixelY() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "height" field.</summary>
  public const int HeightFieldNumber = 8;
  private readonly static float HeightDefaultValue = 0F;

  private float height_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Height {
    get { if ((_hasBits0 & 128) != 0) { return height_; } else { return HeightDefaultValue; } }
    set {
      _hasBits0 |= 128;
      height_ = value;
    }
  }
  /// <summary>Gets whether the "height" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHeight {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "height" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHeight() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SSL_DetectionRobot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SSL_DetectionRobot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
    if (RobotId != other.RobotId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Orientation, other.Orientation)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PixelX, other.PixelX)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PixelY, other.PixelY)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasConfidence) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
    if (HasRobotId) hash ^= RobotId.GetHashCode();
    if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (HasOrientation) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Orientation);
    if (HasPixelX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PixelX);
    if (HasPixelY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PixelY);
    if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasConfidence) {
      output.WriteRawTag(13);
      output.WriteFloat(Confidence);
    }
    if (HasRobotId) {
      output.WriteRawTag(16);
      output.WriteUInt32(RobotId);
    }
    if (HasX) {
      output.WriteRawTag(29);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(37);
      output.WriteFloat(Y);
    }
    if (HasOrientation) {
      output.WriteRawTag(45);
      output.WriteFloat(Orientation);
    }
    if (HasPixelX) {
      output.WriteRawTag(53);
      output.WriteFloat(PixelX);
    }
    if (HasPixelY) {
      output.WriteRawTag(61);
      output.WriteFloat(PixelY);
    }
    if (HasHeight) {
      output.WriteRawTag(69);
      output.WriteFloat(Height);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasConfidence) {
      output.WriteRawTag(13);
      output.WriteFloat(Confidence);
    }
    if (HasRobotId) {
      output.WriteRawTag(16);
      output.WriteUInt32(RobotId);
    }
    if (HasX) {
      output.WriteRawTag(29);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(37);
      output.WriteFloat(Y);
    }
    if (HasOrientation) {
      output.WriteRawTag(45);
      output.WriteFloat(Orientation);
    }
    if (HasPixelX) {
      output.WriteRawTag(53);
      output.WriteFloat(PixelX);
    }
    if (HasPixelY) {
      output.WriteRawTag(61);
      output.WriteFloat(PixelY);
    }
    if (HasHeight) {
      output.WriteRawTag(69);
      output.WriteFloat(Height);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasConfidence) {
      size += 1 + 4;
    }
    if (HasRobotId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RobotId);
    }
    if (HasX) {
      size += 1 + 4;
    }
    if (HasY) {
      size += 1 + 4;
    }
    if (HasOrientation) {
      size += 1 + 4;
    }
    if (HasPixelX) {
      size += 1 + 4;
    }
    if (HasPixelY) {
      size += 1 + 4;
    }
    if (HasHeight) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SSL_DetectionRobot other) {
    if (other == null) {
      return;
    }
    if (other.HasConfidence) {
      Confidence = other.Confidence;
    }
    if (other.HasRobotId) {
      RobotId = other.RobotId;
    }
    if (other.HasX) {
      X = other.X;
    }
    if (other.HasY) {
      Y = other.Y;
    }
    if (other.HasOrientation) {
      Orientation = other.Orientation;
    }
    if (other.HasPixelX) {
      PixelX = other.PixelX;
    }
    if (other.HasPixelY) {
      PixelY = other.PixelY;
    }
    if (other.HasHeight) {
      Height = other.Height;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Confidence = input.ReadFloat();
          break;
        }
        case 16: {
          RobotId = input.ReadUInt32();
          break;
        }
        case 29: {
          X = input.ReadFloat();
          break;
        }
        case 37: {
          Y = input.ReadFloat();
          break;
        }
        case 45: {
          Orientation = input.ReadFloat();
          break;
        }
        case 53: {
          PixelX = input.ReadFloat();
          break;
        }
        case 61: {
          PixelY = input.ReadFloat();
          break;
        }
        case 69: {
          Height = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Confidence = input.ReadFloat();
          break;
        }
        case 16: {
          RobotId = input.ReadUInt32();
          break;
        }
        case 29: {
          X = input.ReadFloat();
          break;
        }
        case 37: {
          Y = input.ReadFloat();
          break;
        }
        case 45: {
          Orientation = input.ReadFloat();
          break;
        }
        case 53: {
          PixelX = input.ReadFloat();
          break;
        }
        case 61: {
          PixelY = input.ReadFloat();
          break;
        }
        case 69: {
          Height = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class SSL_DetectionFrame : pb::IMessage<SSL_DetectionFrame>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SSL_DetectionFrame> _parser = new pb::MessageParser<SSL_DetectionFrame>(() => new SSL_DetectionFrame());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SSL_DetectionFrame> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesRobocupSslDetectionReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_DetectionFrame() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_DetectionFrame(SSL_DetectionFrame other) : this() {
    _hasBits0 = other._hasBits0;
    frameNumber_ = other.frameNumber_;
    tCapture_ = other.tCapture_;
    tSent_ = other.tSent_;
    cameraId_ = other.cameraId_;
    balls_ = other.balls_.Clone();
    robotsYellow_ = other.robotsYellow_.Clone();
    robotsBlue_ = other.robotsBlue_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SSL_DetectionFrame Clone() {
    return new SSL_DetectionFrame(this);
  }

  /// <summary>Field number for the "frame_number" field.</summary>
  public const int FrameNumberFieldNumber = 1;
  private readonly static uint FrameNumberDefaultValue = 0;

  private uint frameNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FrameNumber {
    get { if ((_hasBits0 & 1) != 0) { return frameNumber_; } else { return FrameNumberDefaultValue; } }
    set {
      _hasBits0 |= 1;
      frameNumber_ = value;
    }
  }
  /// <summary>Gets whether the "frame_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFrameNumber {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "frame_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFrameNumber() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "t_capture" field.</summary>
  public const int TCaptureFieldNumber = 2;
  private readonly static double TCaptureDefaultValue = 0D;

  private double tCapture_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double TCapture {
    get { if ((_hasBits0 & 2) != 0) { return tCapture_; } else { return TCaptureDefaultValue; } }
    set {
      _hasBits0 |= 2;
      tCapture_ = value;
    }
  }
  /// <summary>Gets whether the "t_capture" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTCapture {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "t_capture" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTCapture() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "t_sent" field.</summary>
  public const int TSentFieldNumber = 3;
  private readonly static double TSentDefaultValue = 0D;

  private double tSent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double TSent {
    get { if ((_hasBits0 & 4) != 0) { return tSent_; } else { return TSentDefaultValue; } }
    set {
      _hasBits0 |= 4;
      tSent_ = value;
    }
  }
  /// <summary>Gets whether the "t_sent" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTSent {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "t_sent" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTSent() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "camera_id" field.</summary>
  public const int CameraIdFieldNumber = 4;
  private readonly static uint CameraIdDefaultValue = 0;

  private uint cameraId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CameraId {
    get { if ((_hasBits0 & 8) != 0) { return cameraId_; } else { return CameraIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      cameraId_ = value;
    }
  }
  /// <summary>Gets whether the "camera_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCameraId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "camera_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCameraId() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "balls" field.</summary>
  public const int BallsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::SSL_DetectionBall> _repeated_balls_codec
      = pb::FieldCodec.ForMessage(42, global::SSL_DetectionBall.Parser);
  private readonly pbc::RepeatedField<global::SSL_DetectionBall> balls_ = new pbc::RepeatedField<global::SSL_DetectionBall>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::SSL_DetectionBall> Balls {
    get { return balls_; }
  }

  /// <summary>Field number for the "robots_yellow" field.</summary>
  public const int RobotsYellowFieldNumber = 6;
  private static readonly pb::FieldCodec<global::SSL_DetectionRobot> _repeated_robotsYellow_codec
      = pb::FieldCodec.ForMessage(50, global::SSL_DetectionRobot.Parser);
  private readonly pbc::RepeatedField<global::SSL_DetectionRobot> robotsYellow_ = new pbc::RepeatedField<global::SSL_DetectionRobot>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::SSL_DetectionRobot> RobotsYellow {
    get { return robotsYellow_; }
  }

  /// <summary>Field number for the "robots_blue" field.</summary>
  public const int RobotsBlueFieldNumber = 7;
  private static readonly pb::FieldCodec<global::SSL_DetectionRobot> _repeated_robotsBlue_codec
      = pb::FieldCodec.ForMessage(58, global::SSL_DetectionRobot.Parser);
  private readonly pbc::RepeatedField<global::SSL_DetectionRobot> robotsBlue_ = new pbc::RepeatedField<global::SSL_DetectionRobot>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::SSL_DetectionRobot> RobotsBlue {
    get { return robotsBlue_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SSL_DetectionFrame);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SSL_DetectionFrame other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FrameNumber != other.FrameNumber) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TCapture, other.TCapture)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TSent, other.TSent)) return false;
    if (CameraId != other.CameraId) return false;
    if(!balls_.Equals(other.balls_)) return false;
    if(!robotsYellow_.Equals(other.robotsYellow_)) return false;
    if(!robotsBlue_.Equals(other.robotsBlue_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFrameNumber) hash ^= FrameNumber.GetHashCode();
    if (HasTCapture) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TCapture);
    if (HasTSent) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TSent);
    if (HasCameraId) hash ^= CameraId.GetHashCode();
    hash ^= balls_.GetHashCode();
    hash ^= robotsYellow_.GetHashCode();
    hash ^= robotsBlue_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFrameNumber) {
      output.WriteRawTag(8);
      output.WriteUInt32(FrameNumber);
    }
    if (HasTCapture) {
      output.WriteRawTag(17);
      output.WriteDouble(TCapture);
    }
    if (HasTSent) {
      output.WriteRawTag(25);
      output.WriteDouble(TSent);
    }
    if (HasCameraId) {
      output.WriteRawTag(32);
      output.WriteUInt32(CameraId);
    }
    balls_.WriteTo(output, _repeated_balls_codec);
    robotsYellow_.WriteTo(output, _repeated_robotsYellow_codec);
    robotsBlue_.WriteTo(output, _repeated_robotsBlue_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFrameNumber) {
      output.WriteRawTag(8);
      output.WriteUInt32(FrameNumber);
    }
    if (HasTCapture) {
      output.WriteRawTag(17);
      output.WriteDouble(TCapture);
    }
    if (HasTSent) {
      output.WriteRawTag(25);
      output.WriteDouble(TSent);
    }
    if (HasCameraId) {
      output.WriteRawTag(32);
      output.WriteUInt32(CameraId);
    }
    balls_.WriteTo(ref output, _repeated_balls_codec);
    robotsYellow_.WriteTo(ref output, _repeated_robotsYellow_codec);
    robotsBlue_.WriteTo(ref output, _repeated_robotsBlue_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFrameNumber) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameNumber);
    }
    if (HasTCapture) {
      size += 1 + 8;
    }
    if (HasTSent) {
      size += 1 + 8;
    }
    if (HasCameraId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CameraId);
    }
    size += balls_.CalculateSize(_repeated_balls_codec);
    size += robotsYellow_.CalculateSize(_repeated_robotsYellow_codec);
    size += robotsBlue_.CalculateSize(_repeated_robotsBlue_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SSL_DetectionFrame other) {
    if (other == null) {
      return;
    }
    if (other.HasFrameNumber) {
      FrameNumber = other.FrameNumber;
    }
    if (other.HasTCapture) {
      TCapture = other.TCapture;
    }
    if (other.HasTSent) {
      TSent = other.TSent;
    }
    if (other.HasCameraId) {
      CameraId = other.CameraId;
    }
    balls_.Add(other.balls_);
    robotsYellow_.Add(other.robotsYellow_);
    robotsBlue_.Add(other.robotsBlue_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FrameNumber = input.ReadUInt32();
          break;
        }
        case 17: {
          TCapture = input.ReadDouble();
          break;
        }
        case 25: {
          TSent = input.ReadDouble();
          break;
        }
        case 32: {
          CameraId = input.ReadUInt32();
          break;
        }
        case 42: {
          balls_.AddEntriesFrom(input, _repeated_balls_codec);
          break;
        }
        case 50: {
          robotsYellow_.AddEntriesFrom(input, _repeated_robotsYellow_codec);
          break;
        }
        case 58: {
          robotsBlue_.AddEntriesFrom(input, _repeated_robotsBlue_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          FrameNumber = input.ReadUInt32();
          break;
        }
        case 17: {
          TCapture = input.ReadDouble();
          break;
        }
        case 25: {
          TSent = input.ReadDouble();
          break;
        }
        case 32: {
          CameraId = input.ReadUInt32();
          break;
        }
        case 42: {
          balls_.AddEntriesFrom(ref input, _repeated_balls_codec);
          break;
        }
        case 50: {
          robotsYellow_.AddEntriesFrom(ref input, _repeated_robotsYellow_codec);
          break;
        }
        case 58: {
          robotsBlue_.AddEntriesFrom(ref input, _repeated_robotsBlue_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
