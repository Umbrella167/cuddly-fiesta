// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ssl_game_event_2019.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ssl_game_event_2019.proto</summary>
public static partial class SslGameEvent2019Reflection {

  #region Descriptor
  /// <summary>File descriptor for ssl_game_event_2019.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SslGameEvent2019Reflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Chlzc2xfZ2FtZV9ldmVudF8yMDE5LnByb3RvGiBzc2xfZ2FtZV9jb250cm9s",
          "bGVyX2NvbW1vbi5wcm90byL+LQoJR2FtZUV2ZW50EhwKBHR5cGUYKCACKA4y",
          "Di5HYW1lRXZlbnRUeXBlEg4KBm9yaWdpbhgpIAMoCRInCghwcmVwYXJlZBgB",
          "IAEoCzITLkdhbWVFdmVudC5QcmVwYXJlZEgAEjoKE25vX3Byb2dyZXNzX2lu",
          "X2dhbWUYAiABKAsyGy5HYW1lRXZlbnQuTm9Qcm9ncmVzc0luR2FtZUgAEjYK",
          "EHBsYWNlbWVudF9mYWlsZWQYAyABKAsyGi5HYW1lRXZlbnQuUGxhY2VtZW50",
          "RmFpbGVkSAASPAoTcGxhY2VtZW50X3N1Y2NlZWRlZBgFIAEoCzIdLkdhbWVF",
          "dmVudC5QbGFjZW1lbnRTdWNjZWVkZWRIABI2ChBib3Rfc3Vic3RpdHV0aW9u",
          "GCUgASgLMhouR2FtZUV2ZW50LkJvdFN1YnN0aXR1dGlvbkgAEjMKD3Rvb19t",
          "YW55X3JvYm90cxgmIAEoCzIYLkdhbWVFdmVudC5Ub29NYW55Um9ib3RzSAAS",
          "PgoaYmFsbF9sZWZ0X2ZpZWxkX3RvdWNoX2xpbmUYBiABKAsyGC5HYW1lRXZl",
          "bnQuQmFsbExlZnRGaWVsZEgAEj0KGWJhbGxfbGVmdF9maWVsZF9nb2FsX2xp",
          "bmUYByABKAsyGC5HYW1lRXZlbnQuQmFsbExlZnRGaWVsZEgAEigKDXBvc3Np",
          "YmxlX2dvYWwYJyABKAsyDy5HYW1lRXZlbnQuR29hbEgAEh8KBGdvYWwYCCAB",
          "KAsyDy5HYW1lRXZlbnQuR29hbEgAEjAKDWluZGlyZWN0X2dvYWwYCSABKAsy",
          "Fy5HYW1lRXZlbnQuSW5kaXJlY3RHb2FsSAASLgoMY2hpcHBlZF9nb2FsGAog",
          "ASgLMhYuR2FtZUV2ZW50LkNoaXBwZWRHb2FsSAASLgoMYWltbGVzc19raWNr",
          "GAsgASgLMhYuR2FtZUV2ZW50LkFpbWxlc3NLaWNrSAASLgoMa2lja190aW1l",
          "b3V0GAwgASgLMhYuR2FtZUV2ZW50LktpY2tUaW1lb3V0SAASNQoQa2VlcGVy",
          "X2hlbGRfYmFsbBgNIAEoCzIZLkdhbWVFdmVudC5LZWVwZXJIZWxkQmFsbEgA",
          "EkwKHGF0dGFja2VyX2RvdWJsZV90b3VjaGVkX2JhbGwYDiABKAsyJC5HYW1l",
          "RXZlbnQuQXR0YWNrZXJEb3VibGVUb3VjaGVkQmFsbEgAElwKJWF0dGFja2Vy",
          "X3RvdWNoZWRfYmFsbF9pbl9kZWZlbnNlX2FyZWEYDyABKAsyKy5HYW1lRXZl",
          "bnQuQXR0YWNrZXJUb3VjaGVkQmFsbEluRGVmZW5zZUFyZWFIABJkCilhdHRh",
          "Y2tlcl90b3VjaGVkX29wcG9uZW50X2luX2RlZmVuc2VfYXJlYRgQIAEoCzIv",
          "LkdhbWVFdmVudC5BdHRhY2tlclRvdWNoZWRPcHBvbmVudEluRGVmZW5zZUFy",
          "ZWFIABJsCjFhdHRhY2tlcl90b3VjaGVkX29wcG9uZW50X2luX2RlZmVuc2Vf",
          "YXJlYV9za2lwcGVkGCogASgLMi8uR2FtZUV2ZW50LkF0dGFja2VyVG91Y2hl",
          "ZE9wcG9uZW50SW5EZWZlbnNlQXJlYUgAEkUKGWJvdF9kcmliYmxlZF9iYWxs",
          "X3Rvb19mYXIYESABKAsyIC5HYW1lRXZlbnQuQm90RHJpYmJsZWRCYWxsVG9v",
          "RmFySAASQwoYYm90X2tpY2tlZF9iYWxsX3Rvb19mYXN0GBIgASgLMh8uR2Ft",
          "ZUV2ZW50LkJvdEtpY2tlZEJhbGxUb29GYXN0SAASVgoiYXR0YWNrZXJfdG9v",
          "X2Nsb3NlX3RvX2RlZmVuc2VfYXJlYRgTIAEoCzIoLkdhbWVFdmVudC5BdHRh",
          "Y2tlclRvb0Nsb3NlVG9EZWZlbnNlQXJlYUgAEkUKGGJvdF9pbnRlcmZlcmVk",
          "X3BsYWNlbWVudBgUIAEoCzIhLkdhbWVFdmVudC5Cb3RJbnRlcmZlcmVkUGxh",
          "Y2VtZW50SAASMwoPYm90X2NyYXNoX2RyYXduGBUgASgLMhguR2FtZUV2ZW50",
          "LkJvdENyYXNoRHJhd25IABI1ChBib3RfY3Jhc2hfdW5pcXVlGBYgASgLMhku",
          "R2FtZUV2ZW50LkJvdENyYXNoVW5pcXVlSAASPQoYYm90X2NyYXNoX3VuaXF1",
          "ZV9za2lwcGVkGBcgASgLMhkuR2FtZUV2ZW50LkJvdENyYXNoVW5pcXVlSAAS",
          "MQoOYm90X3B1c2hlZF9ib3QYGCABKAsyFy5HYW1lRXZlbnQuQm90UHVzaGVk",
          "Qm90SAASOQoWYm90X3B1c2hlZF9ib3Rfc2tpcHBlZBgZIAEoCzIXLkdhbWVF",
          "dmVudC5Cb3RQdXNoZWRCb3RIABJIChpib3RfaGVsZF9iYWxsX2RlbGliZXJh",
          "dGVseRgaIAEoCzIiLkdhbWVFdmVudC5Cb3RIZWxkQmFsbERlbGliZXJhdGVs",
          "eUgAEjMKD2JvdF90aXBwZWRfb3ZlchgbIAEoCzIYLkdhbWVFdmVudC5Cb3RU",
          "aXBwZWRPdmVySAASOwoUYm90X3Rvb19mYXN0X2luX3N0b3AYHCABKAsyGy5H",
          "YW1lRXZlbnQuQm90VG9vRmFzdEluU3RvcEgAElIKIGRlZmVuZGVyX3Rvb19j",
          "bG9zZV90b19raWNrX3BvaW50GB0gASgLMiYuR2FtZUV2ZW50LkRlZmVuZGVy",
          "VG9vQ2xvc2VUb0tpY2tQb2ludEgAElcKImRlZmVuZGVyX2luX2RlZmVuc2Vf",
          "YXJlYV9wYXJ0aWFsbHkYHiABKAsyKS5HYW1lRXZlbnQuRGVmZW5kZXJJbkRl",
          "ZmVuc2VBcmVhUGFydGlhbGx5SAASRAoYZGVmZW5kZXJfaW5fZGVmZW5zZV9h",
          "cmVhGB8gASgLMiAuR2FtZUV2ZW50LkRlZmVuZGVySW5EZWZlbnNlQXJlYUgA",
          "EjIKDm11bHRpcGxlX2NhcmRzGCAgASgLMhguR2FtZUV2ZW50Lk11bHRpcGxl",
          "Q2FyZHNIABJLChttdWx0aXBsZV9wbGFjZW1lbnRfZmFpbHVyZXMYISABKAsy",
          "JC5HYW1lRXZlbnQuTXVsdGlwbGVQbGFjZW1lbnRGYWlsdXJlc0gAEjIKDm11",
          "bHRpcGxlX2ZvdWxzGCIgASgLMhguR2FtZUV2ZW50Lk11bHRpcGxlRm91bHNI",
          "ABJHChl1bnNwb3J0aW5nX2JlaGF2aW9yX21pbm9yGCMgASgLMiIuR2FtZUV2",
          "ZW50LlVuc3BvcnRpbmdCZWhhdmlvck1pbm9ySAASRwoZdW5zcG9ydGluZ19i",
          "ZWhhdmlvcl9tYWpvchgkIAEoCzIiLkdhbWVFdmVudC5VbnNwb3J0aW5nQmVo",
          "YXZpb3JNYWpvckgAGlQKDUJhbGxMZWZ0RmllbGQSFgoHYnlfdGVhbRgBIAIo",
          "DjIFLlRlYW0SDgoGYnlfYm90GAIgASgNEhsKCGxvY2F0aW9uGAMgASgLMgku",
          "TG9jYXRpb24adAoLQWltbGVzc0tpY2sSFgoHYnlfdGVhbRgBIAIoDjIFLlRl",
          "YW0SDgoGYnlfYm90GAIgASgNEhsKCGxvY2F0aW9uGAMgASgLMgkuTG9jYXRp",
          "b24SIAoNa2lja19sb2NhdGlvbhgEIAEoCzIJLkxvY2F0aW9uGo8BCgRHb2Fs",
          "EhYKB2J5X3RlYW0YASACKA4yBS5UZWFtEhsKDGtpY2tpbmdfdGVhbRgGIAEo",
          "DjIFLlRlYW0SEwoLa2lja2luZ19ib3QYAiABKA0SGwoIbG9jYXRpb24YAyAB",
          "KAsyCS5Mb2NhdGlvbhIgCg1raWNrX2xvY2F0aW9uGAQgASgLMgkuTG9jYXRp",
          "b24adQoMSW5kaXJlY3RHb2FsEhYKB2J5X3RlYW0YASACKA4yBS5UZWFtEg4K",
          "BmJ5X2JvdBgCIAEoDRIbCghsb2NhdGlvbhgDIAEoCzIJLkxvY2F0aW9uEiAK",
          "DWtpY2tfbG9jYXRpb24YBCABKAsyCS5Mb2NhdGlvbhqNAQoLQ2hpcHBlZEdv",
          "YWwSFgoHYnlfdGVhbRgBIAIoDjIFLlRlYW0SDgoGYnlfYm90GAIgASgNEhsK",
          "CGxvY2F0aW9uGAMgASgLMgkuTG9jYXRpb24SIAoNa2lja19sb2NhdGlvbhgE",
          "IAEoCzIJLkxvY2F0aW9uEhcKD21heF9iYWxsX2hlaWdodBgFIAEoAhpmChBC",
          "b3RUb29GYXN0SW5TdG9wEhYKB2J5X3RlYW0YASACKA4yBS5UZWFtEg4KBmJ5",
          "X2JvdBgCIAEoDRIbCghsb2NhdGlvbhgDIAEoCzIJLkxvY2F0aW9uEg0KBXNw",
          "ZWVkGAQgASgCGnQKG0RlZmVuZGVyVG9vQ2xvc2VUb0tpY2tQb2ludBIWCgdi",
          "eV90ZWFtGAEgAigOMgUuVGVhbRIOCgZieV9ib3QYAiABKA0SGwoIbG9jYXRp",
          "b24YAyABKAsyCS5Mb2NhdGlvbhIQCghkaXN0YW5jZRgEIAEoAhqQAQoNQm90",
          "Q3Jhc2hEcmF3bhISCgpib3RfeWVsbG93GAEgASgNEhAKCGJvdF9ibHVlGAIg",
          "ASgNEhsKCGxvY2F0aW9uGAMgASgLMgkuTG9jYXRpb24SEwoLY3Jhc2hfc3Bl",
          "ZWQYBCABKAISEgoKc3BlZWRfZGlmZhgFIAEoAhITCgtjcmFzaF9hbmdsZRgG",
          "IAEoAhqlAQoOQm90Q3Jhc2hVbmlxdWUSFgoHYnlfdGVhbRgBIAIoDjIFLlRl",
          "YW0SEAoIdmlvbGF0b3IYAiABKA0SDgoGdmljdGltGAMgASgNEhsKCGxvY2F0",
          "aW9uGAQgASgLMgkuTG9jYXRpb24SEwoLY3Jhc2hfc3BlZWQYBSABKAISEgoK",
          "c3BlZWRfZGlmZhgGIAEoAhITCgtjcmFzaF9hbmdsZRgHIAEoAhp+CgxCb3RQ",
          "dXNoZWRCb3QSFgoHYnlfdGVhbRgBIAIoDjIFLlRlYW0SEAoIdmlvbGF0b3IY",
          "AiABKA0SDgoGdmljdGltGAMgASgNEhsKCGxvY2F0aW9uGAQgASgLMgkuTG9j",
          "YXRpb24SFwoPcHVzaGVkX2Rpc3RhbmNlGAUgASgCGlQKDUJvdFRpcHBlZE92",
          "ZXISFgoHYnlfdGVhbRgBIAIoDjIFLlRlYW0SDgoGYnlfYm90GAIgASgNEhsK",
          "CGxvY2F0aW9uGAMgASgLMgkuTG9jYXRpb24abgoVRGVmZW5kZXJJbkRlZmVu",
          "c2VBcmVhEhYKB2J5X3RlYW0YASACKA4yBS5UZWFtEg4KBmJ5X2JvdBgCIAEo",
          "DRIbCghsb2NhdGlvbhgDIAEoCzIJLkxvY2F0aW9uEhAKCGRpc3RhbmNlGAQg",
          "ASgCGncKHkRlZmVuZGVySW5EZWZlbnNlQXJlYVBhcnRpYWxseRIWCgdieV90",
          "ZWFtGAEgAigOMgUuVGVhbRIOCgZieV9ib3QYAiABKA0SGwoIbG9jYXRpb24Y",
          "AyABKAsyCS5Mb2NhdGlvbhIQCghkaXN0YW5jZRgEIAEoAhp5CiBBdHRhY2tl",
          "clRvdWNoZWRCYWxsSW5EZWZlbnNlQXJlYRIWCgdieV90ZWFtGAEgAigOMgUu",
          "VGVhbRIOCgZieV9ib3QYAiABKA0SGwoIbG9jYXRpb24YAyABKAsyCS5Mb2Nh",
          "dGlvbhIQCghkaXN0YW5jZRgEIAEoAhqIAQoUQm90S2lja2VkQmFsbFRvb0Zh",
          "c3QSFgoHYnlfdGVhbRgBIAIoDjIFLlRlYW0SDgoGYnlfYm90GAIgASgNEhsK",
          "CGxvY2F0aW9uGAMgASgLMgkuTG9jYXRpb24SGgoSaW5pdGlhbF9iYWxsX3Nw",
          "ZWVkGAQgASgCEg8KB2NoaXBwZWQYBSABKAgacQoVQm90RHJpYmJsZWRCYWxs",
          "VG9vRmFyEhYKB2J5X3RlYW0YASACKA4yBS5UZWFtEg4KBmJ5X2JvdBgCIAEo",
          "DRIYCgVzdGFydBgDIAEoCzIJLkxvY2F0aW9uEhYKA2VuZBgEIAEoCzIJLkxv",
          "Y2F0aW9uGnsKJEF0dGFja2VyVG91Y2hlZE9wcG9uZW50SW5EZWZlbnNlQXJl",
          "YRIWCgdieV90ZWFtGAEgAigOMgUuVGVhbRIOCgZieV9ib3QYAiABKA0SDgoG",
          "dmljdGltGAQgASgNEhsKCGxvY2F0aW9uGAMgASgLMgkuTG9jYXRpb24aYAoZ",
          "QXR0YWNrZXJEb3VibGVUb3VjaGVkQmFsbBIWCgdieV90ZWFtGAEgAigOMgUu",
          "VGVhbRIOCgZieV9ib3QYAiABKA0SGwoIbG9jYXRpb24YAyABKAsyCS5Mb2Nh",
          "dGlvbhp2Ch1BdHRhY2tlclRvb0Nsb3NlVG9EZWZlbnNlQXJlYRIWCgdieV90",
          "ZWFtGAEgAigOMgUuVGVhbRIOCgZieV9ib3QYAiABKA0SGwoIbG9jYXRpb24Y",
          "AyABKAsyCS5Mb2NhdGlvbhIQCghkaXN0YW5jZRgEIAEoAhpwChdCb3RIZWxk",
          "QmFsbERlbGliZXJhdGVseRIWCgdieV90ZWFtGAEgAigOMgUuVGVhbRIOCgZi",
          "eV9ib3QYAiABKA0SGwoIbG9jYXRpb24YAyABKAsyCS5Mb2NhdGlvbhIQCghk",
          "dXJhdGlvbhgEIAEoAhpdChZCb3RJbnRlcmZlcmVkUGxhY2VtZW50EhYKB2J5",
          "X3RlYW0YASACKA4yBS5UZWFtEg4KBmJ5X2JvdBgCIAEoDRIbCghsb2NhdGlv",
          "bhgDIAEoCzIJLkxvY2F0aW9uGicKDU11bHRpcGxlQ2FyZHMSFgoHYnlfdGVh",
          "bRgBIAIoDjIFLlRlYW0aJwoNTXVsdGlwbGVGb3VscxIWCgdieV90ZWFtGAEg",
          "AigOMgUuVGVhbRozChlNdWx0aXBsZVBsYWNlbWVudEZhaWx1cmVzEhYKB2J5",
          "X3RlYW0YASACKA4yBS5UZWFtGlAKC0tpY2tUaW1lb3V0EhYKB2J5X3RlYW0Y",
          "ASACKA4yBS5UZWFtEhsKCGxvY2F0aW9uGAIgASgLMgkuTG9jYXRpb24SDAoE",
          "dGltZRgDIAEoAho9ChBOb1Byb2dyZXNzSW5HYW1lEhsKCGxvY2F0aW9uGAEg",
          "ASgLMgkuTG9jYXRpb24SDAoEdGltZRgCIAEoAhpFCg9QbGFjZW1lbnRGYWls",
          "ZWQSFgoHYnlfdGVhbRgBIAIoDjIFLlRlYW0SGgoScmVtYWluaW5nX2Rpc3Rh",
          "bmNlGAIgASgCGkEKF1Vuc3BvcnRpbmdCZWhhdmlvck1pbm9yEhYKB2J5X3Rl",
          "YW0YASACKA4yBS5UZWFtEg4KBnJlYXNvbhgCIAIoCRpBChdVbnNwb3J0aW5n",
          "QmVoYXZpb3JNYWpvchIWCgdieV90ZWFtGAEgAigOMgUuVGVhbRIOCgZyZWFz",
          "b24YAiACKAkaVwoOS2VlcGVySGVsZEJhbGwSFgoHYnlfdGVhbRgBIAIoDjIF",
          "LlRlYW0SGwoIbG9jYXRpb24YAiABKAsyCS5Mb2NhdGlvbhIQCghkdXJhdGlv",
          "bhgDIAEoAhplChJQbGFjZW1lbnRTdWNjZWVkZWQSFgoHYnlfdGVhbRgBIAIo",
          "DjIFLlRlYW0SEgoKdGltZV90YWtlbhgCIAEoAhIRCglwcmVjaXNpb24YAyAB",
          "KAISEAoIZGlzdGFuY2UYBCABKAIaHgoIUHJlcGFyZWQSEgoKdGltZV90YWtl",
          "bhgBIAEoAhopCg9Cb3RTdWJzdGl0dXRpb24SFgoHYnlfdGVhbRgBIAIoDjIF",
          "LlRlYW0aJwoNVG9vTWFueVJvYm90cxIWCgdieV90ZWFtGAEgAigOMgUuVGVh",
          "bUIHCgVldmVudCrZCAoNR2FtZUV2ZW50VHlwZRIbChdVTktOT1dOX0dBTUVf",
          "RVZFTlRfVFlQRRAAEgwKCFBSRVBBUkVEEAESFwoTTk9fUFJPR1JFU1NfSU5f",
          "R0FNRRACEhQKEFBMQUNFTUVOVF9GQUlMRUQQAxIXChNQTEFDRU1FTlRfU1VD",
          "Q0VFREVEEAUSFAoQQk9UX1NVQlNUSVRVVElPThAlEhMKD1RPT19NQU5ZX1JP",
          "Qk9UUxAmEh4KGkJBTExfTEVGVF9GSUVMRF9UT1VDSF9MSU5FEAYSHQoZQkFM",
          "TF9MRUZUX0ZJRUxEX0dPQUxfTElORRAHEhEKDVBPU1NJQkxFX0dPQUwQJxII",
          "CgRHT0FMEAgSEQoNSU5ESVJFQ1RfR09BTBAJEhAKDENISVBQRURfR09BTBAK",
          "EhAKDEFJTUxFU1NfS0lDSxALEhAKDEtJQ0tfVElNRU9VVBAMEhQKEEtFRVBF",
          "Ul9IRUxEX0JBTEwQDRIgChxBVFRBQ0tFUl9ET1VCTEVfVE9VQ0hFRF9CQUxM",
          "EA4SKQolQVRUQUNLRVJfVE9VQ0hFRF9CQUxMX0lOX0RFRkVOU0VfQVJFQRAP",
          "Ei0KKUFUVEFDS0VSX1RPVUNIRURfT1BQT05FTlRfSU5fREVGRU5TRV9BUkVB",
          "EBASNQoxQVRUQUNLRVJfVE9VQ0hFRF9PUFBPTkVOVF9JTl9ERUZFTlNFX0FS",
          "RUFfU0tJUFBFRBAoEh0KGUJPVF9EUklCQkxFRF9CQUxMX1RPT19GQVIQERIc",
          "ChhCT1RfS0lDS0VEX0JBTExfVE9PX0ZBU1QQEhImCiJBVFRBQ0tFUl9UT09f",
          "Q0xPU0VfVE9fREVGRU5TRV9BUkVBEBMSHAoYQk9UX0lOVEVSRkVSRURfUExB",
          "Q0VNRU5UEBQSEwoPQk9UX0NSQVNIX0RSQVdOEBUSFAoQQk9UX0NSQVNIX1VO",
          "SVFVRRAWEhwKGEJPVF9DUkFTSF9VTklRVUVfU0tJUFBFRBAXEhIKDkJPVF9Q",
          "VVNIRURfQk9UEBgSGgoWQk9UX1BVU0hFRF9CT1RfU0tJUFBFRBAZEh4KGkJP",
          "VF9IRUxEX0JBTExfREVMSUJFUkFURUxZEBoSEwoPQk9UX1RJUFBFRF9PVkVS",
          "EBsSGAoUQk9UX1RPT19GQVNUX0lOX1NUT1AQHBIkCiBERUZFTkRFUl9UT09f",
          "Q0xPU0VfVE9fS0lDS19QT0lOVBAdEiYKIkRFRkVOREVSX0lOX0RFRkVOU0Vf",
          "QVJFQV9QQVJUSUFMTFkQHhIcChhERUZFTkRFUl9JTl9ERUZFTlNFX0FSRUEQ",
          "HxISCg5NVUxUSVBMRV9DQVJEUxAgEh8KG01VTFRJUExFX1BMQUNFTUVOVF9G",
          "QUlMVVJFUxAhEhIKDk1VTFRJUExFX0ZPVUxTECISHQoZVU5TUE9SVElOR19C",
          "RUhBVklPUl9NSU5PUhAjEh0KGVVOU1BPUlRJTkdfQkVIQVZJT1JfTUFKT1IQ",
          "JA=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SslGameControllerCommonReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GameEventType), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent), global::GameEvent.Parser, new[]{ "Type", "Origin", "Prepared", "NoProgressInGame", "PlacementFailed", "PlacementSucceeded", "BotSubstitution", "TooManyRobots", "BallLeftFieldTouchLine", "BallLeftFieldGoalLine", "PossibleGoal", "Goal", "IndirectGoal", "ChippedGoal", "AimlessKick", "KickTimeout", "KeeperHeldBall", "AttackerDoubleTouchedBall", "AttackerTouchedBallInDefenseArea", "AttackerTouchedOpponentInDefenseArea", "AttackerTouchedOpponentInDefenseAreaSkipped", "BotDribbledBallTooFar", "BotKickedBallTooFast", "AttackerTooCloseToDefenseArea", "BotInterferedPlacement", "BotCrashDrawn", "BotCrashUnique", "BotCrashUniqueSkipped", "BotPushedBot", "BotPushedBotSkipped", "BotHeldBallDeliberately", "BotTippedOver", "BotTooFastInStop", "DefenderTooCloseToKickPoint", "DefenderInDefenseAreaPartially", "DefenderInDefenseArea", "MultipleCards", "MultiplePlacementFailures", "MultipleFouls", "UnsportingBehaviorMinor", "UnsportingBehaviorMajor" }, new[]{ "Event" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BallLeftField), global::GameEvent.Types.BallLeftField.Parser, new[]{ "ByTeam", "ByBot", "Location" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.AimlessKick), global::GameEvent.Types.AimlessKick.Parser, new[]{ "ByTeam", "ByBot", "Location", "KickLocation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.Goal), global::GameEvent.Types.Goal.Parser, new[]{ "ByTeam", "KickingTeam", "KickingBot", "Location", "KickLocation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.IndirectGoal), global::GameEvent.Types.IndirectGoal.Parser, new[]{ "ByTeam", "ByBot", "Location", "KickLocation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.ChippedGoal), global::GameEvent.Types.ChippedGoal.Parser, new[]{ "ByTeam", "ByBot", "Location", "KickLocation", "MaxBallHeight" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotTooFastInStop), global::GameEvent.Types.BotTooFastInStop.Parser, new[]{ "ByTeam", "ByBot", "Location", "Speed" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.DefenderTooCloseToKickPoint), global::GameEvent.Types.DefenderTooCloseToKickPoint.Parser, new[]{ "ByTeam", "ByBot", "Location", "Distance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotCrashDrawn), global::GameEvent.Types.BotCrashDrawn.Parser, new[]{ "BotYellow", "BotBlue", "Location", "CrashSpeed", "SpeedDiff", "CrashAngle" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotCrashUnique), global::GameEvent.Types.BotCrashUnique.Parser, new[]{ "ByTeam", "Violator", "Victim", "Location", "CrashSpeed", "SpeedDiff", "CrashAngle" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotPushedBot), global::GameEvent.Types.BotPushedBot.Parser, new[]{ "ByTeam", "Violator", "Victim", "Location", "PushedDistance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotTippedOver), global::GameEvent.Types.BotTippedOver.Parser, new[]{ "ByTeam", "ByBot", "Location" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.DefenderInDefenseArea), global::GameEvent.Types.DefenderInDefenseArea.Parser, new[]{ "ByTeam", "ByBot", "Location", "Distance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.DefenderInDefenseAreaPartially), global::GameEvent.Types.DefenderInDefenseAreaPartially.Parser, new[]{ "ByTeam", "ByBot", "Location", "Distance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.AttackerTouchedBallInDefenseArea), global::GameEvent.Types.AttackerTouchedBallInDefenseArea.Parser, new[]{ "ByTeam", "ByBot", "Location", "Distance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotKickedBallTooFast), global::GameEvent.Types.BotKickedBallTooFast.Parser, new[]{ "ByTeam", "ByBot", "Location", "InitialBallSpeed", "Chipped" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotDribbledBallTooFar), global::GameEvent.Types.BotDribbledBallTooFar.Parser, new[]{ "ByTeam", "ByBot", "Start", "End" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea), global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea.Parser, new[]{ "ByTeam", "ByBot", "Victim", "Location" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.AttackerDoubleTouchedBall), global::GameEvent.Types.AttackerDoubleTouchedBall.Parser, new[]{ "ByTeam", "ByBot", "Location" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.AttackerTooCloseToDefenseArea), global::GameEvent.Types.AttackerTooCloseToDefenseArea.Parser, new[]{ "ByTeam", "ByBot", "Location", "Distance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotHeldBallDeliberately), global::GameEvent.Types.BotHeldBallDeliberately.Parser, new[]{ "ByTeam", "ByBot", "Location", "Duration" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotInterferedPlacement), global::GameEvent.Types.BotInterferedPlacement.Parser, new[]{ "ByTeam", "ByBot", "Location" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.MultipleCards), global::GameEvent.Types.MultipleCards.Parser, new[]{ "ByTeam" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.MultipleFouls), global::GameEvent.Types.MultipleFouls.Parser, new[]{ "ByTeam" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.MultiplePlacementFailures), global::GameEvent.Types.MultiplePlacementFailures.Parser, new[]{ "ByTeam" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.KickTimeout), global::GameEvent.Types.KickTimeout.Parser, new[]{ "ByTeam", "Location", "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.NoProgressInGame), global::GameEvent.Types.NoProgressInGame.Parser, new[]{ "Location", "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.PlacementFailed), global::GameEvent.Types.PlacementFailed.Parser, new[]{ "ByTeam", "RemainingDistance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.UnsportingBehaviorMinor), global::GameEvent.Types.UnsportingBehaviorMinor.Parser, new[]{ "ByTeam", "Reason" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.UnsportingBehaviorMajor), global::GameEvent.Types.UnsportingBehaviorMajor.Parser, new[]{ "ByTeam", "Reason" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.KeeperHeldBall), global::GameEvent.Types.KeeperHeldBall.Parser, new[]{ "ByTeam", "Location", "Duration" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.PlacementSucceeded), global::GameEvent.Types.PlacementSucceeded.Parser, new[]{ "ByTeam", "TimeTaken", "Precision", "Distance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.Prepared), global::GameEvent.Types.Prepared.Parser, new[]{ "TimeTaken" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.BotSubstitution), global::GameEvent.Types.BotSubstitution.Parser, new[]{ "ByTeam" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEvent.Types.TooManyRobots), global::GameEvent.Types.TooManyRobots.Parser, new[]{ "ByTeam" }, null, null, null, null)})
        }));
  }
  #endregion

}
#region Enums
public enum GameEventType {
  [pbr::OriginalName("UNKNOWN_GAME_EVENT_TYPE")] UnknownGameEventType = 0,
  [pbr::OriginalName("PREPARED")] Prepared = 1,
  [pbr::OriginalName("NO_PROGRESS_IN_GAME")] NoProgressInGame = 2,
  [pbr::OriginalName("PLACEMENT_FAILED")] PlacementFailed = 3,
  [pbr::OriginalName("PLACEMENT_SUCCEEDED")] PlacementSucceeded = 5,
  [pbr::OriginalName("BOT_SUBSTITUTION")] BotSubstitution = 37,
  [pbr::OriginalName("TOO_MANY_ROBOTS")] TooManyRobots = 38,
  [pbr::OriginalName("BALL_LEFT_FIELD_TOUCH_LINE")] BallLeftFieldTouchLine = 6,
  [pbr::OriginalName("BALL_LEFT_FIELD_GOAL_LINE")] BallLeftFieldGoalLine = 7,
  [pbr::OriginalName("POSSIBLE_GOAL")] PossibleGoal = 39,
  [pbr::OriginalName("GOAL")] Goal = 8,
  [pbr::OriginalName("INDIRECT_GOAL")] IndirectGoal = 9,
  [pbr::OriginalName("CHIPPED_GOAL")] ChippedGoal = 10,
  [pbr::OriginalName("AIMLESS_KICK")] AimlessKick = 11,
  [pbr::OriginalName("KICK_TIMEOUT")] KickTimeout = 12,
  [pbr::OriginalName("KEEPER_HELD_BALL")] KeeperHeldBall = 13,
  [pbr::OriginalName("ATTACKER_DOUBLE_TOUCHED_BALL")] AttackerDoubleTouchedBall = 14,
  [pbr::OriginalName("ATTACKER_TOUCHED_BALL_IN_DEFENSE_AREA")] AttackerTouchedBallInDefenseArea = 15,
  [pbr::OriginalName("ATTACKER_TOUCHED_OPPONENT_IN_DEFENSE_AREA")] AttackerTouchedOpponentInDefenseArea = 16,
  [pbr::OriginalName("ATTACKER_TOUCHED_OPPONENT_IN_DEFENSE_AREA_SKIPPED")] AttackerTouchedOpponentInDefenseAreaSkipped = 40,
  [pbr::OriginalName("BOT_DRIBBLED_BALL_TOO_FAR")] BotDribbledBallTooFar = 17,
  [pbr::OriginalName("BOT_KICKED_BALL_TOO_FAST")] BotKickedBallTooFast = 18,
  [pbr::OriginalName("ATTACKER_TOO_CLOSE_TO_DEFENSE_AREA")] AttackerTooCloseToDefenseArea = 19,
  [pbr::OriginalName("BOT_INTERFERED_PLACEMENT")] BotInterferedPlacement = 20,
  [pbr::OriginalName("BOT_CRASH_DRAWN")] BotCrashDrawn = 21,
  [pbr::OriginalName("BOT_CRASH_UNIQUE")] BotCrashUnique = 22,
  [pbr::OriginalName("BOT_CRASH_UNIQUE_SKIPPED")] BotCrashUniqueSkipped = 23,
  [pbr::OriginalName("BOT_PUSHED_BOT")] BotPushedBot = 24,
  [pbr::OriginalName("BOT_PUSHED_BOT_SKIPPED")] BotPushedBotSkipped = 25,
  [pbr::OriginalName("BOT_HELD_BALL_DELIBERATELY")] BotHeldBallDeliberately = 26,
  [pbr::OriginalName("BOT_TIPPED_OVER")] BotTippedOver = 27,
  [pbr::OriginalName("BOT_TOO_FAST_IN_STOP")] BotTooFastInStop = 28,
  [pbr::OriginalName("DEFENDER_TOO_CLOSE_TO_KICK_POINT")] DefenderTooCloseToKickPoint = 29,
  [pbr::OriginalName("DEFENDER_IN_DEFENSE_AREA_PARTIALLY")] DefenderInDefenseAreaPartially = 30,
  [pbr::OriginalName("DEFENDER_IN_DEFENSE_AREA")] DefenderInDefenseArea = 31,
  [pbr::OriginalName("MULTIPLE_CARDS")] MultipleCards = 32,
  [pbr::OriginalName("MULTIPLE_PLACEMENT_FAILURES")] MultiplePlacementFailures = 33,
  [pbr::OriginalName("MULTIPLE_FOULS")] MultipleFouls = 34,
  [pbr::OriginalName("UNSPORTING_BEHAVIOR_MINOR")] UnsportingBehaviorMinor = 35,
  [pbr::OriginalName("UNSPORTING_BEHAVIOR_MAJOR")] UnsportingBehaviorMajor = 36,
}

#endregion

#region Messages
/// <summary>
/// GameEvent contains exactly one game event
/// Each game event has optional and required fields. The required fields are mandatory to process the event.
/// Some optional fields are only used for visualization, others are required to determine the ball placement position.
/// If fields are missing that are required for the ball placement position, no ball placement command will be issued.
/// Fields are marked optional to make testing and extending of the protocol easier.
/// An autoRef should ideally set all fields, except if there are good reasons to not do so.
/// </summary>
public sealed partial class GameEvent : pb::IMessage<GameEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameEvent> _parser = new pb::MessageParser<GameEvent>(() => new GameEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GameEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SslGameEvent2019Reflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameEvent(GameEvent other) : this() {
    _hasBits0 = other._hasBits0;
    type_ = other.type_;
    origin_ = other.origin_.Clone();
    switch (other.EventCase) {
      case EventOneofCase.Prepared:
        Prepared = other.Prepared.Clone();
        break;
      case EventOneofCase.NoProgressInGame:
        NoProgressInGame = other.NoProgressInGame.Clone();
        break;
      case EventOneofCase.PlacementFailed:
        PlacementFailed = other.PlacementFailed.Clone();
        break;
      case EventOneofCase.PlacementSucceeded:
        PlacementSucceeded = other.PlacementSucceeded.Clone();
        break;
      case EventOneofCase.BotSubstitution:
        BotSubstitution = other.BotSubstitution.Clone();
        break;
      case EventOneofCase.TooManyRobots:
        TooManyRobots = other.TooManyRobots.Clone();
        break;
      case EventOneofCase.BallLeftFieldTouchLine:
        BallLeftFieldTouchLine = other.BallLeftFieldTouchLine.Clone();
        break;
      case EventOneofCase.BallLeftFieldGoalLine:
        BallLeftFieldGoalLine = other.BallLeftFieldGoalLine.Clone();
        break;
      case EventOneofCase.PossibleGoal:
        PossibleGoal = other.PossibleGoal.Clone();
        break;
      case EventOneofCase.Goal:
        Goal = other.Goal.Clone();
        break;
      case EventOneofCase.IndirectGoal:
        IndirectGoal = other.IndirectGoal.Clone();
        break;
      case EventOneofCase.ChippedGoal:
        ChippedGoal = other.ChippedGoal.Clone();
        break;
      case EventOneofCase.AimlessKick:
        AimlessKick = other.AimlessKick.Clone();
        break;
      case EventOneofCase.KickTimeout:
        KickTimeout = other.KickTimeout.Clone();
        break;
      case EventOneofCase.KeeperHeldBall:
        KeeperHeldBall = other.KeeperHeldBall.Clone();
        break;
      case EventOneofCase.AttackerDoubleTouchedBall:
        AttackerDoubleTouchedBall = other.AttackerDoubleTouchedBall.Clone();
        break;
      case EventOneofCase.AttackerTouchedBallInDefenseArea:
        AttackerTouchedBallInDefenseArea = other.AttackerTouchedBallInDefenseArea.Clone();
        break;
      case EventOneofCase.AttackerTouchedOpponentInDefenseArea:
        AttackerTouchedOpponentInDefenseArea = other.AttackerTouchedOpponentInDefenseArea.Clone();
        break;
      case EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped:
        AttackerTouchedOpponentInDefenseAreaSkipped = other.AttackerTouchedOpponentInDefenseAreaSkipped.Clone();
        break;
      case EventOneofCase.BotDribbledBallTooFar:
        BotDribbledBallTooFar = other.BotDribbledBallTooFar.Clone();
        break;
      case EventOneofCase.BotKickedBallTooFast:
        BotKickedBallTooFast = other.BotKickedBallTooFast.Clone();
        break;
      case EventOneofCase.AttackerTooCloseToDefenseArea:
        AttackerTooCloseToDefenseArea = other.AttackerTooCloseToDefenseArea.Clone();
        break;
      case EventOneofCase.BotInterferedPlacement:
        BotInterferedPlacement = other.BotInterferedPlacement.Clone();
        break;
      case EventOneofCase.BotCrashDrawn:
        BotCrashDrawn = other.BotCrashDrawn.Clone();
        break;
      case EventOneofCase.BotCrashUnique:
        BotCrashUnique = other.BotCrashUnique.Clone();
        break;
      case EventOneofCase.BotCrashUniqueSkipped:
        BotCrashUniqueSkipped = other.BotCrashUniqueSkipped.Clone();
        break;
      case EventOneofCase.BotPushedBot:
        BotPushedBot = other.BotPushedBot.Clone();
        break;
      case EventOneofCase.BotPushedBotSkipped:
        BotPushedBotSkipped = other.BotPushedBotSkipped.Clone();
        break;
      case EventOneofCase.BotHeldBallDeliberately:
        BotHeldBallDeliberately = other.BotHeldBallDeliberately.Clone();
        break;
      case EventOneofCase.BotTippedOver:
        BotTippedOver = other.BotTippedOver.Clone();
        break;
      case EventOneofCase.BotTooFastInStop:
        BotTooFastInStop = other.BotTooFastInStop.Clone();
        break;
      case EventOneofCase.DefenderTooCloseToKickPoint:
        DefenderTooCloseToKickPoint = other.DefenderTooCloseToKickPoint.Clone();
        break;
      case EventOneofCase.DefenderInDefenseAreaPartially:
        DefenderInDefenseAreaPartially = other.DefenderInDefenseAreaPartially.Clone();
        break;
      case EventOneofCase.DefenderInDefenseArea:
        DefenderInDefenseArea = other.DefenderInDefenseArea.Clone();
        break;
      case EventOneofCase.MultipleCards:
        MultipleCards = other.MultipleCards.Clone();
        break;
      case EventOneofCase.MultiplePlacementFailures:
        MultiplePlacementFailures = other.MultiplePlacementFailures.Clone();
        break;
      case EventOneofCase.MultipleFouls:
        MultipleFouls = other.MultipleFouls.Clone();
        break;
      case EventOneofCase.UnsportingBehaviorMinor:
        UnsportingBehaviorMinor = other.UnsportingBehaviorMinor.Clone();
        break;
      case EventOneofCase.UnsportingBehaviorMajor:
        UnsportingBehaviorMajor = other.UnsportingBehaviorMajor.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameEvent Clone() {
    return new GameEvent(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 40;
  private readonly static global::GameEventType TypeDefaultValue = global::GameEventType.UnknownGameEventType;

  private global::GameEventType type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEventType Type {
    get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 41;
  private static readonly pb::FieldCodec<string> _repeated_origin_codec
      = pb::FieldCodec.ForString(330);
  private readonly pbc::RepeatedField<string> origin_ = new pbc::RepeatedField<string>();
  /// <summary>
  /// the origin of this game event
  /// empty, if it originates from game controller
  /// autoRef name(s), if it originates from one or more autoRefs
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> Origin {
    get { return origin_; }
  }

  /// <summary>Field number for the "prepared" field.</summary>
  public const int PreparedFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.Prepared Prepared {
    get { return eventCase_ == EventOneofCase.Prepared ? (global::GameEvent.Types.Prepared) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Prepared;
    }
  }

  /// <summary>Field number for the "no_progress_in_game" field.</summary>
  public const int NoProgressInGameFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.NoProgressInGame NoProgressInGame {
    get { return eventCase_ == EventOneofCase.NoProgressInGame ? (global::GameEvent.Types.NoProgressInGame) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.NoProgressInGame;
    }
  }

  /// <summary>Field number for the "placement_failed" field.</summary>
  public const int PlacementFailedFieldNumber = 3;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.PlacementFailed PlacementFailed {
    get { return eventCase_ == EventOneofCase.PlacementFailed ? (global::GameEvent.Types.PlacementFailed) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.PlacementFailed;
    }
  }

  /// <summary>Field number for the "placement_succeeded" field.</summary>
  public const int PlacementSucceededFieldNumber = 5;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.PlacementSucceeded PlacementSucceeded {
    get { return eventCase_ == EventOneofCase.PlacementSucceeded ? (global::GameEvent.Types.PlacementSucceeded) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.PlacementSucceeded;
    }
  }

  /// <summary>Field number for the "bot_substitution" field.</summary>
  public const int BotSubstitutionFieldNumber = 37;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotSubstitution BotSubstitution {
    get { return eventCase_ == EventOneofCase.BotSubstitution ? (global::GameEvent.Types.BotSubstitution) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotSubstitution;
    }
  }

  /// <summary>Field number for the "too_many_robots" field.</summary>
  public const int TooManyRobotsFieldNumber = 38;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.TooManyRobots TooManyRobots {
    get { return eventCase_ == EventOneofCase.TooManyRobots ? (global::GameEvent.Types.TooManyRobots) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.TooManyRobots;
    }
  }

  /// <summary>Field number for the "ball_left_field_touch_line" field.</summary>
  public const int BallLeftFieldTouchLineFieldNumber = 6;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BallLeftField BallLeftFieldTouchLine {
    get { return eventCase_ == EventOneofCase.BallLeftFieldTouchLine ? (global::GameEvent.Types.BallLeftField) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BallLeftFieldTouchLine;
    }
  }

  /// <summary>Field number for the "ball_left_field_goal_line" field.</summary>
  public const int BallLeftFieldGoalLineFieldNumber = 7;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BallLeftField BallLeftFieldGoalLine {
    get { return eventCase_ == EventOneofCase.BallLeftFieldGoalLine ? (global::GameEvent.Types.BallLeftField) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BallLeftFieldGoalLine;
    }
  }

  /// <summary>Field number for the "possible_goal" field.</summary>
  public const int PossibleGoalFieldNumber = 39;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.Goal PossibleGoal {
    get { return eventCase_ == EventOneofCase.PossibleGoal ? (global::GameEvent.Types.Goal) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.PossibleGoal;
    }
  }

  /// <summary>Field number for the "goal" field.</summary>
  public const int GoalFieldNumber = 8;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.Goal Goal {
    get { return eventCase_ == EventOneofCase.Goal ? (global::GameEvent.Types.Goal) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Goal;
    }
  }

  /// <summary>Field number for the "indirect_goal" field.</summary>
  public const int IndirectGoalFieldNumber = 9;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.IndirectGoal IndirectGoal {
    get { return eventCase_ == EventOneofCase.IndirectGoal ? (global::GameEvent.Types.IndirectGoal) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.IndirectGoal;
    }
  }

  /// <summary>Field number for the "chipped_goal" field.</summary>
  public const int ChippedGoalFieldNumber = 10;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.ChippedGoal ChippedGoal {
    get { return eventCase_ == EventOneofCase.ChippedGoal ? (global::GameEvent.Types.ChippedGoal) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.ChippedGoal;
    }
  }

  /// <summary>Field number for the "aimless_kick" field.</summary>
  public const int AimlessKickFieldNumber = 11;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.AimlessKick AimlessKick {
    get { return eventCase_ == EventOneofCase.AimlessKick ? (global::GameEvent.Types.AimlessKick) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.AimlessKick;
    }
  }

  /// <summary>Field number for the "kick_timeout" field.</summary>
  public const int KickTimeoutFieldNumber = 12;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.KickTimeout KickTimeout {
    get { return eventCase_ == EventOneofCase.KickTimeout ? (global::GameEvent.Types.KickTimeout) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.KickTimeout;
    }
  }

  /// <summary>Field number for the "keeper_held_ball" field.</summary>
  public const int KeeperHeldBallFieldNumber = 13;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.KeeperHeldBall KeeperHeldBall {
    get { return eventCase_ == EventOneofCase.KeeperHeldBall ? (global::GameEvent.Types.KeeperHeldBall) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.KeeperHeldBall;
    }
  }

  /// <summary>Field number for the "attacker_double_touched_ball" field.</summary>
  public const int AttackerDoubleTouchedBallFieldNumber = 14;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.AttackerDoubleTouchedBall AttackerDoubleTouchedBall {
    get { return eventCase_ == EventOneofCase.AttackerDoubleTouchedBall ? (global::GameEvent.Types.AttackerDoubleTouchedBall) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.AttackerDoubleTouchedBall;
    }
  }

  /// <summary>Field number for the "attacker_touched_ball_in_defense_area" field.</summary>
  public const int AttackerTouchedBallInDefenseAreaFieldNumber = 15;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.AttackerTouchedBallInDefenseArea AttackerTouchedBallInDefenseArea {
    get { return eventCase_ == EventOneofCase.AttackerTouchedBallInDefenseArea ? (global::GameEvent.Types.AttackerTouchedBallInDefenseArea) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.AttackerTouchedBallInDefenseArea;
    }
  }

  /// <summary>Field number for the "attacker_touched_opponent_in_defense_area" field.</summary>
  public const int AttackerTouchedOpponentInDefenseAreaFieldNumber = 16;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea AttackerTouchedOpponentInDefenseArea {
    get { return eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseArea ? (global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.AttackerTouchedOpponentInDefenseArea;
    }
  }

  /// <summary>Field number for the "attacker_touched_opponent_in_defense_area_skipped" field.</summary>
  public const int AttackerTouchedOpponentInDefenseAreaSkippedFieldNumber = 42;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea AttackerTouchedOpponentInDefenseAreaSkipped {
    get { return eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped ? (global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped;
    }
  }

  /// <summary>Field number for the "bot_dribbled_ball_too_far" field.</summary>
  public const int BotDribbledBallTooFarFieldNumber = 17;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotDribbledBallTooFar BotDribbledBallTooFar {
    get { return eventCase_ == EventOneofCase.BotDribbledBallTooFar ? (global::GameEvent.Types.BotDribbledBallTooFar) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotDribbledBallTooFar;
    }
  }

  /// <summary>Field number for the "bot_kicked_ball_too_fast" field.</summary>
  public const int BotKickedBallTooFastFieldNumber = 18;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotKickedBallTooFast BotKickedBallTooFast {
    get { return eventCase_ == EventOneofCase.BotKickedBallTooFast ? (global::GameEvent.Types.BotKickedBallTooFast) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotKickedBallTooFast;
    }
  }

  /// <summary>Field number for the "attacker_too_close_to_defense_area" field.</summary>
  public const int AttackerTooCloseToDefenseAreaFieldNumber = 19;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.AttackerTooCloseToDefenseArea AttackerTooCloseToDefenseArea {
    get { return eventCase_ == EventOneofCase.AttackerTooCloseToDefenseArea ? (global::GameEvent.Types.AttackerTooCloseToDefenseArea) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.AttackerTooCloseToDefenseArea;
    }
  }

  /// <summary>Field number for the "bot_interfered_placement" field.</summary>
  public const int BotInterferedPlacementFieldNumber = 20;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotInterferedPlacement BotInterferedPlacement {
    get { return eventCase_ == EventOneofCase.BotInterferedPlacement ? (global::GameEvent.Types.BotInterferedPlacement) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotInterferedPlacement;
    }
  }

  /// <summary>Field number for the "bot_crash_drawn" field.</summary>
  public const int BotCrashDrawnFieldNumber = 21;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotCrashDrawn BotCrashDrawn {
    get { return eventCase_ == EventOneofCase.BotCrashDrawn ? (global::GameEvent.Types.BotCrashDrawn) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotCrashDrawn;
    }
  }

  /// <summary>Field number for the "bot_crash_unique" field.</summary>
  public const int BotCrashUniqueFieldNumber = 22;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotCrashUnique BotCrashUnique {
    get { return eventCase_ == EventOneofCase.BotCrashUnique ? (global::GameEvent.Types.BotCrashUnique) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotCrashUnique;
    }
  }

  /// <summary>Field number for the "bot_crash_unique_skipped" field.</summary>
  public const int BotCrashUniqueSkippedFieldNumber = 23;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotCrashUnique BotCrashUniqueSkipped {
    get { return eventCase_ == EventOneofCase.BotCrashUniqueSkipped ? (global::GameEvent.Types.BotCrashUnique) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotCrashUniqueSkipped;
    }
  }

  /// <summary>Field number for the "bot_pushed_bot" field.</summary>
  public const int BotPushedBotFieldNumber = 24;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotPushedBot BotPushedBot {
    get { return eventCase_ == EventOneofCase.BotPushedBot ? (global::GameEvent.Types.BotPushedBot) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotPushedBot;
    }
  }

  /// <summary>Field number for the "bot_pushed_bot_skipped" field.</summary>
  public const int BotPushedBotSkippedFieldNumber = 25;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotPushedBot BotPushedBotSkipped {
    get { return eventCase_ == EventOneofCase.BotPushedBotSkipped ? (global::GameEvent.Types.BotPushedBot) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotPushedBotSkipped;
    }
  }

  /// <summary>Field number for the "bot_held_ball_deliberately" field.</summary>
  public const int BotHeldBallDeliberatelyFieldNumber = 26;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotHeldBallDeliberately BotHeldBallDeliberately {
    get { return eventCase_ == EventOneofCase.BotHeldBallDeliberately ? (global::GameEvent.Types.BotHeldBallDeliberately) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotHeldBallDeliberately;
    }
  }

  /// <summary>Field number for the "bot_tipped_over" field.</summary>
  public const int BotTippedOverFieldNumber = 27;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotTippedOver BotTippedOver {
    get { return eventCase_ == EventOneofCase.BotTippedOver ? (global::GameEvent.Types.BotTippedOver) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotTippedOver;
    }
  }

  /// <summary>Field number for the "bot_too_fast_in_stop" field.</summary>
  public const int BotTooFastInStopFieldNumber = 28;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotTooFastInStop BotTooFastInStop {
    get { return eventCase_ == EventOneofCase.BotTooFastInStop ? (global::GameEvent.Types.BotTooFastInStop) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.BotTooFastInStop;
    }
  }

  /// <summary>Field number for the "defender_too_close_to_kick_point" field.</summary>
  public const int DefenderTooCloseToKickPointFieldNumber = 29;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.DefenderTooCloseToKickPoint DefenderTooCloseToKickPoint {
    get { return eventCase_ == EventOneofCase.DefenderTooCloseToKickPoint ? (global::GameEvent.Types.DefenderTooCloseToKickPoint) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.DefenderTooCloseToKickPoint;
    }
  }

  /// <summary>Field number for the "defender_in_defense_area_partially" field.</summary>
  public const int DefenderInDefenseAreaPartiallyFieldNumber = 30;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.DefenderInDefenseAreaPartially DefenderInDefenseAreaPartially {
    get { return eventCase_ == EventOneofCase.DefenderInDefenseAreaPartially ? (global::GameEvent.Types.DefenderInDefenseAreaPartially) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.DefenderInDefenseAreaPartially;
    }
  }

  /// <summary>Field number for the "defender_in_defense_area" field.</summary>
  public const int DefenderInDefenseAreaFieldNumber = 31;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.DefenderInDefenseArea DefenderInDefenseArea {
    get { return eventCase_ == EventOneofCase.DefenderInDefenseArea ? (global::GameEvent.Types.DefenderInDefenseArea) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.DefenderInDefenseArea;
    }
  }

  /// <summary>Field number for the "multiple_cards" field.</summary>
  public const int MultipleCardsFieldNumber = 32;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.MultipleCards MultipleCards {
    get { return eventCase_ == EventOneofCase.MultipleCards ? (global::GameEvent.Types.MultipleCards) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.MultipleCards;
    }
  }

  /// <summary>Field number for the "multiple_placement_failures" field.</summary>
  public const int MultiplePlacementFailuresFieldNumber = 33;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.MultiplePlacementFailures MultiplePlacementFailures {
    get { return eventCase_ == EventOneofCase.MultiplePlacementFailures ? (global::GameEvent.Types.MultiplePlacementFailures) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.MultiplePlacementFailures;
    }
  }

  /// <summary>Field number for the "multiple_fouls" field.</summary>
  public const int MultipleFoulsFieldNumber = 34;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.MultipleFouls MultipleFouls {
    get { return eventCase_ == EventOneofCase.MultipleFouls ? (global::GameEvent.Types.MultipleFouls) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.MultipleFouls;
    }
  }

  /// <summary>Field number for the "unsporting_behavior_minor" field.</summary>
  public const int UnsportingBehaviorMinorFieldNumber = 35;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.UnsportingBehaviorMinor UnsportingBehaviorMinor {
    get { return eventCase_ == EventOneofCase.UnsportingBehaviorMinor ? (global::GameEvent.Types.UnsportingBehaviorMinor) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.UnsportingBehaviorMinor;
    }
  }

  /// <summary>Field number for the "unsporting_behavior_major" field.</summary>
  public const int UnsportingBehaviorMajorFieldNumber = 36;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.UnsportingBehaviorMajor UnsportingBehaviorMajor {
    get { return eventCase_ == EventOneofCase.UnsportingBehaviorMajor ? (global::GameEvent.Types.UnsportingBehaviorMajor) event_ : null; }
    set {
      event_ = value;
      eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.UnsportingBehaviorMajor;
    }
  }

  private object event_;
  /// <summary>Enum of possible cases for the "event" oneof.</summary>
  public enum EventOneofCase {
    None = 0,
    Prepared = 1,
    NoProgressInGame = 2,
    PlacementFailed = 3,
    PlacementSucceeded = 5,
    BotSubstitution = 37,
    TooManyRobots = 38,
    BallLeftFieldTouchLine = 6,
    BallLeftFieldGoalLine = 7,
    PossibleGoal = 39,
    Goal = 8,
    IndirectGoal = 9,
    ChippedGoal = 10,
    AimlessKick = 11,
    KickTimeout = 12,
    KeeperHeldBall = 13,
    AttackerDoubleTouchedBall = 14,
    AttackerTouchedBallInDefenseArea = 15,
    AttackerTouchedOpponentInDefenseArea = 16,
    AttackerTouchedOpponentInDefenseAreaSkipped = 42,
    BotDribbledBallTooFar = 17,
    BotKickedBallTooFast = 18,
    AttackerTooCloseToDefenseArea = 19,
    BotInterferedPlacement = 20,
    BotCrashDrawn = 21,
    BotCrashUnique = 22,
    BotCrashUniqueSkipped = 23,
    BotPushedBot = 24,
    BotPushedBotSkipped = 25,
    BotHeldBallDeliberately = 26,
    BotTippedOver = 27,
    BotTooFastInStop = 28,
    DefenderTooCloseToKickPoint = 29,
    DefenderInDefenseAreaPartially = 30,
    DefenderInDefenseArea = 31,
    MultipleCards = 32,
    MultiplePlacementFailures = 33,
    MultipleFouls = 34,
    UnsportingBehaviorMinor = 35,
    UnsportingBehaviorMajor = 36,
  }
  private EventOneofCase eventCase_ = EventOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public EventOneofCase EventCase {
    get { return eventCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEvent() {
    eventCase_ = EventOneofCase.None;
    event_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GameEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GameEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if(!origin_.Equals(other.origin_)) return false;
    if (!object.Equals(Prepared, other.Prepared)) return false;
    if (!object.Equals(NoProgressInGame, other.NoProgressInGame)) return false;
    if (!object.Equals(PlacementFailed, other.PlacementFailed)) return false;
    if (!object.Equals(PlacementSucceeded, other.PlacementSucceeded)) return false;
    if (!object.Equals(BotSubstitution, other.BotSubstitution)) return false;
    if (!object.Equals(TooManyRobots, other.TooManyRobots)) return false;
    if (!object.Equals(BallLeftFieldTouchLine, other.BallLeftFieldTouchLine)) return false;
    if (!object.Equals(BallLeftFieldGoalLine, other.BallLeftFieldGoalLine)) return false;
    if (!object.Equals(PossibleGoal, other.PossibleGoal)) return false;
    if (!object.Equals(Goal, other.Goal)) return false;
    if (!object.Equals(IndirectGoal, other.IndirectGoal)) return false;
    if (!object.Equals(ChippedGoal, other.ChippedGoal)) return false;
    if (!object.Equals(AimlessKick, other.AimlessKick)) return false;
    if (!object.Equals(KickTimeout, other.KickTimeout)) return false;
    if (!object.Equals(KeeperHeldBall, other.KeeperHeldBall)) return false;
    if (!object.Equals(AttackerDoubleTouchedBall, other.AttackerDoubleTouchedBall)) return false;
    if (!object.Equals(AttackerTouchedBallInDefenseArea, other.AttackerTouchedBallInDefenseArea)) return false;
    if (!object.Equals(AttackerTouchedOpponentInDefenseArea, other.AttackerTouchedOpponentInDefenseArea)) return false;
    if (!object.Equals(AttackerTouchedOpponentInDefenseAreaSkipped, other.AttackerTouchedOpponentInDefenseAreaSkipped)) return false;
    if (!object.Equals(BotDribbledBallTooFar, other.BotDribbledBallTooFar)) return false;
    if (!object.Equals(BotKickedBallTooFast, other.BotKickedBallTooFast)) return false;
    if (!object.Equals(AttackerTooCloseToDefenseArea, other.AttackerTooCloseToDefenseArea)) return false;
    if (!object.Equals(BotInterferedPlacement, other.BotInterferedPlacement)) return false;
    if (!object.Equals(BotCrashDrawn, other.BotCrashDrawn)) return false;
    if (!object.Equals(BotCrashUnique, other.BotCrashUnique)) return false;
    if (!object.Equals(BotCrashUniqueSkipped, other.BotCrashUniqueSkipped)) return false;
    if (!object.Equals(BotPushedBot, other.BotPushedBot)) return false;
    if (!object.Equals(BotPushedBotSkipped, other.BotPushedBotSkipped)) return false;
    if (!object.Equals(BotHeldBallDeliberately, other.BotHeldBallDeliberately)) return false;
    if (!object.Equals(BotTippedOver, other.BotTippedOver)) return false;
    if (!object.Equals(BotTooFastInStop, other.BotTooFastInStop)) return false;
    if (!object.Equals(DefenderTooCloseToKickPoint, other.DefenderTooCloseToKickPoint)) return false;
    if (!object.Equals(DefenderInDefenseAreaPartially, other.DefenderInDefenseAreaPartially)) return false;
    if (!object.Equals(DefenderInDefenseArea, other.DefenderInDefenseArea)) return false;
    if (!object.Equals(MultipleCards, other.MultipleCards)) return false;
    if (!object.Equals(MultiplePlacementFailures, other.MultiplePlacementFailures)) return false;
    if (!object.Equals(MultipleFouls, other.MultipleFouls)) return false;
    if (!object.Equals(UnsportingBehaviorMinor, other.UnsportingBehaviorMinor)) return false;
    if (!object.Equals(UnsportingBehaviorMajor, other.UnsportingBehaviorMajor)) return false;
    if (EventCase != other.EventCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasType) hash ^= Type.GetHashCode();
    hash ^= origin_.GetHashCode();
    if (eventCase_ == EventOneofCase.Prepared) hash ^= Prepared.GetHashCode();
    if (eventCase_ == EventOneofCase.NoProgressInGame) hash ^= NoProgressInGame.GetHashCode();
    if (eventCase_ == EventOneofCase.PlacementFailed) hash ^= PlacementFailed.GetHashCode();
    if (eventCase_ == EventOneofCase.PlacementSucceeded) hash ^= PlacementSucceeded.GetHashCode();
    if (eventCase_ == EventOneofCase.BotSubstitution) hash ^= BotSubstitution.GetHashCode();
    if (eventCase_ == EventOneofCase.TooManyRobots) hash ^= TooManyRobots.GetHashCode();
    if (eventCase_ == EventOneofCase.BallLeftFieldTouchLine) hash ^= BallLeftFieldTouchLine.GetHashCode();
    if (eventCase_ == EventOneofCase.BallLeftFieldGoalLine) hash ^= BallLeftFieldGoalLine.GetHashCode();
    if (eventCase_ == EventOneofCase.PossibleGoal) hash ^= PossibleGoal.GetHashCode();
    if (eventCase_ == EventOneofCase.Goal) hash ^= Goal.GetHashCode();
    if (eventCase_ == EventOneofCase.IndirectGoal) hash ^= IndirectGoal.GetHashCode();
    if (eventCase_ == EventOneofCase.ChippedGoal) hash ^= ChippedGoal.GetHashCode();
    if (eventCase_ == EventOneofCase.AimlessKick) hash ^= AimlessKick.GetHashCode();
    if (eventCase_ == EventOneofCase.KickTimeout) hash ^= KickTimeout.GetHashCode();
    if (eventCase_ == EventOneofCase.KeeperHeldBall) hash ^= KeeperHeldBall.GetHashCode();
    if (eventCase_ == EventOneofCase.AttackerDoubleTouchedBall) hash ^= AttackerDoubleTouchedBall.GetHashCode();
    if (eventCase_ == EventOneofCase.AttackerTouchedBallInDefenseArea) hash ^= AttackerTouchedBallInDefenseArea.GetHashCode();
    if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseArea) hash ^= AttackerTouchedOpponentInDefenseArea.GetHashCode();
    if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped) hash ^= AttackerTouchedOpponentInDefenseAreaSkipped.GetHashCode();
    if (eventCase_ == EventOneofCase.BotDribbledBallTooFar) hash ^= BotDribbledBallTooFar.GetHashCode();
    if (eventCase_ == EventOneofCase.BotKickedBallTooFast) hash ^= BotKickedBallTooFast.GetHashCode();
    if (eventCase_ == EventOneofCase.AttackerTooCloseToDefenseArea) hash ^= AttackerTooCloseToDefenseArea.GetHashCode();
    if (eventCase_ == EventOneofCase.BotInterferedPlacement) hash ^= BotInterferedPlacement.GetHashCode();
    if (eventCase_ == EventOneofCase.BotCrashDrawn) hash ^= BotCrashDrawn.GetHashCode();
    if (eventCase_ == EventOneofCase.BotCrashUnique) hash ^= BotCrashUnique.GetHashCode();
    if (eventCase_ == EventOneofCase.BotCrashUniqueSkipped) hash ^= BotCrashUniqueSkipped.GetHashCode();
    if (eventCase_ == EventOneofCase.BotPushedBot) hash ^= BotPushedBot.GetHashCode();
    if (eventCase_ == EventOneofCase.BotPushedBotSkipped) hash ^= BotPushedBotSkipped.GetHashCode();
    if (eventCase_ == EventOneofCase.BotHeldBallDeliberately) hash ^= BotHeldBallDeliberately.GetHashCode();
    if (eventCase_ == EventOneofCase.BotTippedOver) hash ^= BotTippedOver.GetHashCode();
    if (eventCase_ == EventOneofCase.BotTooFastInStop) hash ^= BotTooFastInStop.GetHashCode();
    if (eventCase_ == EventOneofCase.DefenderTooCloseToKickPoint) hash ^= DefenderTooCloseToKickPoint.GetHashCode();
    if (eventCase_ == EventOneofCase.DefenderInDefenseAreaPartially) hash ^= DefenderInDefenseAreaPartially.GetHashCode();
    if (eventCase_ == EventOneofCase.DefenderInDefenseArea) hash ^= DefenderInDefenseArea.GetHashCode();
    if (eventCase_ == EventOneofCase.MultipleCards) hash ^= MultipleCards.GetHashCode();
    if (eventCase_ == EventOneofCase.MultiplePlacementFailures) hash ^= MultiplePlacementFailures.GetHashCode();
    if (eventCase_ == EventOneofCase.MultipleFouls) hash ^= MultipleFouls.GetHashCode();
    if (eventCase_ == EventOneofCase.UnsportingBehaviorMinor) hash ^= UnsportingBehaviorMinor.GetHashCode();
    if (eventCase_ == EventOneofCase.UnsportingBehaviorMajor) hash ^= UnsportingBehaviorMajor.GetHashCode();
    hash ^= (int) eventCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (eventCase_ == EventOneofCase.Prepared) {
      output.WriteRawTag(10);
      output.WriteMessage(Prepared);
    }
    if (eventCase_ == EventOneofCase.NoProgressInGame) {
      output.WriteRawTag(18);
      output.WriteMessage(NoProgressInGame);
    }
    if (eventCase_ == EventOneofCase.PlacementFailed) {
      output.WriteRawTag(26);
      output.WriteMessage(PlacementFailed);
    }
    if (eventCase_ == EventOneofCase.PlacementSucceeded) {
      output.WriteRawTag(42);
      output.WriteMessage(PlacementSucceeded);
    }
    if (eventCase_ == EventOneofCase.BallLeftFieldTouchLine) {
      output.WriteRawTag(50);
      output.WriteMessage(BallLeftFieldTouchLine);
    }
    if (eventCase_ == EventOneofCase.BallLeftFieldGoalLine) {
      output.WriteRawTag(58);
      output.WriteMessage(BallLeftFieldGoalLine);
    }
    if (eventCase_ == EventOneofCase.Goal) {
      output.WriteRawTag(66);
      output.WriteMessage(Goal);
    }
    if (eventCase_ == EventOneofCase.IndirectGoal) {
      output.WriteRawTag(74);
      output.WriteMessage(IndirectGoal);
    }
    if (eventCase_ == EventOneofCase.ChippedGoal) {
      output.WriteRawTag(82);
      output.WriteMessage(ChippedGoal);
    }
    if (eventCase_ == EventOneofCase.AimlessKick) {
      output.WriteRawTag(90);
      output.WriteMessage(AimlessKick);
    }
    if (eventCase_ == EventOneofCase.KickTimeout) {
      output.WriteRawTag(98);
      output.WriteMessage(KickTimeout);
    }
    if (eventCase_ == EventOneofCase.KeeperHeldBall) {
      output.WriteRawTag(106);
      output.WriteMessage(KeeperHeldBall);
    }
    if (eventCase_ == EventOneofCase.AttackerDoubleTouchedBall) {
      output.WriteRawTag(114);
      output.WriteMessage(AttackerDoubleTouchedBall);
    }
    if (eventCase_ == EventOneofCase.AttackerTouchedBallInDefenseArea) {
      output.WriteRawTag(122);
      output.WriteMessage(AttackerTouchedBallInDefenseArea);
    }
    if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseArea) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(AttackerTouchedOpponentInDefenseArea);
    }
    if (eventCase_ == EventOneofCase.BotDribbledBallTooFar) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(BotDribbledBallTooFar);
    }
    if (eventCase_ == EventOneofCase.BotKickedBallTooFast) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(BotKickedBallTooFast);
    }
    if (eventCase_ == EventOneofCase.AttackerTooCloseToDefenseArea) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(AttackerTooCloseToDefenseArea);
    }
    if (eventCase_ == EventOneofCase.BotInterferedPlacement) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(BotInterferedPlacement);
    }
    if (eventCase_ == EventOneofCase.BotCrashDrawn) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(BotCrashDrawn);
    }
    if (eventCase_ == EventOneofCase.BotCrashUnique) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(BotCrashUnique);
    }
    if (eventCase_ == EventOneofCase.BotCrashUniqueSkipped) {
      output.WriteRawTag(186, 1);
      output.WriteMessage(BotCrashUniqueSkipped);
    }
    if (eventCase_ == EventOneofCase.BotPushedBot) {
      output.WriteRawTag(194, 1);
      output.WriteMessage(BotPushedBot);
    }
    if (eventCase_ == EventOneofCase.BotPushedBotSkipped) {
      output.WriteRawTag(202, 1);
      output.WriteMessage(BotPushedBotSkipped);
    }
    if (eventCase_ == EventOneofCase.BotHeldBallDeliberately) {
      output.WriteRawTag(210, 1);
      output.WriteMessage(BotHeldBallDeliberately);
    }
    if (eventCase_ == EventOneofCase.BotTippedOver) {
      output.WriteRawTag(218, 1);
      output.WriteMessage(BotTippedOver);
    }
    if (eventCase_ == EventOneofCase.BotTooFastInStop) {
      output.WriteRawTag(226, 1);
      output.WriteMessage(BotTooFastInStop);
    }
    if (eventCase_ == EventOneofCase.DefenderTooCloseToKickPoint) {
      output.WriteRawTag(234, 1);
      output.WriteMessage(DefenderTooCloseToKickPoint);
    }
    if (eventCase_ == EventOneofCase.DefenderInDefenseAreaPartially) {
      output.WriteRawTag(242, 1);
      output.WriteMessage(DefenderInDefenseAreaPartially);
    }
    if (eventCase_ == EventOneofCase.DefenderInDefenseArea) {
      output.WriteRawTag(250, 1);
      output.WriteMessage(DefenderInDefenseArea);
    }
    if (eventCase_ == EventOneofCase.MultipleCards) {
      output.WriteRawTag(130, 2);
      output.WriteMessage(MultipleCards);
    }
    if (eventCase_ == EventOneofCase.MultiplePlacementFailures) {
      output.WriteRawTag(138, 2);
      output.WriteMessage(MultiplePlacementFailures);
    }
    if (eventCase_ == EventOneofCase.MultipleFouls) {
      output.WriteRawTag(146, 2);
      output.WriteMessage(MultipleFouls);
    }
    if (eventCase_ == EventOneofCase.UnsportingBehaviorMinor) {
      output.WriteRawTag(154, 2);
      output.WriteMessage(UnsportingBehaviorMinor);
    }
    if (eventCase_ == EventOneofCase.UnsportingBehaviorMajor) {
      output.WriteRawTag(162, 2);
      output.WriteMessage(UnsportingBehaviorMajor);
    }
    if (eventCase_ == EventOneofCase.BotSubstitution) {
      output.WriteRawTag(170, 2);
      output.WriteMessage(BotSubstitution);
    }
    if (eventCase_ == EventOneofCase.TooManyRobots) {
      output.WriteRawTag(178, 2);
      output.WriteMessage(TooManyRobots);
    }
    if (eventCase_ == EventOneofCase.PossibleGoal) {
      output.WriteRawTag(186, 2);
      output.WriteMessage(PossibleGoal);
    }
    if (HasType) {
      output.WriteRawTag(192, 2);
      output.WriteEnum((int) Type);
    }
    origin_.WriteTo(output, _repeated_origin_codec);
    if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped) {
      output.WriteRawTag(210, 2);
      output.WriteMessage(AttackerTouchedOpponentInDefenseAreaSkipped);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (eventCase_ == EventOneofCase.Prepared) {
      output.WriteRawTag(10);
      output.WriteMessage(Prepared);
    }
    if (eventCase_ == EventOneofCase.NoProgressInGame) {
      output.WriteRawTag(18);
      output.WriteMessage(NoProgressInGame);
    }
    if (eventCase_ == EventOneofCase.PlacementFailed) {
      output.WriteRawTag(26);
      output.WriteMessage(PlacementFailed);
    }
    if (eventCase_ == EventOneofCase.PlacementSucceeded) {
      output.WriteRawTag(42);
      output.WriteMessage(PlacementSucceeded);
    }
    if (eventCase_ == EventOneofCase.BallLeftFieldTouchLine) {
      output.WriteRawTag(50);
      output.WriteMessage(BallLeftFieldTouchLine);
    }
    if (eventCase_ == EventOneofCase.BallLeftFieldGoalLine) {
      output.WriteRawTag(58);
      output.WriteMessage(BallLeftFieldGoalLine);
    }
    if (eventCase_ == EventOneofCase.Goal) {
      output.WriteRawTag(66);
      output.WriteMessage(Goal);
    }
    if (eventCase_ == EventOneofCase.IndirectGoal) {
      output.WriteRawTag(74);
      output.WriteMessage(IndirectGoal);
    }
    if (eventCase_ == EventOneofCase.ChippedGoal) {
      output.WriteRawTag(82);
      output.WriteMessage(ChippedGoal);
    }
    if (eventCase_ == EventOneofCase.AimlessKick) {
      output.WriteRawTag(90);
      output.WriteMessage(AimlessKick);
    }
    if (eventCase_ == EventOneofCase.KickTimeout) {
      output.WriteRawTag(98);
      output.WriteMessage(KickTimeout);
    }
    if (eventCase_ == EventOneofCase.KeeperHeldBall) {
      output.WriteRawTag(106);
      output.WriteMessage(KeeperHeldBall);
    }
    if (eventCase_ == EventOneofCase.AttackerDoubleTouchedBall) {
      output.WriteRawTag(114);
      output.WriteMessage(AttackerDoubleTouchedBall);
    }
    if (eventCase_ == EventOneofCase.AttackerTouchedBallInDefenseArea) {
      output.WriteRawTag(122);
      output.WriteMessage(AttackerTouchedBallInDefenseArea);
    }
    if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseArea) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(AttackerTouchedOpponentInDefenseArea);
    }
    if (eventCase_ == EventOneofCase.BotDribbledBallTooFar) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(BotDribbledBallTooFar);
    }
    if (eventCase_ == EventOneofCase.BotKickedBallTooFast) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(BotKickedBallTooFast);
    }
    if (eventCase_ == EventOneofCase.AttackerTooCloseToDefenseArea) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(AttackerTooCloseToDefenseArea);
    }
    if (eventCase_ == EventOneofCase.BotInterferedPlacement) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(BotInterferedPlacement);
    }
    if (eventCase_ == EventOneofCase.BotCrashDrawn) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(BotCrashDrawn);
    }
    if (eventCase_ == EventOneofCase.BotCrashUnique) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(BotCrashUnique);
    }
    if (eventCase_ == EventOneofCase.BotCrashUniqueSkipped) {
      output.WriteRawTag(186, 1);
      output.WriteMessage(BotCrashUniqueSkipped);
    }
    if (eventCase_ == EventOneofCase.BotPushedBot) {
      output.WriteRawTag(194, 1);
      output.WriteMessage(BotPushedBot);
    }
    if (eventCase_ == EventOneofCase.BotPushedBotSkipped) {
      output.WriteRawTag(202, 1);
      output.WriteMessage(BotPushedBotSkipped);
    }
    if (eventCase_ == EventOneofCase.BotHeldBallDeliberately) {
      output.WriteRawTag(210, 1);
      output.WriteMessage(BotHeldBallDeliberately);
    }
    if (eventCase_ == EventOneofCase.BotTippedOver) {
      output.WriteRawTag(218, 1);
      output.WriteMessage(BotTippedOver);
    }
    if (eventCase_ == EventOneofCase.BotTooFastInStop) {
      output.WriteRawTag(226, 1);
      output.WriteMessage(BotTooFastInStop);
    }
    if (eventCase_ == EventOneofCase.DefenderTooCloseToKickPoint) {
      output.WriteRawTag(234, 1);
      output.WriteMessage(DefenderTooCloseToKickPoint);
    }
    if (eventCase_ == EventOneofCase.DefenderInDefenseAreaPartially) {
      output.WriteRawTag(242, 1);
      output.WriteMessage(DefenderInDefenseAreaPartially);
    }
    if (eventCase_ == EventOneofCase.DefenderInDefenseArea) {
      output.WriteRawTag(250, 1);
      output.WriteMessage(DefenderInDefenseArea);
    }
    if (eventCase_ == EventOneofCase.MultipleCards) {
      output.WriteRawTag(130, 2);
      output.WriteMessage(MultipleCards);
    }
    if (eventCase_ == EventOneofCase.MultiplePlacementFailures) {
      output.WriteRawTag(138, 2);
      output.WriteMessage(MultiplePlacementFailures);
    }
    if (eventCase_ == EventOneofCase.MultipleFouls) {
      output.WriteRawTag(146, 2);
      output.WriteMessage(MultipleFouls);
    }
    if (eventCase_ == EventOneofCase.UnsportingBehaviorMinor) {
      output.WriteRawTag(154, 2);
      output.WriteMessage(UnsportingBehaviorMinor);
    }
    if (eventCase_ == EventOneofCase.UnsportingBehaviorMajor) {
      output.WriteRawTag(162, 2);
      output.WriteMessage(UnsportingBehaviorMajor);
    }
    if (eventCase_ == EventOneofCase.BotSubstitution) {
      output.WriteRawTag(170, 2);
      output.WriteMessage(BotSubstitution);
    }
    if (eventCase_ == EventOneofCase.TooManyRobots) {
      output.WriteRawTag(178, 2);
      output.WriteMessage(TooManyRobots);
    }
    if (eventCase_ == EventOneofCase.PossibleGoal) {
      output.WriteRawTag(186, 2);
      output.WriteMessage(PossibleGoal);
    }
    if (HasType) {
      output.WriteRawTag(192, 2);
      output.WriteEnum((int) Type);
    }
    origin_.WriteTo(ref output, _repeated_origin_codec);
    if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped) {
      output.WriteRawTag(210, 2);
      output.WriteMessage(AttackerTouchedOpponentInDefenseAreaSkipped);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasType) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    size += origin_.CalculateSize(_repeated_origin_codec);
    if (eventCase_ == EventOneofCase.Prepared) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prepared);
    }
    if (eventCase_ == EventOneofCase.NoProgressInGame) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(NoProgressInGame);
    }
    if (eventCase_ == EventOneofCase.PlacementFailed) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlacementFailed);
    }
    if (eventCase_ == EventOneofCase.PlacementSucceeded) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlacementSucceeded);
    }
    if (eventCase_ == EventOneofCase.BotSubstitution) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotSubstitution);
    }
    if (eventCase_ == EventOneofCase.TooManyRobots) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(TooManyRobots);
    }
    if (eventCase_ == EventOneofCase.BallLeftFieldTouchLine) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BallLeftFieldTouchLine);
    }
    if (eventCase_ == EventOneofCase.BallLeftFieldGoalLine) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BallLeftFieldGoalLine);
    }
    if (eventCase_ == EventOneofCase.PossibleGoal) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PossibleGoal);
    }
    if (eventCase_ == EventOneofCase.Goal) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Goal);
    }
    if (eventCase_ == EventOneofCase.IndirectGoal) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(IndirectGoal);
    }
    if (eventCase_ == EventOneofCase.ChippedGoal) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChippedGoal);
    }
    if (eventCase_ == EventOneofCase.AimlessKick) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AimlessKick);
    }
    if (eventCase_ == EventOneofCase.KickTimeout) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(KickTimeout);
    }
    if (eventCase_ == EventOneofCase.KeeperHeldBall) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeeperHeldBall);
    }
    if (eventCase_ == EventOneofCase.AttackerDoubleTouchedBall) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackerDoubleTouchedBall);
    }
    if (eventCase_ == EventOneofCase.AttackerTouchedBallInDefenseArea) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackerTouchedBallInDefenseArea);
    }
    if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseArea) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AttackerTouchedOpponentInDefenseArea);
    }
    if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AttackerTouchedOpponentInDefenseAreaSkipped);
    }
    if (eventCase_ == EventOneofCase.BotDribbledBallTooFar) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotDribbledBallTooFar);
    }
    if (eventCase_ == EventOneofCase.BotKickedBallTooFast) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotKickedBallTooFast);
    }
    if (eventCase_ == EventOneofCase.AttackerTooCloseToDefenseArea) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(AttackerTooCloseToDefenseArea);
    }
    if (eventCase_ == EventOneofCase.BotInterferedPlacement) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotInterferedPlacement);
    }
    if (eventCase_ == EventOneofCase.BotCrashDrawn) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotCrashDrawn);
    }
    if (eventCase_ == EventOneofCase.BotCrashUnique) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotCrashUnique);
    }
    if (eventCase_ == EventOneofCase.BotCrashUniqueSkipped) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotCrashUniqueSkipped);
    }
    if (eventCase_ == EventOneofCase.BotPushedBot) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotPushedBot);
    }
    if (eventCase_ == EventOneofCase.BotPushedBotSkipped) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotPushedBotSkipped);
    }
    if (eventCase_ == EventOneofCase.BotHeldBallDeliberately) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotHeldBallDeliberately);
    }
    if (eventCase_ == EventOneofCase.BotTippedOver) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotTippedOver);
    }
    if (eventCase_ == EventOneofCase.BotTooFastInStop) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BotTooFastInStop);
    }
    if (eventCase_ == EventOneofCase.DefenderTooCloseToKickPoint) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DefenderTooCloseToKickPoint);
    }
    if (eventCase_ == EventOneofCase.DefenderInDefenseAreaPartially) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DefenderInDefenseAreaPartially);
    }
    if (eventCase_ == EventOneofCase.DefenderInDefenseArea) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DefenderInDefenseArea);
    }
    if (eventCase_ == EventOneofCase.MultipleCards) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(MultipleCards);
    }
    if (eventCase_ == EventOneofCase.MultiplePlacementFailures) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(MultiplePlacementFailures);
    }
    if (eventCase_ == EventOneofCase.MultipleFouls) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(MultipleFouls);
    }
    if (eventCase_ == EventOneofCase.UnsportingBehaviorMinor) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnsportingBehaviorMinor);
    }
    if (eventCase_ == EventOneofCase.UnsportingBehaviorMajor) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnsportingBehaviorMajor);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GameEvent other) {
    if (other == null) {
      return;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    origin_.Add(other.origin_);
    switch (other.EventCase) {
      case EventOneofCase.Prepared:
        if (Prepared == null) {
          Prepared = new global::GameEvent.Types.Prepared();
        }
        Prepared.MergeFrom(other.Prepared);
        break;
      case EventOneofCase.NoProgressInGame:
        if (NoProgressInGame == null) {
          NoProgressInGame = new global::GameEvent.Types.NoProgressInGame();
        }
        NoProgressInGame.MergeFrom(other.NoProgressInGame);
        break;
      case EventOneofCase.PlacementFailed:
        if (PlacementFailed == null) {
          PlacementFailed = new global::GameEvent.Types.PlacementFailed();
        }
        PlacementFailed.MergeFrom(other.PlacementFailed);
        break;
      case EventOneofCase.PlacementSucceeded:
        if (PlacementSucceeded == null) {
          PlacementSucceeded = new global::GameEvent.Types.PlacementSucceeded();
        }
        PlacementSucceeded.MergeFrom(other.PlacementSucceeded);
        break;
      case EventOneofCase.BotSubstitution:
        if (BotSubstitution == null) {
          BotSubstitution = new global::GameEvent.Types.BotSubstitution();
        }
        BotSubstitution.MergeFrom(other.BotSubstitution);
        break;
      case EventOneofCase.TooManyRobots:
        if (TooManyRobots == null) {
          TooManyRobots = new global::GameEvent.Types.TooManyRobots();
        }
        TooManyRobots.MergeFrom(other.TooManyRobots);
        break;
      case EventOneofCase.BallLeftFieldTouchLine:
        if (BallLeftFieldTouchLine == null) {
          BallLeftFieldTouchLine = new global::GameEvent.Types.BallLeftField();
        }
        BallLeftFieldTouchLine.MergeFrom(other.BallLeftFieldTouchLine);
        break;
      case EventOneofCase.BallLeftFieldGoalLine:
        if (BallLeftFieldGoalLine == null) {
          BallLeftFieldGoalLine = new global::GameEvent.Types.BallLeftField();
        }
        BallLeftFieldGoalLine.MergeFrom(other.BallLeftFieldGoalLine);
        break;
      case EventOneofCase.PossibleGoal:
        if (PossibleGoal == null) {
          PossibleGoal = new global::GameEvent.Types.Goal();
        }
        PossibleGoal.MergeFrom(other.PossibleGoal);
        break;
      case EventOneofCase.Goal:
        if (Goal == null) {
          Goal = new global::GameEvent.Types.Goal();
        }
        Goal.MergeFrom(other.Goal);
        break;
      case EventOneofCase.IndirectGoal:
        if (IndirectGoal == null) {
          IndirectGoal = new global::GameEvent.Types.IndirectGoal();
        }
        IndirectGoal.MergeFrom(other.IndirectGoal);
        break;
      case EventOneofCase.ChippedGoal:
        if (ChippedGoal == null) {
          ChippedGoal = new global::GameEvent.Types.ChippedGoal();
        }
        ChippedGoal.MergeFrom(other.ChippedGoal);
        break;
      case EventOneofCase.AimlessKick:
        if (AimlessKick == null) {
          AimlessKick = new global::GameEvent.Types.AimlessKick();
        }
        AimlessKick.MergeFrom(other.AimlessKick);
        break;
      case EventOneofCase.KickTimeout:
        if (KickTimeout == null) {
          KickTimeout = new global::GameEvent.Types.KickTimeout();
        }
        KickTimeout.MergeFrom(other.KickTimeout);
        break;
      case EventOneofCase.KeeperHeldBall:
        if (KeeperHeldBall == null) {
          KeeperHeldBall = new global::GameEvent.Types.KeeperHeldBall();
        }
        KeeperHeldBall.MergeFrom(other.KeeperHeldBall);
        break;
      case EventOneofCase.AttackerDoubleTouchedBall:
        if (AttackerDoubleTouchedBall == null) {
          AttackerDoubleTouchedBall = new global::GameEvent.Types.AttackerDoubleTouchedBall();
        }
        AttackerDoubleTouchedBall.MergeFrom(other.AttackerDoubleTouchedBall);
        break;
      case EventOneofCase.AttackerTouchedBallInDefenseArea:
        if (AttackerTouchedBallInDefenseArea == null) {
          AttackerTouchedBallInDefenseArea = new global::GameEvent.Types.AttackerTouchedBallInDefenseArea();
        }
        AttackerTouchedBallInDefenseArea.MergeFrom(other.AttackerTouchedBallInDefenseArea);
        break;
      case EventOneofCase.AttackerTouchedOpponentInDefenseArea:
        if (AttackerTouchedOpponentInDefenseArea == null) {
          AttackerTouchedOpponentInDefenseArea = new global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea();
        }
        AttackerTouchedOpponentInDefenseArea.MergeFrom(other.AttackerTouchedOpponentInDefenseArea);
        break;
      case EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped:
        if (AttackerTouchedOpponentInDefenseAreaSkipped == null) {
          AttackerTouchedOpponentInDefenseAreaSkipped = new global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea();
        }
        AttackerTouchedOpponentInDefenseAreaSkipped.MergeFrom(other.AttackerTouchedOpponentInDefenseAreaSkipped);
        break;
      case EventOneofCase.BotDribbledBallTooFar:
        if (BotDribbledBallTooFar == null) {
          BotDribbledBallTooFar = new global::GameEvent.Types.BotDribbledBallTooFar();
        }
        BotDribbledBallTooFar.MergeFrom(other.BotDribbledBallTooFar);
        break;
      case EventOneofCase.BotKickedBallTooFast:
        if (BotKickedBallTooFast == null) {
          BotKickedBallTooFast = new global::GameEvent.Types.BotKickedBallTooFast();
        }
        BotKickedBallTooFast.MergeFrom(other.BotKickedBallTooFast);
        break;
      case EventOneofCase.AttackerTooCloseToDefenseArea:
        if (AttackerTooCloseToDefenseArea == null) {
          AttackerTooCloseToDefenseArea = new global::GameEvent.Types.AttackerTooCloseToDefenseArea();
        }
        AttackerTooCloseToDefenseArea.MergeFrom(other.AttackerTooCloseToDefenseArea);
        break;
      case EventOneofCase.BotInterferedPlacement:
        if (BotInterferedPlacement == null) {
          BotInterferedPlacement = new global::GameEvent.Types.BotInterferedPlacement();
        }
        BotInterferedPlacement.MergeFrom(other.BotInterferedPlacement);
        break;
      case EventOneofCase.BotCrashDrawn:
        if (BotCrashDrawn == null) {
          BotCrashDrawn = new global::GameEvent.Types.BotCrashDrawn();
        }
        BotCrashDrawn.MergeFrom(other.BotCrashDrawn);
        break;
      case EventOneofCase.BotCrashUnique:
        if (BotCrashUnique == null) {
          BotCrashUnique = new global::GameEvent.Types.BotCrashUnique();
        }
        BotCrashUnique.MergeFrom(other.BotCrashUnique);
        break;
      case EventOneofCase.BotCrashUniqueSkipped:
        if (BotCrashUniqueSkipped == null) {
          BotCrashUniqueSkipped = new global::GameEvent.Types.BotCrashUnique();
        }
        BotCrashUniqueSkipped.MergeFrom(other.BotCrashUniqueSkipped);
        break;
      case EventOneofCase.BotPushedBot:
        if (BotPushedBot == null) {
          BotPushedBot = new global::GameEvent.Types.BotPushedBot();
        }
        BotPushedBot.MergeFrom(other.BotPushedBot);
        break;
      case EventOneofCase.BotPushedBotSkipped:
        if (BotPushedBotSkipped == null) {
          BotPushedBotSkipped = new global::GameEvent.Types.BotPushedBot();
        }
        BotPushedBotSkipped.MergeFrom(other.BotPushedBotSkipped);
        break;
      case EventOneofCase.BotHeldBallDeliberately:
        if (BotHeldBallDeliberately == null) {
          BotHeldBallDeliberately = new global::GameEvent.Types.BotHeldBallDeliberately();
        }
        BotHeldBallDeliberately.MergeFrom(other.BotHeldBallDeliberately);
        break;
      case EventOneofCase.BotTippedOver:
        if (BotTippedOver == null) {
          BotTippedOver = new global::GameEvent.Types.BotTippedOver();
        }
        BotTippedOver.MergeFrom(other.BotTippedOver);
        break;
      case EventOneofCase.BotTooFastInStop:
        if (BotTooFastInStop == null) {
          BotTooFastInStop = new global::GameEvent.Types.BotTooFastInStop();
        }
        BotTooFastInStop.MergeFrom(other.BotTooFastInStop);
        break;
      case EventOneofCase.DefenderTooCloseToKickPoint:
        if (DefenderTooCloseToKickPoint == null) {
          DefenderTooCloseToKickPoint = new global::GameEvent.Types.DefenderTooCloseToKickPoint();
        }
        DefenderTooCloseToKickPoint.MergeFrom(other.DefenderTooCloseToKickPoint);
        break;
      case EventOneofCase.DefenderInDefenseAreaPartially:
        if (DefenderInDefenseAreaPartially == null) {
          DefenderInDefenseAreaPartially = new global::GameEvent.Types.DefenderInDefenseAreaPartially();
        }
        DefenderInDefenseAreaPartially.MergeFrom(other.DefenderInDefenseAreaPartially);
        break;
      case EventOneofCase.DefenderInDefenseArea:
        if (DefenderInDefenseArea == null) {
          DefenderInDefenseArea = new global::GameEvent.Types.DefenderInDefenseArea();
        }
        DefenderInDefenseArea.MergeFrom(other.DefenderInDefenseArea);
        break;
      case EventOneofCase.MultipleCards:
        if (MultipleCards == null) {
          MultipleCards = new global::GameEvent.Types.MultipleCards();
        }
        MultipleCards.MergeFrom(other.MultipleCards);
        break;
      case EventOneofCase.MultiplePlacementFailures:
        if (MultiplePlacementFailures == null) {
          MultiplePlacementFailures = new global::GameEvent.Types.MultiplePlacementFailures();
        }
        MultiplePlacementFailures.MergeFrom(other.MultiplePlacementFailures);
        break;
      case EventOneofCase.MultipleFouls:
        if (MultipleFouls == null) {
          MultipleFouls = new global::GameEvent.Types.MultipleFouls();
        }
        MultipleFouls.MergeFrom(other.MultipleFouls);
        break;
      case EventOneofCase.UnsportingBehaviorMinor:
        if (UnsportingBehaviorMinor == null) {
          UnsportingBehaviorMinor = new global::GameEvent.Types.UnsportingBehaviorMinor();
        }
        UnsportingBehaviorMinor.MergeFrom(other.UnsportingBehaviorMinor);
        break;
      case EventOneofCase.UnsportingBehaviorMajor:
        if (UnsportingBehaviorMajor == null) {
          UnsportingBehaviorMajor = new global::GameEvent.Types.UnsportingBehaviorMajor();
        }
        UnsportingBehaviorMajor.MergeFrom(other.UnsportingBehaviorMajor);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          global::GameEvent.Types.Prepared subBuilder = new global::GameEvent.Types.Prepared();
          if (eventCase_ == EventOneofCase.Prepared) {
            subBuilder.MergeFrom(Prepared);
          }
          input.ReadMessage(subBuilder);
          Prepared = subBuilder;
          break;
        }
        case 18: {
          global::GameEvent.Types.NoProgressInGame subBuilder = new global::GameEvent.Types.NoProgressInGame();
          if (eventCase_ == EventOneofCase.NoProgressInGame) {
            subBuilder.MergeFrom(NoProgressInGame);
          }
          input.ReadMessage(subBuilder);
          NoProgressInGame = subBuilder;
          break;
        }
        case 26: {
          global::GameEvent.Types.PlacementFailed subBuilder = new global::GameEvent.Types.PlacementFailed();
          if (eventCase_ == EventOneofCase.PlacementFailed) {
            subBuilder.MergeFrom(PlacementFailed);
          }
          input.ReadMessage(subBuilder);
          PlacementFailed = subBuilder;
          break;
        }
        case 42: {
          global::GameEvent.Types.PlacementSucceeded subBuilder = new global::GameEvent.Types.PlacementSucceeded();
          if (eventCase_ == EventOneofCase.PlacementSucceeded) {
            subBuilder.MergeFrom(PlacementSucceeded);
          }
          input.ReadMessage(subBuilder);
          PlacementSucceeded = subBuilder;
          break;
        }
        case 50: {
          global::GameEvent.Types.BallLeftField subBuilder = new global::GameEvent.Types.BallLeftField();
          if (eventCase_ == EventOneofCase.BallLeftFieldTouchLine) {
            subBuilder.MergeFrom(BallLeftFieldTouchLine);
          }
          input.ReadMessage(subBuilder);
          BallLeftFieldTouchLine = subBuilder;
          break;
        }
        case 58: {
          global::GameEvent.Types.BallLeftField subBuilder = new global::GameEvent.Types.BallLeftField();
          if (eventCase_ == EventOneofCase.BallLeftFieldGoalLine) {
            subBuilder.MergeFrom(BallLeftFieldGoalLine);
          }
          input.ReadMessage(subBuilder);
          BallLeftFieldGoalLine = subBuilder;
          break;
        }
        case 66: {
          global::GameEvent.Types.Goal subBuilder = new global::GameEvent.Types.Goal();
          if (eventCase_ == EventOneofCase.Goal) {
            subBuilder.MergeFrom(Goal);
          }
          input.ReadMessage(subBuilder);
          Goal = subBuilder;
          break;
        }
        case 74: {
          global::GameEvent.Types.IndirectGoal subBuilder = new global::GameEvent.Types.IndirectGoal();
          if (eventCase_ == EventOneofCase.IndirectGoal) {
            subBuilder.MergeFrom(IndirectGoal);
          }
          input.ReadMessage(subBuilder);
          IndirectGoal = subBuilder;
          break;
        }
        case 82: {
          global::GameEvent.Types.ChippedGoal subBuilder = new global::GameEvent.Types.ChippedGoal();
          if (eventCase_ == EventOneofCase.ChippedGoal) {
            subBuilder.MergeFrom(ChippedGoal);
          }
          input.ReadMessage(subBuilder);
          ChippedGoal = subBuilder;
          break;
        }
        case 90: {
          global::GameEvent.Types.AimlessKick subBuilder = new global::GameEvent.Types.AimlessKick();
          if (eventCase_ == EventOneofCase.AimlessKick) {
            subBuilder.MergeFrom(AimlessKick);
          }
          input.ReadMessage(subBuilder);
          AimlessKick = subBuilder;
          break;
        }
        case 98: {
          global::GameEvent.Types.KickTimeout subBuilder = new global::GameEvent.Types.KickTimeout();
          if (eventCase_ == EventOneofCase.KickTimeout) {
            subBuilder.MergeFrom(KickTimeout);
          }
          input.ReadMessage(subBuilder);
          KickTimeout = subBuilder;
          break;
        }
        case 106: {
          global::GameEvent.Types.KeeperHeldBall subBuilder = new global::GameEvent.Types.KeeperHeldBall();
          if (eventCase_ == EventOneofCase.KeeperHeldBall) {
            subBuilder.MergeFrom(KeeperHeldBall);
          }
          input.ReadMessage(subBuilder);
          KeeperHeldBall = subBuilder;
          break;
        }
        case 114: {
          global::GameEvent.Types.AttackerDoubleTouchedBall subBuilder = new global::GameEvent.Types.AttackerDoubleTouchedBall();
          if (eventCase_ == EventOneofCase.AttackerDoubleTouchedBall) {
            subBuilder.MergeFrom(AttackerDoubleTouchedBall);
          }
          input.ReadMessage(subBuilder);
          AttackerDoubleTouchedBall = subBuilder;
          break;
        }
        case 122: {
          global::GameEvent.Types.AttackerTouchedBallInDefenseArea subBuilder = new global::GameEvent.Types.AttackerTouchedBallInDefenseArea();
          if (eventCase_ == EventOneofCase.AttackerTouchedBallInDefenseArea) {
            subBuilder.MergeFrom(AttackerTouchedBallInDefenseArea);
          }
          input.ReadMessage(subBuilder);
          AttackerTouchedBallInDefenseArea = subBuilder;
          break;
        }
        case 130: {
          global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea subBuilder = new global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea();
          if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseArea) {
            subBuilder.MergeFrom(AttackerTouchedOpponentInDefenseArea);
          }
          input.ReadMessage(subBuilder);
          AttackerTouchedOpponentInDefenseArea = subBuilder;
          break;
        }
        case 138: {
          global::GameEvent.Types.BotDribbledBallTooFar subBuilder = new global::GameEvent.Types.BotDribbledBallTooFar();
          if (eventCase_ == EventOneofCase.BotDribbledBallTooFar) {
            subBuilder.MergeFrom(BotDribbledBallTooFar);
          }
          input.ReadMessage(subBuilder);
          BotDribbledBallTooFar = subBuilder;
          break;
        }
        case 146: {
          global::GameEvent.Types.BotKickedBallTooFast subBuilder = new global::GameEvent.Types.BotKickedBallTooFast();
          if (eventCase_ == EventOneofCase.BotKickedBallTooFast) {
            subBuilder.MergeFrom(BotKickedBallTooFast);
          }
          input.ReadMessage(subBuilder);
          BotKickedBallTooFast = subBuilder;
          break;
        }
        case 154: {
          global::GameEvent.Types.AttackerTooCloseToDefenseArea subBuilder = new global::GameEvent.Types.AttackerTooCloseToDefenseArea();
          if (eventCase_ == EventOneofCase.AttackerTooCloseToDefenseArea) {
            subBuilder.MergeFrom(AttackerTooCloseToDefenseArea);
          }
          input.ReadMessage(subBuilder);
          AttackerTooCloseToDefenseArea = subBuilder;
          break;
        }
        case 162: {
          global::GameEvent.Types.BotInterferedPlacement subBuilder = new global::GameEvent.Types.BotInterferedPlacement();
          if (eventCase_ == EventOneofCase.BotInterferedPlacement) {
            subBuilder.MergeFrom(BotInterferedPlacement);
          }
          input.ReadMessage(subBuilder);
          BotInterferedPlacement = subBuilder;
          break;
        }
        case 170: {
          global::GameEvent.Types.BotCrashDrawn subBuilder = new global::GameEvent.Types.BotCrashDrawn();
          if (eventCase_ == EventOneofCase.BotCrashDrawn) {
            subBuilder.MergeFrom(BotCrashDrawn);
          }
          input.ReadMessage(subBuilder);
          BotCrashDrawn = subBuilder;
          break;
        }
        case 178: {
          global::GameEvent.Types.BotCrashUnique subBuilder = new global::GameEvent.Types.BotCrashUnique();
          if (eventCase_ == EventOneofCase.BotCrashUnique) {
            subBuilder.MergeFrom(BotCrashUnique);
          }
          input.ReadMessage(subBuilder);
          BotCrashUnique = subBuilder;
          break;
        }
        case 186: {
          global::GameEvent.Types.BotCrashUnique subBuilder = new global::GameEvent.Types.BotCrashUnique();
          if (eventCase_ == EventOneofCase.BotCrashUniqueSkipped) {
            subBuilder.MergeFrom(BotCrashUniqueSkipped);
          }
          input.ReadMessage(subBuilder);
          BotCrashUniqueSkipped = subBuilder;
          break;
        }
        case 194: {
          global::GameEvent.Types.BotPushedBot subBuilder = new global::GameEvent.Types.BotPushedBot();
          if (eventCase_ == EventOneofCase.BotPushedBot) {
            subBuilder.MergeFrom(BotPushedBot);
          }
          input.ReadMessage(subBuilder);
          BotPushedBot = subBuilder;
          break;
        }
        case 202: {
          global::GameEvent.Types.BotPushedBot subBuilder = new global::GameEvent.Types.BotPushedBot();
          if (eventCase_ == EventOneofCase.BotPushedBotSkipped) {
            subBuilder.MergeFrom(BotPushedBotSkipped);
          }
          input.ReadMessage(subBuilder);
          BotPushedBotSkipped = subBuilder;
          break;
        }
        case 210: {
          global::GameEvent.Types.BotHeldBallDeliberately subBuilder = new global::GameEvent.Types.BotHeldBallDeliberately();
          if (eventCase_ == EventOneofCase.BotHeldBallDeliberately) {
            subBuilder.MergeFrom(BotHeldBallDeliberately);
          }
          input.ReadMessage(subBuilder);
          BotHeldBallDeliberately = subBuilder;
          break;
        }
        case 218: {
          global::GameEvent.Types.BotTippedOver subBuilder = new global::GameEvent.Types.BotTippedOver();
          if (eventCase_ == EventOneofCase.BotTippedOver) {
            subBuilder.MergeFrom(BotTippedOver);
          }
          input.ReadMessage(subBuilder);
          BotTippedOver = subBuilder;
          break;
        }
        case 226: {
          global::GameEvent.Types.BotTooFastInStop subBuilder = new global::GameEvent.Types.BotTooFastInStop();
          if (eventCase_ == EventOneofCase.BotTooFastInStop) {
            subBuilder.MergeFrom(BotTooFastInStop);
          }
          input.ReadMessage(subBuilder);
          BotTooFastInStop = subBuilder;
          break;
        }
        case 234: {
          global::GameEvent.Types.DefenderTooCloseToKickPoint subBuilder = new global::GameEvent.Types.DefenderTooCloseToKickPoint();
          if (eventCase_ == EventOneofCase.DefenderTooCloseToKickPoint) {
            subBuilder.MergeFrom(DefenderTooCloseToKickPoint);
          }
          input.ReadMessage(subBuilder);
          DefenderTooCloseToKickPoint = subBuilder;
          break;
        }
        case 242: {
          global::GameEvent.Types.DefenderInDefenseAreaPartially subBuilder = new global::GameEvent.Types.DefenderInDefenseAreaPartially();
          if (eventCase_ == EventOneofCase.DefenderInDefenseAreaPartially) {
            subBuilder.MergeFrom(DefenderInDefenseAreaPartially);
          }
          input.ReadMessage(subBuilder);
          DefenderInDefenseAreaPartially = subBuilder;
          break;
        }
        case 250: {
          global::GameEvent.Types.DefenderInDefenseArea subBuilder = new global::GameEvent.Types.DefenderInDefenseArea();
          if (eventCase_ == EventOneofCase.DefenderInDefenseArea) {
            subBuilder.MergeFrom(DefenderInDefenseArea);
          }
          input.ReadMessage(subBuilder);
          DefenderInDefenseArea = subBuilder;
          break;
        }
        case 258: {
          global::GameEvent.Types.MultipleCards subBuilder = new global::GameEvent.Types.MultipleCards();
          if (eventCase_ == EventOneofCase.MultipleCards) {
            subBuilder.MergeFrom(MultipleCards);
          }
          input.ReadMessage(subBuilder);
          MultipleCards = subBuilder;
          break;
        }
        case 266: {
          global::GameEvent.Types.MultiplePlacementFailures subBuilder = new global::GameEvent.Types.MultiplePlacementFailures();
          if (eventCase_ == EventOneofCase.MultiplePlacementFailures) {
            subBuilder.MergeFrom(MultiplePlacementFailures);
          }
          input.ReadMessage(subBuilder);
          MultiplePlacementFailures = subBuilder;
          break;
        }
        case 274: {
          global::GameEvent.Types.MultipleFouls subBuilder = new global::GameEvent.Types.MultipleFouls();
          if (eventCase_ == EventOneofCase.MultipleFouls) {
            subBuilder.MergeFrom(MultipleFouls);
          }
          input.ReadMessage(subBuilder);
          MultipleFouls = subBuilder;
          break;
        }
        case 282: {
          global::GameEvent.Types.UnsportingBehaviorMinor subBuilder = new global::GameEvent.Types.UnsportingBehaviorMinor();
          if (eventCase_ == EventOneofCase.UnsportingBehaviorMinor) {
            subBuilder.MergeFrom(UnsportingBehaviorMinor);
          }
          input.ReadMessage(subBuilder);
          UnsportingBehaviorMinor = subBuilder;
          break;
        }
        case 290: {
          global::GameEvent.Types.UnsportingBehaviorMajor subBuilder = new global::GameEvent.Types.UnsportingBehaviorMajor();
          if (eventCase_ == EventOneofCase.UnsportingBehaviorMajor) {
            subBuilder.MergeFrom(UnsportingBehaviorMajor);
          }
          input.ReadMessage(subBuilder);
          UnsportingBehaviorMajor = subBuilder;
          break;
        }
        case 298: {
          global::GameEvent.Types.BotSubstitution subBuilder = new global::GameEvent.Types.BotSubstitution();
          if (eventCase_ == EventOneofCase.BotSubstitution) {
            subBuilder.MergeFrom(BotSubstitution);
          }
          input.ReadMessage(subBuilder);
          BotSubstitution = subBuilder;
          break;
        }
        case 306: {
          global::GameEvent.Types.TooManyRobots subBuilder = new global::GameEvent.Types.TooManyRobots();
          if (eventCase_ == EventOneofCase.TooManyRobots) {
            subBuilder.MergeFrom(TooManyRobots);
          }
          input.ReadMessage(subBuilder);
          TooManyRobots = subBuilder;
          break;
        }
        case 314: {
          global::GameEvent.Types.Goal subBuilder = new global::GameEvent.Types.Goal();
          if (eventCase_ == EventOneofCase.PossibleGoal) {
            subBuilder.MergeFrom(PossibleGoal);
          }
          input.ReadMessage(subBuilder);
          PossibleGoal = subBuilder;
          break;
        }
        case 320: {
          Type = (global::GameEventType) input.ReadEnum();
          break;
        }
        case 330: {
          origin_.AddEntriesFrom(input, _repeated_origin_codec);
          break;
        }
        case 338: {
          global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea subBuilder = new global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea();
          if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped) {
            subBuilder.MergeFrom(AttackerTouchedOpponentInDefenseAreaSkipped);
          }
          input.ReadMessage(subBuilder);
          AttackerTouchedOpponentInDefenseAreaSkipped = subBuilder;
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          global::GameEvent.Types.Prepared subBuilder = new global::GameEvent.Types.Prepared();
          if (eventCase_ == EventOneofCase.Prepared) {
            subBuilder.MergeFrom(Prepared);
          }
          input.ReadMessage(subBuilder);
          Prepared = subBuilder;
          break;
        }
        case 18: {
          global::GameEvent.Types.NoProgressInGame subBuilder = new global::GameEvent.Types.NoProgressInGame();
          if (eventCase_ == EventOneofCase.NoProgressInGame) {
            subBuilder.MergeFrom(NoProgressInGame);
          }
          input.ReadMessage(subBuilder);
          NoProgressInGame = subBuilder;
          break;
        }
        case 26: {
          global::GameEvent.Types.PlacementFailed subBuilder = new global::GameEvent.Types.PlacementFailed();
          if (eventCase_ == EventOneofCase.PlacementFailed) {
            subBuilder.MergeFrom(PlacementFailed);
          }
          input.ReadMessage(subBuilder);
          PlacementFailed = subBuilder;
          break;
        }
        case 42: {
          global::GameEvent.Types.PlacementSucceeded subBuilder = new global::GameEvent.Types.PlacementSucceeded();
          if (eventCase_ == EventOneofCase.PlacementSucceeded) {
            subBuilder.MergeFrom(PlacementSucceeded);
          }
          input.ReadMessage(subBuilder);
          PlacementSucceeded = subBuilder;
          break;
        }
        case 50: {
          global::GameEvent.Types.BallLeftField subBuilder = new global::GameEvent.Types.BallLeftField();
          if (eventCase_ == EventOneofCase.BallLeftFieldTouchLine) {
            subBuilder.MergeFrom(BallLeftFieldTouchLine);
          }
          input.ReadMessage(subBuilder);
          BallLeftFieldTouchLine = subBuilder;
          break;
        }
        case 58: {
          global::GameEvent.Types.BallLeftField subBuilder = new global::GameEvent.Types.BallLeftField();
          if (eventCase_ == EventOneofCase.BallLeftFieldGoalLine) {
            subBuilder.MergeFrom(BallLeftFieldGoalLine);
          }
          input.ReadMessage(subBuilder);
          BallLeftFieldGoalLine = subBuilder;
          break;
        }
        case 66: {
          global::GameEvent.Types.Goal subBuilder = new global::GameEvent.Types.Goal();
          if (eventCase_ == EventOneofCase.Goal) {
            subBuilder.MergeFrom(Goal);
          }
          input.ReadMessage(subBuilder);
          Goal = subBuilder;
          break;
        }
        case 74: {
          global::GameEvent.Types.IndirectGoal subBuilder = new global::GameEvent.Types.IndirectGoal();
          if (eventCase_ == EventOneofCase.IndirectGoal) {
            subBuilder.MergeFrom(IndirectGoal);
          }
          input.ReadMessage(subBuilder);
          IndirectGoal = subBuilder;
          break;
        }
        case 82: {
          global::GameEvent.Types.ChippedGoal subBuilder = new global::GameEvent.Types.ChippedGoal();
          if (eventCase_ == EventOneofCase.ChippedGoal) {
            subBuilder.MergeFrom(ChippedGoal);
          }
          input.ReadMessage(subBuilder);
          ChippedGoal = subBuilder;
          break;
        }
        case 90: {
          global::GameEvent.Types.AimlessKick subBuilder = new global::GameEvent.Types.AimlessKick();
          if (eventCase_ == EventOneofCase.AimlessKick) {
            subBuilder.MergeFrom(AimlessKick);
          }
          input.ReadMessage(subBuilder);
          AimlessKick = subBuilder;
          break;
        }
        case 98: {
          global::GameEvent.Types.KickTimeout subBuilder = new global::GameEvent.Types.KickTimeout();
          if (eventCase_ == EventOneofCase.KickTimeout) {
            subBuilder.MergeFrom(KickTimeout);
          }
          input.ReadMessage(subBuilder);
          KickTimeout = subBuilder;
          break;
        }
        case 106: {
          global::GameEvent.Types.KeeperHeldBall subBuilder = new global::GameEvent.Types.KeeperHeldBall();
          if (eventCase_ == EventOneofCase.KeeperHeldBall) {
            subBuilder.MergeFrom(KeeperHeldBall);
          }
          input.ReadMessage(subBuilder);
          KeeperHeldBall = subBuilder;
          break;
        }
        case 114: {
          global::GameEvent.Types.AttackerDoubleTouchedBall subBuilder = new global::GameEvent.Types.AttackerDoubleTouchedBall();
          if (eventCase_ == EventOneofCase.AttackerDoubleTouchedBall) {
            subBuilder.MergeFrom(AttackerDoubleTouchedBall);
          }
          input.ReadMessage(subBuilder);
          AttackerDoubleTouchedBall = subBuilder;
          break;
        }
        case 122: {
          global::GameEvent.Types.AttackerTouchedBallInDefenseArea subBuilder = new global::GameEvent.Types.AttackerTouchedBallInDefenseArea();
          if (eventCase_ == EventOneofCase.AttackerTouchedBallInDefenseArea) {
            subBuilder.MergeFrom(AttackerTouchedBallInDefenseArea);
          }
          input.ReadMessage(subBuilder);
          AttackerTouchedBallInDefenseArea = subBuilder;
          break;
        }
        case 130: {
          global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea subBuilder = new global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea();
          if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseArea) {
            subBuilder.MergeFrom(AttackerTouchedOpponentInDefenseArea);
          }
          input.ReadMessage(subBuilder);
          AttackerTouchedOpponentInDefenseArea = subBuilder;
          break;
        }
        case 138: {
          global::GameEvent.Types.BotDribbledBallTooFar subBuilder = new global::GameEvent.Types.BotDribbledBallTooFar();
          if (eventCase_ == EventOneofCase.BotDribbledBallTooFar) {
            subBuilder.MergeFrom(BotDribbledBallTooFar);
          }
          input.ReadMessage(subBuilder);
          BotDribbledBallTooFar = subBuilder;
          break;
        }
        case 146: {
          global::GameEvent.Types.BotKickedBallTooFast subBuilder = new global::GameEvent.Types.BotKickedBallTooFast();
          if (eventCase_ == EventOneofCase.BotKickedBallTooFast) {
            subBuilder.MergeFrom(BotKickedBallTooFast);
          }
          input.ReadMessage(subBuilder);
          BotKickedBallTooFast = subBuilder;
          break;
        }
        case 154: {
          global::GameEvent.Types.AttackerTooCloseToDefenseArea subBuilder = new global::GameEvent.Types.AttackerTooCloseToDefenseArea();
          if (eventCase_ == EventOneofCase.AttackerTooCloseToDefenseArea) {
            subBuilder.MergeFrom(AttackerTooCloseToDefenseArea);
          }
          input.ReadMessage(subBuilder);
          AttackerTooCloseToDefenseArea = subBuilder;
          break;
        }
        case 162: {
          global::GameEvent.Types.BotInterferedPlacement subBuilder = new global::GameEvent.Types.BotInterferedPlacement();
          if (eventCase_ == EventOneofCase.BotInterferedPlacement) {
            subBuilder.MergeFrom(BotInterferedPlacement);
          }
          input.ReadMessage(subBuilder);
          BotInterferedPlacement = subBuilder;
          break;
        }
        case 170: {
          global::GameEvent.Types.BotCrashDrawn subBuilder = new global::GameEvent.Types.BotCrashDrawn();
          if (eventCase_ == EventOneofCase.BotCrashDrawn) {
            subBuilder.MergeFrom(BotCrashDrawn);
          }
          input.ReadMessage(subBuilder);
          BotCrashDrawn = subBuilder;
          break;
        }
        case 178: {
          global::GameEvent.Types.BotCrashUnique subBuilder = new global::GameEvent.Types.BotCrashUnique();
          if (eventCase_ == EventOneofCase.BotCrashUnique) {
            subBuilder.MergeFrom(BotCrashUnique);
          }
          input.ReadMessage(subBuilder);
          BotCrashUnique = subBuilder;
          break;
        }
        case 186: {
          global::GameEvent.Types.BotCrashUnique subBuilder = new global::GameEvent.Types.BotCrashUnique();
          if (eventCase_ == EventOneofCase.BotCrashUniqueSkipped) {
            subBuilder.MergeFrom(BotCrashUniqueSkipped);
          }
          input.ReadMessage(subBuilder);
          BotCrashUniqueSkipped = subBuilder;
          break;
        }
        case 194: {
          global::GameEvent.Types.BotPushedBot subBuilder = new global::GameEvent.Types.BotPushedBot();
          if (eventCase_ == EventOneofCase.BotPushedBot) {
            subBuilder.MergeFrom(BotPushedBot);
          }
          input.ReadMessage(subBuilder);
          BotPushedBot = subBuilder;
          break;
        }
        case 202: {
          global::GameEvent.Types.BotPushedBot subBuilder = new global::GameEvent.Types.BotPushedBot();
          if (eventCase_ == EventOneofCase.BotPushedBotSkipped) {
            subBuilder.MergeFrom(BotPushedBotSkipped);
          }
          input.ReadMessage(subBuilder);
          BotPushedBotSkipped = subBuilder;
          break;
        }
        case 210: {
          global::GameEvent.Types.BotHeldBallDeliberately subBuilder = new global::GameEvent.Types.BotHeldBallDeliberately();
          if (eventCase_ == EventOneofCase.BotHeldBallDeliberately) {
            subBuilder.MergeFrom(BotHeldBallDeliberately);
          }
          input.ReadMessage(subBuilder);
          BotHeldBallDeliberately = subBuilder;
          break;
        }
        case 218: {
          global::GameEvent.Types.BotTippedOver subBuilder = new global::GameEvent.Types.BotTippedOver();
          if (eventCase_ == EventOneofCase.BotTippedOver) {
            subBuilder.MergeFrom(BotTippedOver);
          }
          input.ReadMessage(subBuilder);
          BotTippedOver = subBuilder;
          break;
        }
        case 226: {
          global::GameEvent.Types.BotTooFastInStop subBuilder = new global::GameEvent.Types.BotTooFastInStop();
          if (eventCase_ == EventOneofCase.BotTooFastInStop) {
            subBuilder.MergeFrom(BotTooFastInStop);
          }
          input.ReadMessage(subBuilder);
          BotTooFastInStop = subBuilder;
          break;
        }
        case 234: {
          global::GameEvent.Types.DefenderTooCloseToKickPoint subBuilder = new global::GameEvent.Types.DefenderTooCloseToKickPoint();
          if (eventCase_ == EventOneofCase.DefenderTooCloseToKickPoint) {
            subBuilder.MergeFrom(DefenderTooCloseToKickPoint);
          }
          input.ReadMessage(subBuilder);
          DefenderTooCloseToKickPoint = subBuilder;
          break;
        }
        case 242: {
          global::GameEvent.Types.DefenderInDefenseAreaPartially subBuilder = new global::GameEvent.Types.DefenderInDefenseAreaPartially();
          if (eventCase_ == EventOneofCase.DefenderInDefenseAreaPartially) {
            subBuilder.MergeFrom(DefenderInDefenseAreaPartially);
          }
          input.ReadMessage(subBuilder);
          DefenderInDefenseAreaPartially = subBuilder;
          break;
        }
        case 250: {
          global::GameEvent.Types.DefenderInDefenseArea subBuilder = new global::GameEvent.Types.DefenderInDefenseArea();
          if (eventCase_ == EventOneofCase.DefenderInDefenseArea) {
            subBuilder.MergeFrom(DefenderInDefenseArea);
          }
          input.ReadMessage(subBuilder);
          DefenderInDefenseArea = subBuilder;
          break;
        }
        case 258: {
          global::GameEvent.Types.MultipleCards subBuilder = new global::GameEvent.Types.MultipleCards();
          if (eventCase_ == EventOneofCase.MultipleCards) {
            subBuilder.MergeFrom(MultipleCards);
          }
          input.ReadMessage(subBuilder);
          MultipleCards = subBuilder;
          break;
        }
        case 266: {
          global::GameEvent.Types.MultiplePlacementFailures subBuilder = new global::GameEvent.Types.MultiplePlacementFailures();
          if (eventCase_ == EventOneofCase.MultiplePlacementFailures) {
            subBuilder.MergeFrom(MultiplePlacementFailures);
          }
          input.ReadMessage(subBuilder);
          MultiplePlacementFailures = subBuilder;
          break;
        }
        case 274: {
          global::GameEvent.Types.MultipleFouls subBuilder = new global::GameEvent.Types.MultipleFouls();
          if (eventCase_ == EventOneofCase.MultipleFouls) {
            subBuilder.MergeFrom(MultipleFouls);
          }
          input.ReadMessage(subBuilder);
          MultipleFouls = subBuilder;
          break;
        }
        case 282: {
          global::GameEvent.Types.UnsportingBehaviorMinor subBuilder = new global::GameEvent.Types.UnsportingBehaviorMinor();
          if (eventCase_ == EventOneofCase.UnsportingBehaviorMinor) {
            subBuilder.MergeFrom(UnsportingBehaviorMinor);
          }
          input.ReadMessage(subBuilder);
          UnsportingBehaviorMinor = subBuilder;
          break;
        }
        case 290: {
          global::GameEvent.Types.UnsportingBehaviorMajor subBuilder = new global::GameEvent.Types.UnsportingBehaviorMajor();
          if (eventCase_ == EventOneofCase.UnsportingBehaviorMajor) {
            subBuilder.MergeFrom(UnsportingBehaviorMajor);
          }
          input.ReadMessage(subBuilder);
          UnsportingBehaviorMajor = subBuilder;
          break;
        }
        case 298: {
          global::GameEvent.Types.BotSubstitution subBuilder = new global::GameEvent.Types.BotSubstitution();
          if (eventCase_ == EventOneofCase.BotSubstitution) {
            subBuilder.MergeFrom(BotSubstitution);
          }
          input.ReadMessage(subBuilder);
          BotSubstitution = subBuilder;
          break;
        }
        case 306: {
          global::GameEvent.Types.TooManyRobots subBuilder = new global::GameEvent.Types.TooManyRobots();
          if (eventCase_ == EventOneofCase.TooManyRobots) {
            subBuilder.MergeFrom(TooManyRobots);
          }
          input.ReadMessage(subBuilder);
          TooManyRobots = subBuilder;
          break;
        }
        case 314: {
          global::GameEvent.Types.Goal subBuilder = new global::GameEvent.Types.Goal();
          if (eventCase_ == EventOneofCase.PossibleGoal) {
            subBuilder.MergeFrom(PossibleGoal);
          }
          input.ReadMessage(subBuilder);
          PossibleGoal = subBuilder;
          break;
        }
        case 320: {
          Type = (global::GameEventType) input.ReadEnum();
          break;
        }
        case 330: {
          origin_.AddEntriesFrom(ref input, _repeated_origin_codec);
          break;
        }
        case 338: {
          global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea subBuilder = new global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea();
          if (eventCase_ == EventOneofCase.AttackerTouchedOpponentInDefenseAreaSkipped) {
            subBuilder.MergeFrom(AttackerTouchedOpponentInDefenseAreaSkipped);
          }
          input.ReadMessage(subBuilder);
          AttackerTouchedOpponentInDefenseAreaSkipped = subBuilder;
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the GameEvent message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    /// <summary>
    /// the ball left the field normally
    /// </summary>
    public sealed partial class BallLeftField : pb::IMessage<BallLeftField>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BallLeftField> _parser = new pb::MessageParser<BallLeftField>(() => new BallLeftField());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BallLeftField> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BallLeftField() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BallLeftField(BallLeftField other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BallLeftField Clone() {
        return new BallLeftField(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that last touched the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that last touched the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location where the ball left the field
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BallLeftField);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BallLeftField other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BallLeftField other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// the ball left the field via goal line and a team committed an aimless kick
    /// </summary>
    public sealed partial class AimlessKick : pb::IMessage<AimlessKick>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<AimlessKick> _parser = new pb::MessageParser<AimlessKick>(() => new AimlessKick());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<AimlessKick> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AimlessKick() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AimlessKick(AimlessKick other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        kickLocation_ = other.kickLocation_ != null ? other.kickLocation_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AimlessKick Clone() {
        return new AimlessKick(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that last touched the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that last touched the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location where the ball left the field
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "kick_location" field.</summary>
      public const int KickLocationFieldNumber = 4;
      private global::Location kickLocation_;
      /// <summary>
      /// the location where the ball was last touched
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location KickLocation {
        get { return kickLocation_; }
        set {
          kickLocation_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as AimlessKick);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(AimlessKick other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!object.Equals(KickLocation, other.KickLocation)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (kickLocation_ != null) hash ^= KickLocation.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (kickLocation_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(KickLocation);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (kickLocation_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(KickLocation);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (kickLocation_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(KickLocation);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(AimlessKick other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.kickLocation_ != null) {
          if (kickLocation_ == null) {
            KickLocation = new global::Location();
          }
          KickLocation.MergeFrom(other.KickLocation);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 34: {
              if (kickLocation_ == null) {
                KickLocation = new global::Location();
              }
              input.ReadMessage(KickLocation);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 34: {
              if (kickLocation_ == null) {
                KickLocation = new global::Location();
              }
              input.ReadMessage(KickLocation);
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a team shot a goal
    /// </summary>
    public sealed partial class Goal : pb::IMessage<Goal>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Goal> _parser = new pb::MessageParser<Goal>(() => new Goal());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Goal> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Goal() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Goal(Goal other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        kickingTeam_ = other.kickingTeam_;
        kickingBot_ = other.kickingBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        kickLocation_ = other.kickLocation_ != null ? other.kickLocation_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Goal Clone() {
        return new Goal(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that scored the goal
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "kicking_team" field.</summary>
      public const int KickingTeamFieldNumber = 6;
      private readonly static global::Team KickingTeamDefaultValue = global::Team.Unknown;

      private global::Team kickingTeam_;
      /// <summary>
      /// the team that shot the goal (different from by_team for own goals)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team KickingTeam {
        get { if ((_hasBits0 & 4) != 0) { return kickingTeam_; } else { return KickingTeamDefaultValue; } }
        set {
          _hasBits0 |= 4;
          kickingTeam_ = value;
        }
      }
      /// <summary>Gets whether the "kicking_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasKickingTeam {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "kicking_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearKickingTeam() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "kicking_bot" field.</summary>
      public const int KickingBotFieldNumber = 2;
      private readonly static uint KickingBotDefaultValue = 0;

      private uint kickingBot_;
      /// <summary>
      /// the bot that shot the goal
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint KickingBot {
        get { if ((_hasBits0 & 2) != 0) { return kickingBot_; } else { return KickingBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          kickingBot_ = value;
        }
      }
      /// <summary>Gets whether the "kicking_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasKickingBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "kicking_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearKickingBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location where the ball entered the goal
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "kick_location" field.</summary>
      public const int KickLocationFieldNumber = 4;
      private global::Location kickLocation_;
      /// <summary>
      /// the location where the ball was kicked
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location KickLocation {
        get { return kickLocation_; }
        set {
          kickLocation_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Goal);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Goal other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (KickingTeam != other.KickingTeam) return false;
        if (KickingBot != other.KickingBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!object.Equals(KickLocation, other.KickLocation)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasKickingTeam) hash ^= KickingTeam.GetHashCode();
        if (HasKickingBot) hash ^= KickingBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (kickLocation_ != null) hash ^= KickLocation.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasKickingBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(KickingBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (kickLocation_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(KickLocation);
        }
        if (HasKickingTeam) {
          output.WriteRawTag(48);
          output.WriteEnum((int) KickingTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasKickingBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(KickingBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (kickLocation_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(KickLocation);
        }
        if (HasKickingTeam) {
          output.WriteRawTag(48);
          output.WriteEnum((int) KickingTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasKickingTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) KickingTeam);
        }
        if (HasKickingBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KickingBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (kickLocation_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(KickLocation);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Goal other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasKickingTeam) {
          KickingTeam = other.KickingTeam;
        }
        if (other.HasKickingBot) {
          KickingBot = other.KickingBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.kickLocation_ != null) {
          if (kickLocation_ == null) {
            KickLocation = new global::Location();
          }
          KickLocation.MergeFrom(other.KickLocation);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              KickingBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 34: {
              if (kickLocation_ == null) {
                KickLocation = new global::Location();
              }
              input.ReadMessage(KickLocation);
              break;
            }
            case 48: {
              KickingTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              KickingBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 34: {
              if (kickLocation_ == null) {
                KickLocation = new global::Location();
              }
              input.ReadMessage(KickLocation);
              break;
            }
            case 48: {
              KickingTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// the ball entered the goal directly during an indirect free kick
    /// </summary>
    public sealed partial class IndirectGoal : pb::IMessage<IndirectGoal>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<IndirectGoal> _parser = new pb::MessageParser<IndirectGoal>(() => new IndirectGoal());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<IndirectGoal> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[3]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public IndirectGoal() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public IndirectGoal(IndirectGoal other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        kickLocation_ = other.kickLocation_ != null ? other.kickLocation_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public IndirectGoal Clone() {
        return new IndirectGoal(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that tried to shoot the goal
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that kicked the ball - at least the team must be set
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location where the ball entered the goal
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "kick_location" field.</summary>
      public const int KickLocationFieldNumber = 4;
      private global::Location kickLocation_;
      /// <summary>
      /// the location where the ball was kicked
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location KickLocation {
        get { return kickLocation_; }
        set {
          kickLocation_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as IndirectGoal);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(IndirectGoal other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!object.Equals(KickLocation, other.KickLocation)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (kickLocation_ != null) hash ^= KickLocation.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (kickLocation_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(KickLocation);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (kickLocation_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(KickLocation);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (kickLocation_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(KickLocation);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(IndirectGoal other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.kickLocation_ != null) {
          if (kickLocation_ == null) {
            KickLocation = new global::Location();
          }
          KickLocation.MergeFrom(other.KickLocation);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 34: {
              if (kickLocation_ == null) {
                KickLocation = new global::Location();
              }
              input.ReadMessage(KickLocation);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 34: {
              if (kickLocation_ == null) {
                KickLocation = new global::Location();
              }
              input.ReadMessage(KickLocation);
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// the ball entered the goal, but was initially chipped
    /// </summary>
    public sealed partial class ChippedGoal : pb::IMessage<ChippedGoal>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ChippedGoal> _parser = new pb::MessageParser<ChippedGoal>(() => new ChippedGoal());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ChippedGoal> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[4]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ChippedGoal() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ChippedGoal(ChippedGoal other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        kickLocation_ = other.kickLocation_ != null ? other.kickLocation_.Clone() : null;
        maxBallHeight_ = other.maxBallHeight_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ChippedGoal Clone() {
        return new ChippedGoal(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that tried to shoot the goal
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that kicked the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location where the ball entered the goal
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "kick_location" field.</summary>
      public const int KickLocationFieldNumber = 4;
      private global::Location kickLocation_;
      /// <summary>
      /// the location where the ball was kicked
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location KickLocation {
        get { return kickLocation_; }
        set {
          kickLocation_ = value;
        }
      }

      /// <summary>Field number for the "max_ball_height" field.</summary>
      public const int MaxBallHeightFieldNumber = 5;
      private readonly static float MaxBallHeightDefaultValue = 0F;

      private float maxBallHeight_;
      /// <summary>
      /// the maximum height [m] of the ball, before it entered the goal and since the last kick
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float MaxBallHeight {
        get { if ((_hasBits0 & 4) != 0) { return maxBallHeight_; } else { return MaxBallHeightDefaultValue; } }
        set {
          _hasBits0 |= 4;
          maxBallHeight_ = value;
        }
      }
      /// <summary>Gets whether the "max_ball_height" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMaxBallHeight {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "max_ball_height" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMaxBallHeight() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ChippedGoal);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ChippedGoal other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!object.Equals(KickLocation, other.KickLocation)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxBallHeight, other.MaxBallHeight)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (kickLocation_ != null) hash ^= KickLocation.GetHashCode();
        if (HasMaxBallHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxBallHeight);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (kickLocation_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(KickLocation);
        }
        if (HasMaxBallHeight) {
          output.WriteRawTag(45);
          output.WriteFloat(MaxBallHeight);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (kickLocation_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(KickLocation);
        }
        if (HasMaxBallHeight) {
          output.WriteRawTag(45);
          output.WriteFloat(MaxBallHeight);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (kickLocation_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(KickLocation);
        }
        if (HasMaxBallHeight) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ChippedGoal other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.kickLocation_ != null) {
          if (kickLocation_ == null) {
            KickLocation = new global::Location();
          }
          KickLocation.MergeFrom(other.KickLocation);
        }
        if (other.HasMaxBallHeight) {
          MaxBallHeight = other.MaxBallHeight;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 34: {
              if (kickLocation_ == null) {
                KickLocation = new global::Location();
              }
              input.ReadMessage(KickLocation);
              break;
            }
            case 45: {
              MaxBallHeight = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 34: {
              if (kickLocation_ == null) {
                KickLocation = new global::Location();
              }
              input.ReadMessage(KickLocation);
              break;
            }
            case 45: {
              MaxBallHeight = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a bot moved too fast while the game was stopped
    /// </summary>
    public sealed partial class BotTooFastInStop : pb::IMessage<BotTooFastInStop>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotTooFastInStop> _parser = new pb::MessageParser<BotTooFastInStop>(() => new BotTooFastInStop());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotTooFastInStop> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[5]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotTooFastInStop() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotTooFastInStop(BotTooFastInStop other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        speed_ = other.speed_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotTooFastInStop Clone() {
        return new BotTooFastInStop(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that was too fast
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the bot
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "speed" field.</summary>
      public const int SpeedFieldNumber = 4;
      private readonly static float SpeedDefaultValue = 0F;

      private float speed_;
      /// <summary>
      /// the bot speed [m/s]
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Speed {
        get { if ((_hasBits0 & 4) != 0) { return speed_; } else { return SpeedDefaultValue; } }
        set {
          _hasBits0 |= 4;
          speed_ = value;
        }
      }
      /// <summary>Gets whether the "speed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSpeed {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "speed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSpeed() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotTooFastInStop);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotTooFastInStop other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasSpeed) {
          output.WriteRawTag(37);
          output.WriteFloat(Speed);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasSpeed) {
          output.WriteRawTag(37);
          output.WriteFloat(Speed);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasSpeed) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotTooFastInStop other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasSpeed) {
          Speed = other.Speed;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Speed = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Speed = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a bot of the defending team got too close to the kick point during a free kick
    /// </summary>
    public sealed partial class DefenderTooCloseToKickPoint : pb::IMessage<DefenderTooCloseToKickPoint>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DefenderTooCloseToKickPoint> _parser = new pb::MessageParser<DefenderTooCloseToKickPoint>(() => new DefenderTooCloseToKickPoint());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DefenderTooCloseToKickPoint> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[6]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DefenderTooCloseToKickPoint() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DefenderTooCloseToKickPoint(DefenderTooCloseToKickPoint other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        distance_ = other.distance_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DefenderTooCloseToKickPoint Clone() {
        return new DefenderTooCloseToKickPoint(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that violates the distance to the kick point
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the bot
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "distance" field.</summary>
      public const int DistanceFieldNumber = 4;
      private readonly static float DistanceDefaultValue = 0F;

      private float distance_;
      /// <summary>
      /// the distance [m] from bot to the kick point (including the minimum radius)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Distance {
        get { if ((_hasBits0 & 4) != 0) { return distance_; } else { return DistanceDefaultValue; } }
        set {
          _hasBits0 |= 4;
          distance_ = value;
        }
      }
      /// <summary>Gets whether the "distance" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDistance {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "distance" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDistance() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DefenderTooCloseToKickPoint);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DefenderTooCloseToKickPoint other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasDistance) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DefenderTooCloseToKickPoint other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasDistance) {
          Distance = other.Distance;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// two robots crashed into each other with similar speeds
    /// </summary>
    public sealed partial class BotCrashDrawn : pb::IMessage<BotCrashDrawn>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotCrashDrawn> _parser = new pb::MessageParser<BotCrashDrawn>(() => new BotCrashDrawn());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotCrashDrawn> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[7]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotCrashDrawn() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotCrashDrawn(BotCrashDrawn other) : this() {
        _hasBits0 = other._hasBits0;
        botYellow_ = other.botYellow_;
        botBlue_ = other.botBlue_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        crashSpeed_ = other.crashSpeed_;
        speedDiff_ = other.speedDiff_;
        crashAngle_ = other.crashAngle_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotCrashDrawn Clone() {
        return new BotCrashDrawn(this);
      }

      /// <summary>Field number for the "bot_yellow" field.</summary>
      public const int BotYellowFieldNumber = 1;
      private readonly static uint BotYellowDefaultValue = 0;

      private uint botYellow_;
      /// <summary>
      /// the bot of the yellow team
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint BotYellow {
        get { if ((_hasBits0 & 1) != 0) { return botYellow_; } else { return BotYellowDefaultValue; } }
        set {
          _hasBits0 |= 1;
          botYellow_ = value;
        }
      }
      /// <summary>Gets whether the "bot_yellow" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBotYellow {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "bot_yellow" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBotYellow() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "bot_blue" field.</summary>
      public const int BotBlueFieldNumber = 2;
      private readonly static uint BotBlueDefaultValue = 0;

      private uint botBlue_;
      /// <summary>
      /// the bot of the blue team
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint BotBlue {
        get { if ((_hasBits0 & 2) != 0) { return botBlue_; } else { return BotBlueDefaultValue; } }
        set {
          _hasBits0 |= 2;
          botBlue_ = value;
        }
      }
      /// <summary>Gets whether the "bot_blue" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBotBlue {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "bot_blue" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBotBlue() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the crash (center between both bots)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "crash_speed" field.</summary>
      public const int CrashSpeedFieldNumber = 4;
      private readonly static float CrashSpeedDefaultValue = 0F;

      private float crashSpeed_;
      /// <summary>
      /// the calculated crash speed [m/s] of the two bots
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float CrashSpeed {
        get { if ((_hasBits0 & 4) != 0) { return crashSpeed_; } else { return CrashSpeedDefaultValue; } }
        set {
          _hasBits0 |= 4;
          crashSpeed_ = value;
        }
      }
      /// <summary>Gets whether the "crash_speed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCrashSpeed {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "crash_speed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCrashSpeed() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "speed_diff" field.</summary>
      public const int SpeedDiffFieldNumber = 5;
      private readonly static float SpeedDiffDefaultValue = 0F;

      private float speedDiff_;
      /// <summary>
      /// the difference [m/s] of the velocity of the two bots
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float SpeedDiff {
        get { if ((_hasBits0 & 8) != 0) { return speedDiff_; } else { return SpeedDiffDefaultValue; } }
        set {
          _hasBits0 |= 8;
          speedDiff_ = value;
        }
      }
      /// <summary>Gets whether the "speed_diff" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSpeedDiff {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "speed_diff" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSpeedDiff() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "crash_angle" field.</summary>
      public const int CrashAngleFieldNumber = 6;
      private readonly static float CrashAngleDefaultValue = 0F;

      private float crashAngle_;
      /// <summary>
      /// the angle [rad] in the range [0, π] of the bot velocity vectors
      /// an angle of 0 rad (  0°) means, the bots barely touched each other
      /// an angle of π rad (180°) means, the bots crashed frontal into each other
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float CrashAngle {
        get { if ((_hasBits0 & 16) != 0) { return crashAngle_; } else { return CrashAngleDefaultValue; } }
        set {
          _hasBits0 |= 16;
          crashAngle_ = value;
        }
      }
      /// <summary>Gets whether the "crash_angle" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCrashAngle {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "crash_angle" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCrashAngle() {
        _hasBits0 &= ~16;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotCrashDrawn);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotCrashDrawn other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (BotYellow != other.BotYellow) return false;
        if (BotBlue != other.BotBlue) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CrashSpeed, other.CrashSpeed)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedDiff, other.SpeedDiff)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CrashAngle, other.CrashAngle)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasBotYellow) hash ^= BotYellow.GetHashCode();
        if (HasBotBlue) hash ^= BotBlue.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasCrashSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CrashSpeed);
        if (HasSpeedDiff) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedDiff);
        if (HasCrashAngle) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CrashAngle);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasBotYellow) {
          output.WriteRawTag(8);
          output.WriteUInt32(BotYellow);
        }
        if (HasBotBlue) {
          output.WriteRawTag(16);
          output.WriteUInt32(BotBlue);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasCrashSpeed) {
          output.WriteRawTag(37);
          output.WriteFloat(CrashSpeed);
        }
        if (HasSpeedDiff) {
          output.WriteRawTag(45);
          output.WriteFloat(SpeedDiff);
        }
        if (HasCrashAngle) {
          output.WriteRawTag(53);
          output.WriteFloat(CrashAngle);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasBotYellow) {
          output.WriteRawTag(8);
          output.WriteUInt32(BotYellow);
        }
        if (HasBotBlue) {
          output.WriteRawTag(16);
          output.WriteUInt32(BotBlue);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasCrashSpeed) {
          output.WriteRawTag(37);
          output.WriteFloat(CrashSpeed);
        }
        if (HasSpeedDiff) {
          output.WriteRawTag(45);
          output.WriteFloat(SpeedDiff);
        }
        if (HasCrashAngle) {
          output.WriteRawTag(53);
          output.WriteFloat(CrashAngle);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasBotYellow) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BotYellow);
        }
        if (HasBotBlue) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BotBlue);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasCrashSpeed) {
          size += 1 + 4;
        }
        if (HasSpeedDiff) {
          size += 1 + 4;
        }
        if (HasCrashAngle) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotCrashDrawn other) {
        if (other == null) {
          return;
        }
        if (other.HasBotYellow) {
          BotYellow = other.BotYellow;
        }
        if (other.HasBotBlue) {
          BotBlue = other.BotBlue;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasCrashSpeed) {
          CrashSpeed = other.CrashSpeed;
        }
        if (other.HasSpeedDiff) {
          SpeedDiff = other.SpeedDiff;
        }
        if (other.HasCrashAngle) {
          CrashAngle = other.CrashAngle;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              BotYellow = input.ReadUInt32();
              break;
            }
            case 16: {
              BotBlue = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              CrashSpeed = input.ReadFloat();
              break;
            }
            case 45: {
              SpeedDiff = input.ReadFloat();
              break;
            }
            case 53: {
              CrashAngle = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              BotYellow = input.ReadUInt32();
              break;
            }
            case 16: {
              BotBlue = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              CrashSpeed = input.ReadFloat();
              break;
            }
            case 45: {
              SpeedDiff = input.ReadFloat();
              break;
            }
            case 53: {
              CrashAngle = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// two robots crashed into each other and one team was found guilty to due significant speed difference
    /// </summary>
    public sealed partial class BotCrashUnique : pb::IMessage<BotCrashUnique>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotCrashUnique> _parser = new pb::MessageParser<BotCrashUnique>(() => new BotCrashUnique());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotCrashUnique> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[8]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotCrashUnique() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotCrashUnique(BotCrashUnique other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        violator_ = other.violator_;
        victim_ = other.victim_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        crashSpeed_ = other.crashSpeed_;
        speedDiff_ = other.speedDiff_;
        crashAngle_ = other.crashAngle_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotCrashUnique Clone() {
        return new BotCrashUnique(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that caused the crash
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "violator" field.</summary>
      public const int ViolatorFieldNumber = 2;
      private readonly static uint ViolatorDefaultValue = 0;

      private uint violator_;
      /// <summary>
      /// the bot that caused the crash
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Violator {
        get { if ((_hasBits0 & 2) != 0) { return violator_; } else { return ViolatorDefaultValue; } }
        set {
          _hasBits0 |= 2;
          violator_ = value;
        }
      }
      /// <summary>Gets whether the "violator" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasViolator {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "violator" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearViolator() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "victim" field.</summary>
      public const int VictimFieldNumber = 3;
      private readonly static uint VictimDefaultValue = 0;

      private uint victim_;
      /// <summary>
      /// the bot of the opposite team that was involved in the crash
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Victim {
        get { if ((_hasBits0 & 4) != 0) { return victim_; } else { return VictimDefaultValue; } }
        set {
          _hasBits0 |= 4;
          victim_ = value;
        }
      }
      /// <summary>Gets whether the "victim" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVictim {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "victim" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVictim() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 4;
      private global::Location location_;
      /// <summary>
      /// the location of the crash (center between both bots)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "crash_speed" field.</summary>
      public const int CrashSpeedFieldNumber = 5;
      private readonly static float CrashSpeedDefaultValue = 0F;

      private float crashSpeed_;
      /// <summary>
      /// the calculated crash speed vector [m/s] of the two bots
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float CrashSpeed {
        get { if ((_hasBits0 & 8) != 0) { return crashSpeed_; } else { return CrashSpeedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          crashSpeed_ = value;
        }
      }
      /// <summary>Gets whether the "crash_speed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCrashSpeed {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "crash_speed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCrashSpeed() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "speed_diff" field.</summary>
      public const int SpeedDiffFieldNumber = 6;
      private readonly static float SpeedDiffDefaultValue = 0F;

      private float speedDiff_;
      /// <summary>
      /// the difference [m/s] of the velocity of the two bots
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float SpeedDiff {
        get { if ((_hasBits0 & 16) != 0) { return speedDiff_; } else { return SpeedDiffDefaultValue; } }
        set {
          _hasBits0 |= 16;
          speedDiff_ = value;
        }
      }
      /// <summary>Gets whether the "speed_diff" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSpeedDiff {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "speed_diff" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSpeedDiff() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "crash_angle" field.</summary>
      public const int CrashAngleFieldNumber = 7;
      private readonly static float CrashAngleDefaultValue = 0F;

      private float crashAngle_;
      /// <summary>
      /// the angle [rad] in the range [0, π] of the bot velocity vectors
      /// an angle of 0 rad (  0°) means, the bots barely touched each other
      /// an angle of π rad (180°) means, the bots crashed frontal into each other
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float CrashAngle {
        get { if ((_hasBits0 & 32) != 0) { return crashAngle_; } else { return CrashAngleDefaultValue; } }
        set {
          _hasBits0 |= 32;
          crashAngle_ = value;
        }
      }
      /// <summary>Gets whether the "crash_angle" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCrashAngle {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "crash_angle" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCrashAngle() {
        _hasBits0 &= ~32;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotCrashUnique);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotCrashUnique other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (Violator != other.Violator) return false;
        if (Victim != other.Victim) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CrashSpeed, other.CrashSpeed)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedDiff, other.SpeedDiff)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CrashAngle, other.CrashAngle)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasViolator) hash ^= Violator.GetHashCode();
        if (HasVictim) hash ^= Victim.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasCrashSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CrashSpeed);
        if (HasSpeedDiff) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedDiff);
        if (HasCrashAngle) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CrashAngle);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasViolator) {
          output.WriteRawTag(16);
          output.WriteUInt32(Violator);
        }
        if (HasVictim) {
          output.WriteRawTag(24);
          output.WriteUInt32(Victim);
        }
        if (location_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(Location);
        }
        if (HasCrashSpeed) {
          output.WriteRawTag(45);
          output.WriteFloat(CrashSpeed);
        }
        if (HasSpeedDiff) {
          output.WriteRawTag(53);
          output.WriteFloat(SpeedDiff);
        }
        if (HasCrashAngle) {
          output.WriteRawTag(61);
          output.WriteFloat(CrashAngle);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasViolator) {
          output.WriteRawTag(16);
          output.WriteUInt32(Violator);
        }
        if (HasVictim) {
          output.WriteRawTag(24);
          output.WriteUInt32(Victim);
        }
        if (location_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(Location);
        }
        if (HasCrashSpeed) {
          output.WriteRawTag(45);
          output.WriteFloat(CrashSpeed);
        }
        if (HasSpeedDiff) {
          output.WriteRawTag(53);
          output.WriteFloat(SpeedDiff);
        }
        if (HasCrashAngle) {
          output.WriteRawTag(61);
          output.WriteFloat(CrashAngle);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasViolator) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Violator);
        }
        if (HasVictim) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Victim);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasCrashSpeed) {
          size += 1 + 4;
        }
        if (HasSpeedDiff) {
          size += 1 + 4;
        }
        if (HasCrashAngle) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotCrashUnique other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasViolator) {
          Violator = other.Violator;
        }
        if (other.HasVictim) {
          Victim = other.Victim;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasCrashSpeed) {
          CrashSpeed = other.CrashSpeed;
        }
        if (other.HasSpeedDiff) {
          SpeedDiff = other.SpeedDiff;
        }
        if (other.HasCrashAngle) {
          CrashAngle = other.CrashAngle;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              Violator = input.ReadUInt32();
              break;
            }
            case 24: {
              Victim = input.ReadUInt32();
              break;
            }
            case 34: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 45: {
              CrashSpeed = input.ReadFloat();
              break;
            }
            case 53: {
              SpeedDiff = input.ReadFloat();
              break;
            }
            case 61: {
              CrashAngle = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              Violator = input.ReadUInt32();
              break;
            }
            case 24: {
              Victim = input.ReadUInt32();
              break;
            }
            case 34: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 45: {
              CrashSpeed = input.ReadFloat();
              break;
            }
            case 53: {
              SpeedDiff = input.ReadFloat();
              break;
            }
            case 61: {
              CrashAngle = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a bot pushed another bot over a significant distance
    /// </summary>
    public sealed partial class BotPushedBot : pb::IMessage<BotPushedBot>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotPushedBot> _parser = new pb::MessageParser<BotPushedBot>(() => new BotPushedBot());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotPushedBot> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[9]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotPushedBot() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotPushedBot(BotPushedBot other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        violator_ = other.violator_;
        victim_ = other.victim_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        pushedDistance_ = other.pushedDistance_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotPushedBot Clone() {
        return new BotPushedBot(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that pushed the other team
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "violator" field.</summary>
      public const int ViolatorFieldNumber = 2;
      private readonly static uint ViolatorDefaultValue = 0;

      private uint violator_;
      /// <summary>
      /// the bot that pushed the other bot
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Violator {
        get { if ((_hasBits0 & 2) != 0) { return violator_; } else { return ViolatorDefaultValue; } }
        set {
          _hasBits0 |= 2;
          violator_ = value;
        }
      }
      /// <summary>Gets whether the "violator" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasViolator {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "violator" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearViolator() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "victim" field.</summary>
      public const int VictimFieldNumber = 3;
      private readonly static uint VictimDefaultValue = 0;

      private uint victim_;
      /// <summary>
      /// the bot of the opposite team that was pushed
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Victim {
        get { if ((_hasBits0 & 4) != 0) { return victim_; } else { return VictimDefaultValue; } }
        set {
          _hasBits0 |= 4;
          victim_ = value;
        }
      }
      /// <summary>Gets whether the "victim" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVictim {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "victim" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVictim() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 4;
      private global::Location location_;
      /// <summary>
      /// the location of the push (center between both bots)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "pushed_distance" field.</summary>
      public const int PushedDistanceFieldNumber = 5;
      private readonly static float PushedDistanceDefaultValue = 0F;

      private float pushedDistance_;
      /// <summary>
      /// the pushed distance [m]
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float PushedDistance {
        get { if ((_hasBits0 & 8) != 0) { return pushedDistance_; } else { return PushedDistanceDefaultValue; } }
        set {
          _hasBits0 |= 8;
          pushedDistance_ = value;
        }
      }
      /// <summary>Gets whether the "pushed_distance" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPushedDistance {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "pushed_distance" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPushedDistance() {
        _hasBits0 &= ~8;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotPushedBot);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotPushedBot other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (Violator != other.Violator) return false;
        if (Victim != other.Victim) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PushedDistance, other.PushedDistance)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasViolator) hash ^= Violator.GetHashCode();
        if (HasVictim) hash ^= Victim.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasPushedDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PushedDistance);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasViolator) {
          output.WriteRawTag(16);
          output.WriteUInt32(Violator);
        }
        if (HasVictim) {
          output.WriteRawTag(24);
          output.WriteUInt32(Victim);
        }
        if (location_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(Location);
        }
        if (HasPushedDistance) {
          output.WriteRawTag(45);
          output.WriteFloat(PushedDistance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasViolator) {
          output.WriteRawTag(16);
          output.WriteUInt32(Violator);
        }
        if (HasVictim) {
          output.WriteRawTag(24);
          output.WriteUInt32(Victim);
        }
        if (location_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(Location);
        }
        if (HasPushedDistance) {
          output.WriteRawTag(45);
          output.WriteFloat(PushedDistance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasViolator) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Violator);
        }
        if (HasVictim) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Victim);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasPushedDistance) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotPushedBot other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasViolator) {
          Violator = other.Violator;
        }
        if (other.HasVictim) {
          Victim = other.Victim;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasPushedDistance) {
          PushedDistance = other.PushedDistance;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              Violator = input.ReadUInt32();
              break;
            }
            case 24: {
              Victim = input.ReadUInt32();
              break;
            }
            case 34: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 45: {
              PushedDistance = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              Violator = input.ReadUInt32();
              break;
            }
            case 24: {
              Victim = input.ReadUInt32();
              break;
            }
            case 34: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 45: {
              PushedDistance = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a bot tipped over
    /// </summary>
    public sealed partial class BotTippedOver : pb::IMessage<BotTippedOver>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotTippedOver> _parser = new pb::MessageParser<BotTippedOver>(() => new BotTippedOver());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotTippedOver> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[10]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotTippedOver() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotTippedOver(BotTippedOver other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotTippedOver Clone() {
        return new BotTippedOver(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that tipped over
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the bot
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotTippedOver);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotTippedOver other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotTippedOver other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a defender other than the keeper was fully located inside its own defense and touched the ball
    /// </summary>
    public sealed partial class DefenderInDefenseArea : pb::IMessage<DefenderInDefenseArea>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DefenderInDefenseArea> _parser = new pb::MessageParser<DefenderInDefenseArea>(() => new DefenderInDefenseArea());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DefenderInDefenseArea> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[11]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DefenderInDefenseArea() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DefenderInDefenseArea(DefenderInDefenseArea other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        distance_ = other.distance_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DefenderInDefenseArea Clone() {
        return new DefenderInDefenseArea(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that is inside the penalty area
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the bot
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "distance" field.</summary>
      public const int DistanceFieldNumber = 4;
      private readonly static float DistanceDefaultValue = 0F;

      private float distance_;
      /// <summary>
      /// the distance [m] from bot case to the nearest point outside the defense area
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Distance {
        get { if ((_hasBits0 & 4) != 0) { return distance_; } else { return DistanceDefaultValue; } }
        set {
          _hasBits0 |= 4;
          distance_ = value;
        }
      }
      /// <summary>Gets whether the "distance" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDistance {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "distance" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDistance() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DefenderInDefenseArea);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DefenderInDefenseArea other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasDistance) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DefenderInDefenseArea other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasDistance) {
          Distance = other.Distance;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a defender other than the keeper was partially located inside its own defense area and touched the ball
    /// </summary>
    public sealed partial class DefenderInDefenseAreaPartially : pb::IMessage<DefenderInDefenseAreaPartially>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DefenderInDefenseAreaPartially> _parser = new pb::MessageParser<DefenderInDefenseAreaPartially>(() => new DefenderInDefenseAreaPartially());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DefenderInDefenseAreaPartially> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[12]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DefenderInDefenseAreaPartially() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DefenderInDefenseAreaPartially(DefenderInDefenseAreaPartially other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        distance_ = other.distance_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DefenderInDefenseAreaPartially Clone() {
        return new DefenderInDefenseAreaPartially(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that is partially inside the penalty area
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the bot
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "distance" field.</summary>
      public const int DistanceFieldNumber = 4;
      private readonly static float DistanceDefaultValue = 0F;

      private float distance_;
      /// <summary>
      /// the distance [m] that the bot is inside the penalty area
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Distance {
        get { if ((_hasBits0 & 4) != 0) { return distance_; } else { return DistanceDefaultValue; } }
        set {
          _hasBits0 |= 4;
          distance_ = value;
        }
      }
      /// <summary>Gets whether the "distance" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDistance {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "distance" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDistance() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DefenderInDefenseAreaPartially);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DefenderInDefenseAreaPartially other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasDistance) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DefenderInDefenseAreaPartially other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasDistance) {
          Distance = other.Distance;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// an attacker touched the ball inside the opponent defense area
    /// </summary>
    public sealed partial class AttackerTouchedBallInDefenseArea : pb::IMessage<AttackerTouchedBallInDefenseArea>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<AttackerTouchedBallInDefenseArea> _parser = new pb::MessageParser<AttackerTouchedBallInDefenseArea>(() => new AttackerTouchedBallInDefenseArea());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<AttackerTouchedBallInDefenseArea> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[13]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerTouchedBallInDefenseArea() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerTouchedBallInDefenseArea(AttackerTouchedBallInDefenseArea other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        distance_ = other.distance_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerTouchedBallInDefenseArea Clone() {
        return new AttackerTouchedBallInDefenseArea(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that is inside the penalty area
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the bot
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "distance" field.</summary>
      public const int DistanceFieldNumber = 4;
      private readonly static float DistanceDefaultValue = 0F;

      private float distance_;
      /// <summary>
      /// the distance [m] that the bot is inside the penalty area
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Distance {
        get { if ((_hasBits0 & 4) != 0) { return distance_; } else { return DistanceDefaultValue; } }
        set {
          _hasBits0 |= 4;
          distance_ = value;
        }
      }
      /// <summary>Gets whether the "distance" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDistance {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "distance" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDistance() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as AttackerTouchedBallInDefenseArea);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(AttackerTouchedBallInDefenseArea other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasDistance) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(AttackerTouchedBallInDefenseArea other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasDistance) {
          Distance = other.Distance;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a bot kicked the ball too fast
    /// </summary>
    public sealed partial class BotKickedBallTooFast : pb::IMessage<BotKickedBallTooFast>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotKickedBallTooFast> _parser = new pb::MessageParser<BotKickedBallTooFast>(() => new BotKickedBallTooFast());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotKickedBallTooFast> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[14]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotKickedBallTooFast() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotKickedBallTooFast(BotKickedBallTooFast other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        initialBallSpeed_ = other.initialBallSpeed_;
        chipped_ = other.chipped_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotKickedBallTooFast Clone() {
        return new BotKickedBallTooFast(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that kicked too fast
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the ball at the time of the highest speed
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "initial_ball_speed" field.</summary>
      public const int InitialBallSpeedFieldNumber = 4;
      private readonly static float InitialBallSpeedDefaultValue = 0F;

      private float initialBallSpeed_;
      /// <summary>
      /// the absolute initial ball speed (kick speed) [m/s]
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float InitialBallSpeed {
        get { if ((_hasBits0 & 4) != 0) { return initialBallSpeed_; } else { return InitialBallSpeedDefaultValue; } }
        set {
          _hasBits0 |= 4;
          initialBallSpeed_ = value;
        }
      }
      /// <summary>Gets whether the "initial_ball_speed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInitialBallSpeed {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "initial_ball_speed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInitialBallSpeed() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "chipped" field.</summary>
      public const int ChippedFieldNumber = 5;
      private readonly static bool ChippedDefaultValue = false;

      private bool chipped_;
      /// <summary>
      /// was the ball chipped?
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Chipped {
        get { if ((_hasBits0 & 8) != 0) { return chipped_; } else { return ChippedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          chipped_ = value;
        }
      }
      /// <summary>Gets whether the "chipped" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasChipped {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "chipped" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearChipped() {
        _hasBits0 &= ~8;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotKickedBallTooFast);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotKickedBallTooFast other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(InitialBallSpeed, other.InitialBallSpeed)) return false;
        if (Chipped != other.Chipped) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasInitialBallSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(InitialBallSpeed);
        if (HasChipped) hash ^= Chipped.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasInitialBallSpeed) {
          output.WriteRawTag(37);
          output.WriteFloat(InitialBallSpeed);
        }
        if (HasChipped) {
          output.WriteRawTag(40);
          output.WriteBool(Chipped);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasInitialBallSpeed) {
          output.WriteRawTag(37);
          output.WriteFloat(InitialBallSpeed);
        }
        if (HasChipped) {
          output.WriteRawTag(40);
          output.WriteBool(Chipped);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasInitialBallSpeed) {
          size += 1 + 4;
        }
        if (HasChipped) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotKickedBallTooFast other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasInitialBallSpeed) {
          InitialBallSpeed = other.InitialBallSpeed;
        }
        if (other.HasChipped) {
          Chipped = other.Chipped;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              InitialBallSpeed = input.ReadFloat();
              break;
            }
            case 40: {
              Chipped = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              InitialBallSpeed = input.ReadFloat();
              break;
            }
            case 40: {
              Chipped = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a bot dribbled to ball too far
    /// </summary>
    public sealed partial class BotDribbledBallTooFar : pb::IMessage<BotDribbledBallTooFar>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotDribbledBallTooFar> _parser = new pb::MessageParser<BotDribbledBallTooFar>(() => new BotDribbledBallTooFar());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotDribbledBallTooFar> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[15]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotDribbledBallTooFar() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotDribbledBallTooFar(BotDribbledBallTooFar other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        start_ = other.start_ != null ? other.start_.Clone() : null;
        end_ = other.end_ != null ? other.end_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotDribbledBallTooFar Clone() {
        return new BotDribbledBallTooFar(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that dribbled too far
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "start" field.</summary>
      public const int StartFieldNumber = 3;
      private global::Location start_;
      /// <summary>
      /// the location where the dribbling started
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Start {
        get { return start_; }
        set {
          start_ = value;
        }
      }

      /// <summary>Field number for the "end" field.</summary>
      public const int EndFieldNumber = 4;
      private global::Location end_;
      /// <summary>
      /// the location where the maximum dribbling distance was reached
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location End {
        get { return end_; }
        set {
          end_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotDribbledBallTooFar);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotDribbledBallTooFar other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Start, other.Start)) return false;
        if (!object.Equals(End, other.End)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (start_ != null) hash ^= Start.GetHashCode();
        if (end_ != null) hash ^= End.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (start_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Start);
        }
        if (end_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(End);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (start_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Start);
        }
        if (end_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(End);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (start_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
        }
        if (end_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotDribbledBallTooFar other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.start_ != null) {
          if (start_ == null) {
            Start = new global::Location();
          }
          Start.MergeFrom(other.Start);
        }
        if (other.end_ != null) {
          if (end_ == null) {
            End = new global::Location();
          }
          End.MergeFrom(other.End);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (start_ == null) {
                Start = new global::Location();
              }
              input.ReadMessage(Start);
              break;
            }
            case 34: {
              if (end_ == null) {
                End = new global::Location();
              }
              input.ReadMessage(End);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (start_ == null) {
                Start = new global::Location();
              }
              input.ReadMessage(Start);
              break;
            }
            case 34: {
              if (end_ == null) {
                End = new global::Location();
              }
              input.ReadMessage(End);
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// an attacker touched the opponent keeper
    /// </summary>
    public sealed partial class AttackerTouchedOpponentInDefenseArea : pb::IMessage<AttackerTouchedOpponentInDefenseArea>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<AttackerTouchedOpponentInDefenseArea> _parser = new pb::MessageParser<AttackerTouchedOpponentInDefenseArea>(() => new AttackerTouchedOpponentInDefenseArea());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<AttackerTouchedOpponentInDefenseArea> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[16]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerTouchedOpponentInDefenseArea() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerTouchedOpponentInDefenseArea(AttackerTouchedOpponentInDefenseArea other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        victim_ = other.victim_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerTouchedOpponentInDefenseArea Clone() {
        return new AttackerTouchedOpponentInDefenseArea(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that touched the opponent keeper
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "victim" field.</summary>
      public const int VictimFieldNumber = 4;
      private readonly static uint VictimDefaultValue = 0;

      private uint victim_;
      /// <summary>
      /// the bot of the opposite team that was touched
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Victim {
        get { if ((_hasBits0 & 4) != 0) { return victim_; } else { return VictimDefaultValue; } }
        set {
          _hasBits0 |= 4;
          victim_ = value;
        }
      }
      /// <summary>Gets whether the "victim" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVictim {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "victim" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVictim() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the contact point between bot and keeper
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as AttackerTouchedOpponentInDefenseArea);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(AttackerTouchedOpponentInDefenseArea other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (Victim != other.Victim) return false;
        if (!object.Equals(Location, other.Location)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (HasVictim) hash ^= Victim.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasVictim) {
          output.WriteRawTag(32);
          output.WriteUInt32(Victim);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasVictim) {
          output.WriteRawTag(32);
          output.WriteUInt32(Victim);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (HasVictim) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Victim);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(AttackerTouchedOpponentInDefenseArea other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.HasVictim) {
          Victim = other.Victim;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 32: {
              Victim = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 32: {
              Victim = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// an attacker touched the ball multiple times when it was not allowed to
    /// </summary>
    public sealed partial class AttackerDoubleTouchedBall : pb::IMessage<AttackerDoubleTouchedBall>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<AttackerDoubleTouchedBall> _parser = new pb::MessageParser<AttackerDoubleTouchedBall>(() => new AttackerDoubleTouchedBall());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<AttackerDoubleTouchedBall> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[17]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerDoubleTouchedBall() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerDoubleTouchedBall(AttackerDoubleTouchedBall other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerDoubleTouchedBall Clone() {
        return new AttackerDoubleTouchedBall(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that touched the ball twice
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the ball when it was first touched
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as AttackerDoubleTouchedBall);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(AttackerDoubleTouchedBall other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(AttackerDoubleTouchedBall other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// an attacker was located too near to the opponent defense area when ball entered play
    /// </summary>
    public sealed partial class AttackerTooCloseToDefenseArea : pb::IMessage<AttackerTooCloseToDefenseArea>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<AttackerTooCloseToDefenseArea> _parser = new pb::MessageParser<AttackerTooCloseToDefenseArea>(() => new AttackerTooCloseToDefenseArea());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<AttackerTooCloseToDefenseArea> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[18]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerTooCloseToDefenseArea() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerTooCloseToDefenseArea(AttackerTooCloseToDefenseArea other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        distance_ = other.distance_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AttackerTooCloseToDefenseArea Clone() {
        return new AttackerTooCloseToDefenseArea(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that is too close to the defense area
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the bot
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "distance" field.</summary>
      public const int DistanceFieldNumber = 4;
      private readonly static float DistanceDefaultValue = 0F;

      private float distance_;
      /// <summary>
      /// the distance [m] of the bot to the penalty area
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Distance {
        get { if ((_hasBits0 & 4) != 0) { return distance_; } else { return DistanceDefaultValue; } }
        set {
          _hasBits0 |= 4;
          distance_ = value;
        }
      }
      /// <summary>Gets whether the "distance" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDistance {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "distance" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDistance() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as AttackerTooCloseToDefenseArea);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(AttackerTooCloseToDefenseArea other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasDistance) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(AttackerTooCloseToDefenseArea other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasDistance) {
          Distance = other.Distance;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a bot held the ball for too long
    /// </summary>
    public sealed partial class BotHeldBallDeliberately : pb::IMessage<BotHeldBallDeliberately>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotHeldBallDeliberately> _parser = new pb::MessageParser<BotHeldBallDeliberately>(() => new BotHeldBallDeliberately());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotHeldBallDeliberately> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[19]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotHeldBallDeliberately() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotHeldBallDeliberately(BotHeldBallDeliberately other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        duration_ = other.duration_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotHeldBallDeliberately Clone() {
        return new BotHeldBallDeliberately(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that holds the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "duration" field.</summary>
      public const int DurationFieldNumber = 4;
      private readonly static float DurationDefaultValue = 0F;

      private float duration_;
      /// <summary>
      /// the duration [s] that the bot hold the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Duration {
        get { if ((_hasBits0 & 4) != 0) { return duration_; } else { return DurationDefaultValue; } }
        set {
          _hasBits0 |= 4;
          duration_ = value;
        }
      }
      /// <summary>Gets whether the "duration" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDuration {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "duration" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDuration() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotHeldBallDeliberately);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotHeldBallDeliberately other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Duration, other.Duration)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasDuration) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Duration);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDuration) {
          output.WriteRawTag(37);
          output.WriteFloat(Duration);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (HasDuration) {
          output.WriteRawTag(37);
          output.WriteFloat(Duration);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasDuration) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotHeldBallDeliberately other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasDuration) {
          Duration = other.Duration;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Duration = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 37: {
              Duration = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a bot interfered the ball placement of the other team
    /// </summary>
    public sealed partial class BotInterferedPlacement : pb::IMessage<BotInterferedPlacement>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotInterferedPlacement> _parser = new pb::MessageParser<BotInterferedPlacement>(() => new BotInterferedPlacement());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotInterferedPlacement> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[20]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotInterferedPlacement() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotInterferedPlacement(BotInterferedPlacement other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        byBot_ = other.byBot_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotInterferedPlacement Clone() {
        return new BotInterferedPlacement(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "by_bot" field.</summary>
      public const int ByBotFieldNumber = 2;
      private readonly static uint ByBotDefaultValue = 0;

      private uint byBot_;
      /// <summary>
      /// the bot that interfered the placement
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ByBot {
        get { if ((_hasBits0 & 2) != 0) { return byBot_; } else { return ByBotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          byBot_ = value;
        }
      }
      /// <summary>Gets whether the "by_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByBot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "by_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByBot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 3;
      private global::Location location_;
      /// <summary>
      /// the location of the bot
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotInterferedPlacement);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotInterferedPlacement other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (ByBot != other.ByBot) return false;
        if (!object.Equals(Location, other.Location)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasByBot) hash ^= ByBot.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasByBot) {
          output.WriteRawTag(16);
          output.WriteUInt32(ByBot);
        }
        if (location_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Location);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasByBot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ByBot);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotInterferedPlacement other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasByBot) {
          ByBot = other.ByBot;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 16: {
              ByBot = input.ReadUInt32();
              break;
            }
            case 26: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a team collected multiple cards (yellow and red), which results in a penalty kick
    /// </summary>
    public sealed partial class MultipleCards : pb::IMessage<MultipleCards>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<MultipleCards> _parser = new pb::MessageParser<MultipleCards>(() => new MultipleCards());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<MultipleCards> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[21]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MultipleCards() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MultipleCards(MultipleCards other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MultipleCards Clone() {
        return new MultipleCards(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that received multiple yellow cards
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as MultipleCards);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(MultipleCards other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(MultipleCards other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a team collected multiple fouls, which results in a yellow card
    /// </summary>
    public sealed partial class MultipleFouls : pb::IMessage<MultipleFouls>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<MultipleFouls> _parser = new pb::MessageParser<MultipleFouls>(() => new MultipleFouls());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<MultipleFouls> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[22]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MultipleFouls() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MultipleFouls(MultipleFouls other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MultipleFouls Clone() {
        return new MultipleFouls(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that collected multiple fouls
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as MultipleFouls);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(MultipleFouls other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(MultipleFouls other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a team failed to place the ball multiple times in a row
    /// </summary>
    public sealed partial class MultiplePlacementFailures : pb::IMessage<MultiplePlacementFailures>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<MultiplePlacementFailures> _parser = new pb::MessageParser<MultiplePlacementFailures>(() => new MultiplePlacementFailures());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<MultiplePlacementFailures> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[23]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MultiplePlacementFailures() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MultiplePlacementFailures(MultiplePlacementFailures other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MultiplePlacementFailures Clone() {
        return new MultiplePlacementFailures(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that failed multiple times
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as MultiplePlacementFailures);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(MultiplePlacementFailures other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(MultiplePlacementFailures other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// timeout waiting for the attacking team to perform the free kick
    /// </summary>
    public sealed partial class KickTimeout : pb::IMessage<KickTimeout>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<KickTimeout> _parser = new pb::MessageParser<KickTimeout>(() => new KickTimeout());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<KickTimeout> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[24]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public KickTimeout() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public KickTimeout(KickTimeout other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        time_ = other.time_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public KickTimeout Clone() {
        return new KickTimeout(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that that should have kicked
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 2;
      private global::Location location_;
      /// <summary>
      /// the location of the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "time" field.</summary>
      public const int TimeFieldNumber = 3;
      private readonly static float TimeDefaultValue = 0F;

      private float time_;
      /// <summary>
      /// the time [s] that was waited
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Time {
        get { if ((_hasBits0 & 2) != 0) { return time_; } else { return TimeDefaultValue; } }
        set {
          _hasBits0 |= 2;
          time_ = value;
        }
      }
      /// <summary>Gets whether the "time" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTime {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "time" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTime() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as KickTimeout);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(KickTimeout other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Time, other.Time)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Time);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (location_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Location);
        }
        if (HasTime) {
          output.WriteRawTag(29);
          output.WriteFloat(Time);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (location_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Location);
        }
        if (HasTime) {
          output.WriteRawTag(29);
          output.WriteFloat(Time);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasTime) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(KickTimeout other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasTime) {
          Time = other.Time;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 18: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 29: {
              Time = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 18: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 29: {
              Time = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// game was stuck
    /// </summary>
    public sealed partial class NoProgressInGame : pb::IMessage<NoProgressInGame>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<NoProgressInGame> _parser = new pb::MessageParser<NoProgressInGame>(() => new NoProgressInGame());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<NoProgressInGame> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[25]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public NoProgressInGame() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public NoProgressInGame(NoProgressInGame other) : this() {
        _hasBits0 = other._hasBits0;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        time_ = other.time_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public NoProgressInGame Clone() {
        return new NoProgressInGame(this);
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 1;
      private global::Location location_;
      /// <summary>
      /// the location of the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "time" field.</summary>
      public const int TimeFieldNumber = 2;
      private readonly static float TimeDefaultValue = 0F;

      private float time_;
      /// <summary>
      /// the time [s] that was waited
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Time {
        get { if ((_hasBits0 & 1) != 0) { return time_; } else { return TimeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          time_ = value;
        }
      }
      /// <summary>Gets whether the "time" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTime {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "time" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTime() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as NoProgressInGame);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(NoProgressInGame other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Time, other.Time)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Time);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (location_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Location);
        }
        if (HasTime) {
          output.WriteRawTag(21);
          output.WriteFloat(Time);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (location_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Location);
        }
        if (HasTime) {
          output.WriteRawTag(21);
          output.WriteFloat(Time);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasTime) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(NoProgressInGame other) {
        if (other == null) {
          return;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasTime) {
          Time = other.Time;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 21: {
              Time = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 21: {
              Time = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// ball placement failed
    /// </summary>
    public sealed partial class PlacementFailed : pb::IMessage<PlacementFailed>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<PlacementFailed> _parser = new pb::MessageParser<PlacementFailed>(() => new PlacementFailed());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<PlacementFailed> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[26]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlacementFailed() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlacementFailed(PlacementFailed other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        remainingDistance_ = other.remainingDistance_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlacementFailed Clone() {
        return new PlacementFailed(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that failed
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "remaining_distance" field.</summary>
      public const int RemainingDistanceFieldNumber = 2;
      private readonly static float RemainingDistanceDefaultValue = 0F;

      private float remainingDistance_;
      /// <summary>
      /// the remaining distance [m] from ball to placement position
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float RemainingDistance {
        get { if ((_hasBits0 & 2) != 0) { return remainingDistance_; } else { return RemainingDistanceDefaultValue; } }
        set {
          _hasBits0 |= 2;
          remainingDistance_ = value;
        }
      }
      /// <summary>Gets whether the "remaining_distance" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRemainingDistance {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "remaining_distance" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRemainingDistance() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as PlacementFailed);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(PlacementFailed other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RemainingDistance, other.RemainingDistance)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasRemainingDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RemainingDistance);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasRemainingDistance) {
          output.WriteRawTag(21);
          output.WriteFloat(RemainingDistance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasRemainingDistance) {
          output.WriteRawTag(21);
          output.WriteFloat(RemainingDistance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasRemainingDistance) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(PlacementFailed other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasRemainingDistance) {
          RemainingDistance = other.RemainingDistance;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 21: {
              RemainingDistance = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 21: {
              RemainingDistance = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a team was found guilty for minor unsporting behavior
    /// </summary>
    public sealed partial class UnsportingBehaviorMinor : pb::IMessage<UnsportingBehaviorMinor>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UnsportingBehaviorMinor> _parser = new pb::MessageParser<UnsportingBehaviorMinor>(() => new UnsportingBehaviorMinor());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UnsportingBehaviorMinor> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[27]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UnsportingBehaviorMinor() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UnsportingBehaviorMinor(UnsportingBehaviorMinor other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        reason_ = other.reason_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UnsportingBehaviorMinor Clone() {
        return new UnsportingBehaviorMinor(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "reason" field.</summary>
      public const int ReasonFieldNumber = 2;
      private readonly static string ReasonDefaultValue = "";

      private string reason_;
      /// <summary>
      /// an explanation of the situation and decision
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Reason {
        get { return reason_ ?? ReasonDefaultValue; }
        set {
          reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "reason" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasReason {
        get { return reason_ != null; }
      }
      /// <summary>Clears the value of the "reason" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearReason() {
        reason_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UnsportingBehaviorMinor);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UnsportingBehaviorMinor other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (Reason != other.Reason) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasReason) hash ^= Reason.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasReason) {
          output.WriteRawTag(18);
          output.WriteString(Reason);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasReason) {
          output.WriteRawTag(18);
          output.WriteString(Reason);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasReason) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UnsportingBehaviorMinor other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 18: {
              Reason = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 18: {
              Reason = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a team was found guilty for major unsporting behavior
    /// </summary>
    public sealed partial class UnsportingBehaviorMajor : pb::IMessage<UnsportingBehaviorMajor>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UnsportingBehaviorMajor> _parser = new pb::MessageParser<UnsportingBehaviorMajor>(() => new UnsportingBehaviorMajor());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UnsportingBehaviorMajor> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[28]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UnsportingBehaviorMajor() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UnsportingBehaviorMajor(UnsportingBehaviorMajor other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        reason_ = other.reason_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UnsportingBehaviorMajor Clone() {
        return new UnsportingBehaviorMajor(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "reason" field.</summary>
      public const int ReasonFieldNumber = 2;
      private readonly static string ReasonDefaultValue = "";

      private string reason_;
      /// <summary>
      /// an explanation of the situation and decision
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Reason {
        get { return reason_ ?? ReasonDefaultValue; }
        set {
          reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "reason" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasReason {
        get { return reason_ != null; }
      }
      /// <summary>Clears the value of the "reason" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearReason() {
        reason_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UnsportingBehaviorMajor);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UnsportingBehaviorMajor other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (Reason != other.Reason) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasReason) hash ^= Reason.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasReason) {
          output.WriteRawTag(18);
          output.WriteString(Reason);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasReason) {
          output.WriteRawTag(18);
          output.WriteString(Reason);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasReason) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UnsportingBehaviorMajor other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 18: {
              Reason = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 18: {
              Reason = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a keeper held the ball in its defense area for too long
    /// </summary>
    public sealed partial class KeeperHeldBall : pb::IMessage<KeeperHeldBall>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<KeeperHeldBall> _parser = new pb::MessageParser<KeeperHeldBall>(() => new KeeperHeldBall());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<KeeperHeldBall> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[29]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public KeeperHeldBall() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public KeeperHeldBall(KeeperHeldBall other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        location_ = other.location_ != null ? other.location_.Clone() : null;
        duration_ = other.duration_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public KeeperHeldBall Clone() {
        return new KeeperHeldBall(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that found guilty
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "location" field.</summary>
      public const int LocationFieldNumber = 2;
      private global::Location location_;
      /// <summary>
      /// the location of the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Location Location {
        get { return location_; }
        set {
          location_ = value;
        }
      }

      /// <summary>Field number for the "duration" field.</summary>
      public const int DurationFieldNumber = 3;
      private readonly static float DurationDefaultValue = 0F;

      private float duration_;
      /// <summary>
      /// the duration [s] that the keeper hold the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Duration {
        get { if ((_hasBits0 & 2) != 0) { return duration_; } else { return DurationDefaultValue; } }
        set {
          _hasBits0 |= 2;
          duration_ = value;
        }
      }
      /// <summary>Gets whether the "duration" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDuration {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "duration" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDuration() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as KeeperHeldBall);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(KeeperHeldBall other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (!object.Equals(Location, other.Location)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Duration, other.Duration)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (location_ != null) hash ^= Location.GetHashCode();
        if (HasDuration) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Duration);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (location_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Location);
        }
        if (HasDuration) {
          output.WriteRawTag(29);
          output.WriteFloat(Duration);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (location_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Location);
        }
        if (HasDuration) {
          output.WriteRawTag(29);
          output.WriteFloat(Duration);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (location_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
        }
        if (HasDuration) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(KeeperHeldBall other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.location_ != null) {
          if (location_ == null) {
            Location = new global::Location();
          }
          Location.MergeFrom(other.Location);
        }
        if (other.HasDuration) {
          Duration = other.Duration;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 18: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 29: {
              Duration = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 18: {
              if (location_ == null) {
                Location = new global::Location();
              }
              input.ReadMessage(Location);
              break;
            }
            case 29: {
              Duration = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a team successfully placed the ball
    /// </summary>
    public sealed partial class PlacementSucceeded : pb::IMessage<PlacementSucceeded>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<PlacementSucceeded> _parser = new pb::MessageParser<PlacementSucceeded>(() => new PlacementSucceeded());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<PlacementSucceeded> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[30]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlacementSucceeded() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlacementSucceeded(PlacementSucceeded other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        timeTaken_ = other.timeTaken_;
        precision_ = other.precision_;
        distance_ = other.distance_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlacementSucceeded Clone() {
        return new PlacementSucceeded(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that did the placement
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "time_taken" field.</summary>
      public const int TimeTakenFieldNumber = 2;
      private readonly static float TimeTakenDefaultValue = 0F;

      private float timeTaken_;
      /// <summary>
      /// the time [s] taken for placing the ball
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float TimeTaken {
        get { if ((_hasBits0 & 2) != 0) { return timeTaken_; } else { return TimeTakenDefaultValue; } }
        set {
          _hasBits0 |= 2;
          timeTaken_ = value;
        }
      }
      /// <summary>Gets whether the "time_taken" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeTaken {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "time_taken" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeTaken() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "precision" field.</summary>
      public const int PrecisionFieldNumber = 3;
      private readonly static float PrecisionDefaultValue = 0F;

      private float precision_;
      /// <summary>
      /// the distance [m] between placement location and actual ball position
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Precision {
        get { if ((_hasBits0 & 4) != 0) { return precision_; } else { return PrecisionDefaultValue; } }
        set {
          _hasBits0 |= 4;
          precision_ = value;
        }
      }
      /// <summary>Gets whether the "precision" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPrecision {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "precision" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPrecision() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "distance" field.</summary>
      public const int DistanceFieldNumber = 4;
      private readonly static float DistanceDefaultValue = 0F;

      private float distance_;
      /// <summary>
      /// the distance [m] between the initial ball location and the placement position
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Distance {
        get { if ((_hasBits0 & 8) != 0) { return distance_; } else { return DistanceDefaultValue; } }
        set {
          _hasBits0 |= 8;
          distance_ = value;
        }
      }
      /// <summary>Gets whether the "distance" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDistance {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "distance" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDistance() {
        _hasBits0 &= ~8;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as PlacementSucceeded);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(PlacementSucceeded other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeTaken, other.TimeTaken)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Precision, other.Precision)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (HasTimeTaken) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeTaken);
        if (HasPrecision) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Precision);
        if (HasDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasTimeTaken) {
          output.WriteRawTag(21);
          output.WriteFloat(TimeTaken);
        }
        if (HasPrecision) {
          output.WriteRawTag(29);
          output.WriteFloat(Precision);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (HasTimeTaken) {
          output.WriteRawTag(21);
          output.WriteFloat(TimeTaken);
        }
        if (HasPrecision) {
          output.WriteRawTag(29);
          output.WriteFloat(Precision);
        }
        if (HasDistance) {
          output.WriteRawTag(37);
          output.WriteFloat(Distance);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (HasTimeTaken) {
          size += 1 + 4;
        }
        if (HasPrecision) {
          size += 1 + 4;
        }
        if (HasDistance) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(PlacementSucceeded other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        if (other.HasTimeTaken) {
          TimeTaken = other.TimeTaken;
        }
        if (other.HasPrecision) {
          Precision = other.Precision;
        }
        if (other.HasDistance) {
          Distance = other.Distance;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 21: {
              TimeTaken = input.ReadFloat();
              break;
            }
            case 29: {
              Precision = input.ReadFloat();
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
            case 21: {
              TimeTaken = input.ReadFloat();
              break;
            }
            case 29: {
              Precision = input.ReadFloat();
              break;
            }
            case 37: {
              Distance = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// both teams are prepared - all conditions are met to continue (with kickoff or penalty kick)
    /// </summary>
    public sealed partial class Prepared : pb::IMessage<Prepared>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Prepared> _parser = new pb::MessageParser<Prepared>(() => new Prepared());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Prepared> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[31]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Prepared() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Prepared(Prepared other) : this() {
        _hasBits0 = other._hasBits0;
        timeTaken_ = other.timeTaken_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Prepared Clone() {
        return new Prepared(this);
      }

      /// <summary>Field number for the "time_taken" field.</summary>
      public const int TimeTakenFieldNumber = 1;
      private readonly static float TimeTakenDefaultValue = 0F;

      private float timeTaken_;
      /// <summary>
      /// the time [s] taken for preparing
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float TimeTaken {
        get { if ((_hasBits0 & 1) != 0) { return timeTaken_; } else { return TimeTakenDefaultValue; } }
        set {
          _hasBits0 |= 1;
          timeTaken_ = value;
        }
      }
      /// <summary>Gets whether the "time_taken" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeTaken {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "time_taken" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeTaken() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Prepared);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Prepared other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeTaken, other.TimeTaken)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasTimeTaken) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeTaken);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasTimeTaken) {
          output.WriteRawTag(13);
          output.WriteFloat(TimeTaken);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasTimeTaken) {
          output.WriteRawTag(13);
          output.WriteFloat(TimeTaken);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasTimeTaken) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Prepared other) {
        if (other == null) {
          return;
        }
        if (other.HasTimeTaken) {
          TimeTaken = other.TimeTaken;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 13: {
              TimeTaken = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 13: {
              TimeTaken = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// bots are being substituted by at least one team
    /// </summary>
    public sealed partial class BotSubstitution : pb::IMessage<BotSubstitution>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BotSubstitution> _parser = new pb::MessageParser<BotSubstitution>(() => new BotSubstitution());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BotSubstitution> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[32]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotSubstitution() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotSubstitution(BotSubstitution other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BotSubstitution Clone() {
        return new BotSubstitution(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that substitutes robots
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BotSubstitution);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BotSubstitution other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BotSubstitution other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      }
      #endif

    }

    /// <summary>
    /// a team has too many robots on the field
    /// </summary>
    public sealed partial class TooManyRobots : pb::IMessage<TooManyRobots>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<TooManyRobots> _parser = new pb::MessageParser<TooManyRobots>(() => new TooManyRobots());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<TooManyRobots> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::GameEvent.Descriptor.NestedTypes[33]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TooManyRobots() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TooManyRobots(TooManyRobots other) : this() {
        _hasBits0 = other._hasBits0;
        byTeam_ = other.byTeam_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TooManyRobots Clone() {
        return new TooManyRobots(this);
      }

      /// <summary>Field number for the "by_team" field.</summary>
      public const int ByTeamFieldNumber = 1;
      private readonly static global::Team ByTeamDefaultValue = global::Team.Unknown;

      private global::Team byTeam_;
      /// <summary>
      /// the team that has too many robots
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Team ByTeam {
        get { if ((_hasBits0 & 1) != 0) { return byTeam_; } else { return ByTeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          byTeam_ = value;
        }
      }
      /// <summary>Gets whether the "by_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasByTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "by_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearByTeam() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as TooManyRobots);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(TooManyRobots other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ByTeam != other.ByTeam) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasByTeam) hash ^= ByTeam.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasByTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) ByTeam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasByTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ByTeam);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(TooManyRobots other) {
        if (other == null) {
          return;
        }
        if (other.HasByTeam) {
          ByTeam = other.ByTeam;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ByTeam = (global::Team) input.ReadEnum();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
