// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ssl_game_controller_team.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ssl_game_controller_team.proto</summary>
public static partial class SslGameControllerTeamReflection {

  #region Descriptor
  /// <summary>File descriptor for ssl_game_controller_team.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SslGameControllerTeamReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch5zc2xfZ2FtZV9jb250cm9sbGVyX3RlYW0ucHJvdG8aGXNzbF9nYW1lX2V2",
          "ZW50XzIwMTkucHJvdG8aIHNzbF9nYW1lX2NvbnRyb2xsZXJfY29tbW9uLnBy",
          "b3RvIkQKEFRlYW1SZWdpc3RyYXRpb24SEQoJdGVhbV9uYW1lGAEgAigJEh0K",
          "CXNpZ25hdHVyZRgCIAEoCzIKLlNpZ25hdHVyZSL/AQoQVGVhbVRvQ29udHJv",
          "bGxlchIdCglzaWduYXR1cmUYASABKAsyCi5TaWduYXR1cmUSGAoOZGVzaXJl",
          "ZF9rZWVwZXIYAiABKAVIABJBChJhZHZhbnRhZ2VfcmVzcG9uc2UYAyABKA4y",
          "Iy5UZWFtVG9Db250cm9sbGVyLkFkdmFudGFnZVJlc3BvbnNlSAASGAoOc3Vi",
          "c3RpdHV0ZV9ib3QYBCABKAhIABIOCgRwaW5nGAUgASgISAAiPgoRQWR2YW50",
          "YWdlUmVzcG9uc2USDQoJVU5ERUNJREVEEAASCAoEU1RPUBAAEgwKCENPTlRJ",
          "TlVFEAEaAhABQgUKA21zZyJ1ChBDb250cm9sbGVyVG9UZWFtEiwKEGNvbnRy",
          "b2xsZXJfcmVwbHkYASABKAsyEC5Db250cm9sbGVyUmVwbHlIABIsChBhZHZh",
          "bnRhZ2VfY2hvaWNlGAIgASgLMhAuQWR2YW50YWdlQ2hvaWNlSABCBQoDbXNn",
          "IuACCg9BZHZhbnRhZ2VDaG9pY2USIwoEZm91bBgBIAIoDjIVLkFkdmFudGFn",
          "ZUNob2ljZS5Gb3VsEjMKEGJvdF9jcmFzaF91bmlxdWUYAiABKAsyGS5HYW1l",
          "RXZlbnQuQm90Q3Jhc2hVbmlxdWUSLwoOYm90X3B1c2hlZF9ib3QYAyABKAsy",
          "Fy5HYW1lRXZlbnQuQm90UHVzaGVkQm90EmIKKWF0dGFja2VyX3RvdWNoZWRf",
          "b3Bwb25lbnRfaW5fZGVmZW5zZV9hcmVhGAQgASgLMi8uR2FtZUV2ZW50LkF0",
          "dGFja2VyVG91Y2hlZE9wcG9uZW50SW5EZWZlbnNlQXJlYSJeCgRGb3VsEgsK",
          "B1VOS05PV04QABINCglDT0xMSVNJT04QARILCgdQVVNISU5HEAISLQopQVRU",
          "QUNLRVJfVE9VQ0hFRF9PUFBPTkVOVF9JTl9ERUZFTlNFX0FSRUEQAw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SslGameEvent2019Reflection.Descriptor, global::SslGameControllerCommonReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::TeamRegistration), global::TeamRegistration.Parser, new[]{ "TeamName", "Signature" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TeamToController), global::TeamToController.Parser, new[]{ "Signature", "DesiredKeeper", "AdvantageResponse", "SubstituteBot", "Ping" }, new[]{ "Msg" }, new[]{ typeof(global::TeamToController.Types.AdvantageResponse) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ControllerToTeam), global::ControllerToTeam.Parser, new[]{ "ControllerReply", "AdvantageChoice" }, new[]{ "Msg" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AdvantageChoice), global::AdvantageChoice.Parser, new[]{ "Foul", "BotCrashUnique", "BotPushedBot", "AttackerTouchedOpponentInDefenseArea" }, null, new[]{ typeof(global::AdvantageChoice.Types.Foul) }, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// a registration that must be send by teams and autoRefs to the controller as the very first message
/// </summary>
public sealed partial class TeamRegistration : pb::IMessage<TeamRegistration>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TeamRegistration> _parser = new pb::MessageParser<TeamRegistration>(() => new TeamRegistration());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<TeamRegistration> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SslGameControllerTeamReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TeamRegistration() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TeamRegistration(TeamRegistration other) : this() {
    teamName_ = other.teamName_;
    signature_ = other.signature_ != null ? other.signature_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TeamRegistration Clone() {
    return new TeamRegistration(this);
  }

  /// <summary>Field number for the "team_name" field.</summary>
  public const int TeamNameFieldNumber = 1;
  private readonly static string TeamNameDefaultValue = "";

  private string teamName_;
  /// <summary>
  /// the exact team name as published by the game-controller
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TeamName {
    get { return teamName_ ?? TeamNameDefaultValue; }
    set {
      teamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "team_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamName {
    get { return teamName_ != null; }
  }
  /// <summary>Clears the value of the "team_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamName() {
    teamName_ = null;
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 2;
  private global::Signature signature_;
  /// <summary>
  /// signature can optionally be specified to enable secure communication
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Signature Signature {
    get { return signature_; }
    set {
      signature_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as TeamRegistration);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(TeamRegistration other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TeamName != other.TeamName) return false;
    if (!object.Equals(Signature, other.Signature)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTeamName) hash ^= TeamName.GetHashCode();
    if (signature_ != null) hash ^= Signature.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTeamName) {
      output.WriteRawTag(10);
      output.WriteString(TeamName);
    }
    if (signature_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTeamName) {
      output.WriteRawTag(10);
      output.WriteString(TeamName);
    }
    if (signature_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTeamName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamName);
    }
    if (signature_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(TeamRegistration other) {
    if (other == null) {
      return;
    }
    if (other.HasTeamName) {
      TeamName = other.TeamName;
    }
    if (other.signature_ != null) {
      if (signature_ == null) {
        Signature = new global::Signature();
      }
      Signature.MergeFrom(other.Signature);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          TeamName = input.ReadString();
          break;
        }
        case 18: {
          if (signature_ == null) {
            Signature = new global::Signature();
          }
          input.ReadMessage(Signature);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          TeamName = input.ReadString();
          break;
        }
        case 18: {
          if (signature_ == null) {
            Signature = new global::Signature();
          }
          input.ReadMessage(Signature);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// wrapper for all messages from a team's computer to the controller
/// </summary>
public sealed partial class TeamToController : pb::IMessage<TeamToController>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TeamToController> _parser = new pb::MessageParser<TeamToController>(() => new TeamToController());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<TeamToController> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SslGameControllerTeamReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TeamToController() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TeamToController(TeamToController other) : this() {
    signature_ = other.signature_ != null ? other.signature_.Clone() : null;
    switch (other.MsgCase) {
      case MsgOneofCase.DesiredKeeper:
        DesiredKeeper = other.DesiredKeeper;
        break;
      case MsgOneofCase.AdvantageResponse:
        AdvantageResponse = other.AdvantageResponse;
        break;
      case MsgOneofCase.SubstituteBot:
        SubstituteBot = other.SubstituteBot;
        break;
      case MsgOneofCase.Ping:
        Ping = other.Ping;
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TeamToController Clone() {
    return new TeamToController(this);
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 1;
  private global::Signature signature_;
  /// <summary>
  /// signature can optionally be specified to enable secure communication
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Signature Signature {
    get { return signature_; }
    set {
      signature_ = value;
    }
  }

  /// <summary>Field number for the "desired_keeper" field.</summary>
  public const int DesiredKeeperFieldNumber = 2;
  /// <summary>
  /// request a new desired keeper id
  /// this is only allowed during STOP and will be rejected otherwise
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int DesiredKeeper {
    get { return HasDesiredKeeper ? (int) msg_ : 0; }
    set {
      msg_ = value;
      msgCase_ = MsgOneofCase.DesiredKeeper;
    }
  }
  /// <summary>Gets whether the "desired_keeper" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDesiredKeeper {
    get { return msgCase_ == MsgOneofCase.DesiredKeeper; }
  }
  /// <summary> Clears the value of the oneof if it's currently set to "desired_keeper" </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDesiredKeeper() {
    if (HasDesiredKeeper) {
      ClearMsg();
    }
  }

  /// <summary>Field number for the "advantage_response" field.</summary>
  public const int AdvantageResponseFieldNumber = 3;
  /// <summary>
  /// response to an advantage choice request
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::TeamToController.Types.AdvantageResponse AdvantageResponse {
    get { return HasAdvantageResponse ? (global::TeamToController.Types.AdvantageResponse) msg_ : global::TeamToController.Types.AdvantageResponse.Undecided; }
    set {
      msg_ = value;
      msgCase_ = MsgOneofCase.AdvantageResponse;
    }
  }
  /// <summary>Gets whether the "advantage_response" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAdvantageResponse {
    get { return msgCase_ == MsgOneofCase.AdvantageResponse; }
  }
  /// <summary> Clears the value of the oneof if it's currently set to "advantage_response" </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAdvantageResponse() {
    if (HasAdvantageResponse) {
      ClearMsg();
    }
  }

  /// <summary>Field number for the "substitute_bot" field.</summary>
  public const int SubstituteBotFieldNumber = 4;
  /// <summary>
  /// request to substitute a robot at the next possibility
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool SubstituteBot {
    get { return HasSubstituteBot ? (bool) msg_ : false; }
    set {
      msg_ = value;
      msgCase_ = MsgOneofCase.SubstituteBot;
    }
  }
  /// <summary>Gets whether the "substitute_bot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSubstituteBot {
    get { return msgCase_ == MsgOneofCase.SubstituteBot; }
  }
  /// <summary> Clears the value of the oneof if it's currently set to "substitute_bot" </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSubstituteBot() {
    if (HasSubstituteBot) {
      ClearMsg();
    }
  }

  /// <summary>Field number for the "ping" field.</summary>
  public const int PingFieldNumber = 5;
  /// <summary>
  /// send a ping to the GC to test if the connection is still open.
  /// the value is ignored and a reply is sent back
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Ping {
    get { return HasPing ? (bool) msg_ : false; }
    set {
      msg_ = value;
      msgCase_ = MsgOneofCase.Ping;
    }
  }
  /// <summary>Gets whether the "ping" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPing {
    get { return msgCase_ == MsgOneofCase.Ping; }
  }
  /// <summary> Clears the value of the oneof if it's currently set to "ping" </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPing() {
    if (HasPing) {
      ClearMsg();
    }
  }

  private object msg_;
  /// <summary>Enum of possible cases for the "msg" oneof.</summary>
  public enum MsgOneofCase {
    None = 0,
    DesiredKeeper = 2,
    AdvantageResponse = 3,
    SubstituteBot = 4,
    Ping = 5,
  }
  private MsgOneofCase msgCase_ = MsgOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MsgOneofCase MsgCase {
    get { return msgCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMsg() {
    msgCase_ = MsgOneofCase.None;
    msg_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as TeamToController);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(TeamToController other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Signature, other.Signature)) return false;
    if (DesiredKeeper != other.DesiredKeeper) return false;
    if (AdvantageResponse != other.AdvantageResponse) return false;
    if (SubstituteBot != other.SubstituteBot) return false;
    if (Ping != other.Ping) return false;
    if (MsgCase != other.MsgCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (signature_ != null) hash ^= Signature.GetHashCode();
    if (HasDesiredKeeper) hash ^= DesiredKeeper.GetHashCode();
    if (HasAdvantageResponse) hash ^= AdvantageResponse.GetHashCode();
    if (HasSubstituteBot) hash ^= SubstituteBot.GetHashCode();
    if (HasPing) hash ^= Ping.GetHashCode();
    hash ^= (int) msgCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (signature_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Signature);
    }
    if (HasDesiredKeeper) {
      output.WriteRawTag(16);
      output.WriteInt32(DesiredKeeper);
    }
    if (HasAdvantageResponse) {
      output.WriteRawTag(24);
      output.WriteEnum((int) AdvantageResponse);
    }
    if (HasSubstituteBot) {
      output.WriteRawTag(32);
      output.WriteBool(SubstituteBot);
    }
    if (HasPing) {
      output.WriteRawTag(40);
      output.WriteBool(Ping);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (signature_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Signature);
    }
    if (HasDesiredKeeper) {
      output.WriteRawTag(16);
      output.WriteInt32(DesiredKeeper);
    }
    if (HasAdvantageResponse) {
      output.WriteRawTag(24);
      output.WriteEnum((int) AdvantageResponse);
    }
    if (HasSubstituteBot) {
      output.WriteRawTag(32);
      output.WriteBool(SubstituteBot);
    }
    if (HasPing) {
      output.WriteRawTag(40);
      output.WriteBool(Ping);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (signature_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
    }
    if (HasDesiredKeeper) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DesiredKeeper);
    }
    if (HasAdvantageResponse) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdvantageResponse);
    }
    if (HasSubstituteBot) {
      size += 1 + 1;
    }
    if (HasPing) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(TeamToController other) {
    if (other == null) {
      return;
    }
    if (other.signature_ != null) {
      if (signature_ == null) {
        Signature = new global::Signature();
      }
      Signature.MergeFrom(other.Signature);
    }
    switch (other.MsgCase) {
      case MsgOneofCase.DesiredKeeper:
        DesiredKeeper = other.DesiredKeeper;
        break;
      case MsgOneofCase.AdvantageResponse:
        AdvantageResponse = other.AdvantageResponse;
        break;
      case MsgOneofCase.SubstituteBot:
        SubstituteBot = other.SubstituteBot;
        break;
      case MsgOneofCase.Ping:
        Ping = other.Ping;
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (signature_ == null) {
            Signature = new global::Signature();
          }
          input.ReadMessage(Signature);
          break;
        }
        case 16: {
          DesiredKeeper = input.ReadInt32();
          break;
        }
        case 24: {
          msg_ = input.ReadEnum();
          msgCase_ = MsgOneofCase.AdvantageResponse;
          break;
        }
        case 32: {
          SubstituteBot = input.ReadBool();
          break;
        }
        case 40: {
          Ping = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (signature_ == null) {
            Signature = new global::Signature();
          }
          input.ReadMessage(Signature);
          break;
        }
        case 16: {
          DesiredKeeper = input.ReadInt32();
          break;
        }
        case 24: {
          msg_ = input.ReadEnum();
          msgCase_ = MsgOneofCase.AdvantageResponse;
          break;
        }
        case 32: {
          SubstituteBot = input.ReadBool();
          break;
        }
        case 40: {
          Ping = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the TeamToController message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum AdvantageResponse {
      /// <summary>
      /// no choice -> will default to STOP
      /// </summary>
      [pbr::OriginalName("UNDECIDED")] Undecided = 0,
      /// <summary>
      /// stop the game and handle the foul immediately
      /// </summary>
      [pbr::OriginalName("STOP", PreferredAlias = false)] Stop = 0,
      /// <summary>
      /// continue the game until the next stop of the game, then handle the foul
      /// </summary>
      [pbr::OriginalName("CONTINUE")] Continue = 1,
    }

  }
  #endregion

}

/// <summary>
/// wrapper for all messages from controller to a team's computer
/// </summary>
public sealed partial class ControllerToTeam : pb::IMessage<ControllerToTeam>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ControllerToTeam> _parser = new pb::MessageParser<ControllerToTeam>(() => new ControllerToTeam());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ControllerToTeam> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SslGameControllerTeamReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ControllerToTeam() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ControllerToTeam(ControllerToTeam other) : this() {
    switch (other.MsgCase) {
      case MsgOneofCase.ControllerReply:
        ControllerReply = other.ControllerReply.Clone();
        break;
      case MsgOneofCase.AdvantageChoice:
        AdvantageChoice = other.AdvantageChoice.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ControllerToTeam Clone() {
    return new ControllerToTeam(this);
  }

  /// <summary>Field number for the "controller_reply" field.</summary>
  public const int ControllerReplyFieldNumber = 1;
  /// <summary>
  /// a reply from the controller
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ControllerReply ControllerReply {
    get { return msgCase_ == MsgOneofCase.ControllerReply ? (global::ControllerReply) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.ControllerReply;
    }
  }

  /// <summary>Field number for the "advantage_choice" field.</summary>
  public const int AdvantageChoiceFieldNumber = 2;
  /// <summary>
  /// the team is offered an advantage choice
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AdvantageChoice AdvantageChoice {
    get { return msgCase_ == MsgOneofCase.AdvantageChoice ? (global::AdvantageChoice) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.AdvantageChoice;
    }
  }

  private object msg_;
  /// <summary>Enum of possible cases for the "msg" oneof.</summary>
  public enum MsgOneofCase {
    None = 0,
    ControllerReply = 1,
    AdvantageChoice = 2,
  }
  private MsgOneofCase msgCase_ = MsgOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MsgOneofCase MsgCase {
    get { return msgCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMsg() {
    msgCase_ = MsgOneofCase.None;
    msg_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ControllerToTeam);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ControllerToTeam other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ControllerReply, other.ControllerReply)) return false;
    if (!object.Equals(AdvantageChoice, other.AdvantageChoice)) return false;
    if (MsgCase != other.MsgCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (msgCase_ == MsgOneofCase.ControllerReply) hash ^= ControllerReply.GetHashCode();
    if (msgCase_ == MsgOneofCase.AdvantageChoice) hash ^= AdvantageChoice.GetHashCode();
    hash ^= (int) msgCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (msgCase_ == MsgOneofCase.ControllerReply) {
      output.WriteRawTag(10);
      output.WriteMessage(ControllerReply);
    }
    if (msgCase_ == MsgOneofCase.AdvantageChoice) {
      output.WriteRawTag(18);
      output.WriteMessage(AdvantageChoice);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (msgCase_ == MsgOneofCase.ControllerReply) {
      output.WriteRawTag(10);
      output.WriteMessage(ControllerReply);
    }
    if (msgCase_ == MsgOneofCase.AdvantageChoice) {
      output.WriteRawTag(18);
      output.WriteMessage(AdvantageChoice);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (msgCase_ == MsgOneofCase.ControllerReply) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControllerReply);
    }
    if (msgCase_ == MsgOneofCase.AdvantageChoice) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdvantageChoice);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ControllerToTeam other) {
    if (other == null) {
      return;
    }
    switch (other.MsgCase) {
      case MsgOneofCase.ControllerReply:
        if (ControllerReply == null) {
          ControllerReply = new global::ControllerReply();
        }
        ControllerReply.MergeFrom(other.ControllerReply);
        break;
      case MsgOneofCase.AdvantageChoice:
        if (AdvantageChoice == null) {
          AdvantageChoice = new global::AdvantageChoice();
        }
        AdvantageChoice.MergeFrom(other.AdvantageChoice);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          global::ControllerReply subBuilder = new global::ControllerReply();
          if (msgCase_ == MsgOneofCase.ControllerReply) {
            subBuilder.MergeFrom(ControllerReply);
          }
          input.ReadMessage(subBuilder);
          ControllerReply = subBuilder;
          break;
        }
        case 18: {
          global::AdvantageChoice subBuilder = new global::AdvantageChoice();
          if (msgCase_ == MsgOneofCase.AdvantageChoice) {
            subBuilder.MergeFrom(AdvantageChoice);
          }
          input.ReadMessage(subBuilder);
          AdvantageChoice = subBuilder;
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          global::ControllerReply subBuilder = new global::ControllerReply();
          if (msgCase_ == MsgOneofCase.ControllerReply) {
            subBuilder.MergeFrom(ControllerReply);
          }
          input.ReadMessage(subBuilder);
          ControllerReply = subBuilder;
          break;
        }
        case 18: {
          global::AdvantageChoice subBuilder = new global::AdvantageChoice();
          if (msgCase_ == MsgOneofCase.AdvantageChoice) {
            subBuilder.MergeFrom(AdvantageChoice);
          }
          input.ReadMessage(subBuilder);
          AdvantageChoice = subBuilder;
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// information about the advantage choice that is offered to a team
/// </summary>
public sealed partial class AdvantageChoice : pb::IMessage<AdvantageChoice>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<AdvantageChoice> _parser = new pb::MessageParser<AdvantageChoice>(() => new AdvantageChoice());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<AdvantageChoice> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SslGameControllerTeamReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AdvantageChoice() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AdvantageChoice(AdvantageChoice other) : this() {
    _hasBits0 = other._hasBits0;
    foul_ = other.foul_;
    botCrashUnique_ = other.botCrashUnique_ != null ? other.botCrashUnique_.Clone() : null;
    botPushedBot_ = other.botPushedBot_ != null ? other.botPushedBot_.Clone() : null;
    attackerTouchedOpponentInDefenseArea_ = other.attackerTouchedOpponentInDefenseArea_ != null ? other.attackerTouchedOpponentInDefenseArea_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AdvantageChoice Clone() {
    return new AdvantageChoice(this);
  }

  /// <summary>Field number for the "foul" field.</summary>
  public const int FoulFieldNumber = 1;
  private readonly static global::AdvantageChoice.Types.Foul FoulDefaultValue = global::AdvantageChoice.Types.Foul.Unknown;

  private global::AdvantageChoice.Types.Foul foul_;
  /// <summary>
  /// the type of foul that occurred
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AdvantageChoice.Types.Foul Foul {
    get { if ((_hasBits0 & 1) != 0) { return foul_; } else { return FoulDefaultValue; } }
    set {
      _hasBits0 |= 1;
      foul_ = value;
    }
  }
  /// <summary>Gets whether the "foul" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFoul {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "foul" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFoul() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "bot_crash_unique" field.</summary>
  public const int BotCrashUniqueFieldNumber = 2;
  private global::GameEvent.Types.BotCrashUnique botCrashUnique_;
  /// <summary>
  /// the bot crash event that was the source for this advantage choice
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotCrashUnique BotCrashUnique {
    get { return botCrashUnique_; }
    set {
      botCrashUnique_ = value;
    }
  }

  /// <summary>Field number for the "bot_pushed_bot" field.</summary>
  public const int BotPushedBotFieldNumber = 3;
  private global::GameEvent.Types.BotPushedBot botPushedBot_;
  /// <summary>
  /// the bot push event that was the source for this advantage choice
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.BotPushedBot BotPushedBot {
    get { return botPushedBot_; }
    set {
      botPushedBot_ = value;
    }
  }

  /// <summary>Field number for the "attacker_touched_opponent_in_defense_area" field.</summary>
  public const int AttackerTouchedOpponentInDefenseAreaFieldNumber = 4;
  private global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea attackerTouchedOpponentInDefenseArea_;
  /// <summary>
  /// the bot push event that was the source for this advantage choice
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea AttackerTouchedOpponentInDefenseArea {
    get { return attackerTouchedOpponentInDefenseArea_; }
    set {
      attackerTouchedOpponentInDefenseArea_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as AdvantageChoice);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(AdvantageChoice other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Foul != other.Foul) return false;
    if (!object.Equals(BotCrashUnique, other.BotCrashUnique)) return false;
    if (!object.Equals(BotPushedBot, other.BotPushedBot)) return false;
    if (!object.Equals(AttackerTouchedOpponentInDefenseArea, other.AttackerTouchedOpponentInDefenseArea)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFoul) hash ^= Foul.GetHashCode();
    if (botCrashUnique_ != null) hash ^= BotCrashUnique.GetHashCode();
    if (botPushedBot_ != null) hash ^= BotPushedBot.GetHashCode();
    if (attackerTouchedOpponentInDefenseArea_ != null) hash ^= AttackerTouchedOpponentInDefenseArea.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFoul) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Foul);
    }
    if (botCrashUnique_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(BotCrashUnique);
    }
    if (botPushedBot_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(BotPushedBot);
    }
    if (attackerTouchedOpponentInDefenseArea_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(AttackerTouchedOpponentInDefenseArea);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFoul) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Foul);
    }
    if (botCrashUnique_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(BotCrashUnique);
    }
    if (botPushedBot_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(BotPushedBot);
    }
    if (attackerTouchedOpponentInDefenseArea_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(AttackerTouchedOpponentInDefenseArea);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFoul) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Foul);
    }
    if (botCrashUnique_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BotCrashUnique);
    }
    if (botPushedBot_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BotPushedBot);
    }
    if (attackerTouchedOpponentInDefenseArea_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackerTouchedOpponentInDefenseArea);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(AdvantageChoice other) {
    if (other == null) {
      return;
    }
    if (other.HasFoul) {
      Foul = other.Foul;
    }
    if (other.botCrashUnique_ != null) {
      if (botCrashUnique_ == null) {
        BotCrashUnique = new global::GameEvent.Types.BotCrashUnique();
      }
      BotCrashUnique.MergeFrom(other.BotCrashUnique);
    }
    if (other.botPushedBot_ != null) {
      if (botPushedBot_ == null) {
        BotPushedBot = new global::GameEvent.Types.BotPushedBot();
      }
      BotPushedBot.MergeFrom(other.BotPushedBot);
    }
    if (other.attackerTouchedOpponentInDefenseArea_ != null) {
      if (attackerTouchedOpponentInDefenseArea_ == null) {
        AttackerTouchedOpponentInDefenseArea = new global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea();
      }
      AttackerTouchedOpponentInDefenseArea.MergeFrom(other.AttackerTouchedOpponentInDefenseArea);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Foul = (global::AdvantageChoice.Types.Foul) input.ReadEnum();
          break;
        }
        case 18: {
          if (botCrashUnique_ == null) {
            BotCrashUnique = new global::GameEvent.Types.BotCrashUnique();
          }
          input.ReadMessage(BotCrashUnique);
          break;
        }
        case 26: {
          if (botPushedBot_ == null) {
            BotPushedBot = new global::GameEvent.Types.BotPushedBot();
          }
          input.ReadMessage(BotPushedBot);
          break;
        }
        case 34: {
          if (attackerTouchedOpponentInDefenseArea_ == null) {
            AttackerTouchedOpponentInDefenseArea = new global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea();
          }
          input.ReadMessage(AttackerTouchedOpponentInDefenseArea);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Foul = (global::AdvantageChoice.Types.Foul) input.ReadEnum();
          break;
        }
        case 18: {
          if (botCrashUnique_ == null) {
            BotCrashUnique = new global::GameEvent.Types.BotCrashUnique();
          }
          input.ReadMessage(BotCrashUnique);
          break;
        }
        case 26: {
          if (botPushedBot_ == null) {
            BotPushedBot = new global::GameEvent.Types.BotPushedBot();
          }
          input.ReadMessage(BotPushedBot);
          break;
        }
        case 34: {
          if (attackerTouchedOpponentInDefenseArea_ == null) {
            AttackerTouchedOpponentInDefenseArea = new global::GameEvent.Types.AttackerTouchedOpponentInDefenseArea();
          }
          input.ReadMessage(AttackerTouchedOpponentInDefenseArea);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the AdvantageChoice message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum Foul {
      /// <summary>
      /// default value when not set
      /// </summary>
      [pbr::OriginalName("UNKNOWN")] Unknown = 0,
      /// <summary>
      /// an opponent bot has crashed with one of your bots
      /// </summary>
      [pbr::OriginalName("COLLISION")] Collision = 1,
      /// <summary>
      /// an opponent bot has pushed one of your bots
      /// </summary>
      [pbr::OriginalName("PUSHING")] Pushing = 2,
      /// <summary>
      /// an opponent has touched one of your bots while your bot has been at least partially inside the defense area
      /// </summary>
      [pbr::OriginalName("ATTACKER_TOUCHED_OPPONENT_IN_DEFENSE_AREA")] AttackerTouchedOpponentInDefenseArea = 3,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
