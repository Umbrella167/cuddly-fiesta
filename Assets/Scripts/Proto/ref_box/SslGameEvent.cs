// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ssl_game_event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ssl_game_event.proto</summary>
public static partial class SslGameEventReflection {

  #region Descriptor
  /// <summary>File descriptor for ssl_game_event.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SslGameEventReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRzc2xfZ2FtZV9ldmVudC5wcm90byLuBQoKR2FtZV9FdmVudBIwCg1nYW1l",
          "RXZlbnRUeXBlGAEgAigOMhkuR2FtZV9FdmVudC5HYW1lRXZlbnRUeXBlEioK",
          "Cm9yaWdpbmF0b3IYAiABKAsyFi5HYW1lX0V2ZW50Lk9yaWdpbmF0b3ISDwoH",
          "bWVzc2FnZRgDIAEoCRo7CgpPcmlnaW5hdG9yEh4KBHRlYW0YASACKA4yEC5H",
          "YW1lX0V2ZW50LlRlYW0SDQoFYm90SWQYAiABKA0i+QMKDUdhbWVFdmVudFR5",
          "cGUSCwoHVU5LTk9XThAAEgoKBkNVU1RPTRABEhUKEU5VTUJFUl9PRl9QTEFZ",
          "RVJTEAISEwoPQkFMTF9MRUZUX0ZJRUxEEAMSCAoER09BTBAEEhAKDEtJQ0tf",
          "VElNRU9VVBAFEhcKE05PX1BST0dSRVNTX0lOX0dBTUUQBhIRCg1CT1RfQ09M",
          "TElTSU9OEAcSFQoRTVVMVElQTEVfREVGRU5ERVIQCBIfChtNVUxUSVBMRV9E",
          "RUZFTkRFUl9QQVJUSUFMTFkQCRIcChhBVFRBQ0tFUl9JTl9ERUZFTlNFX0FS",
          "RUEQChIJCgVJQ0lORxALEg4KCkJBTExfU1BFRUQQDBIUChBST0JPVF9TVE9Q",
          "X1NQRUVEEA0SEgoOQkFMTF9EUklCQkxJTkcQDhIZChVBVFRBQ0tFUl9UT1VD",
          "SF9LRUVQRVIQDxIQCgxET1VCTEVfVE9VQ0gQEBIcChhBVFRBQ0tFUl9UT19E",
          "RUZFTkNFX0FSRUEQERIjCh9ERUZFTkRFUl9UT19LSUNLX1BPSU5UX0RJU1RB",
          "TkNFEBISEAoMQkFMTF9IT0xESU5HEBMSEQoNSU5ESVJFQ1RfR09BTBAUEhkK",
          "FUJBTExfUExBQ0VNRU5UX0ZBSUxFRBAVEhAKDENISVBfT05fR09BTBAWIjgK",
          "BFRlYW0SEAoMVEVBTV9VTktOT1dOEAASDwoLVEVBTV9ZRUxMT1cQARINCglU",
          "RUFNX0JMVUUQAg=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Game_Event), global::Game_Event.Parser, new[]{ "GameEventType", "Originator", "Message" }, null, new[]{ typeof(global::Game_Event.Types.GameEventType), typeof(global::Game_Event.Types.Team) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Game_Event.Types.Originator), global::Game_Event.Types.Originator.Parser, new[]{ "Team", "BotId" }, null, null, null, null)})
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// a game event that caused a referee command
/// </summary>
public sealed partial class Game_Event : pb::IMessage<Game_Event>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Game_Event> _parser = new pb::MessageParser<Game_Event>(() => new Game_Event());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Game_Event> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SslGameEventReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Game_Event() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Game_Event(Game_Event other) : this() {
    _hasBits0 = other._hasBits0;
    gameEventType_ = other.gameEventType_;
    originator_ = other.originator_ != null ? other.originator_.Clone() : null;
    message_ = other.message_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Game_Event Clone() {
    return new Game_Event(this);
  }

  /// <summary>Field number for the "gameEventType" field.</summary>
  public const int GameEventTypeFieldNumber = 1;
  private readonly static global::Game_Event.Types.GameEventType GameEventTypeDefaultValue = global::Game_Event.Types.GameEventType.Unknown;

  private global::Game_Event.Types.GameEventType gameEventType_;
  /// <summary>
  /// the game event type that happened
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Game_Event.Types.GameEventType GameEventType {
    get { if ((_hasBits0 & 1) != 0) { return gameEventType_; } else { return GameEventTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      gameEventType_ = value;
    }
  }
  /// <summary>Gets whether the "gameEventType" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameEventType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "gameEventType" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameEventType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "originator" field.</summary>
  public const int OriginatorFieldNumber = 2;
  private global::Game_Event.Types.Originator originator_;
  /// <summary>
  /// the team and optionally a designated robot that is the originator of the game event
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Game_Event.Types.Originator Originator {
    get { return originator_; }
    set {
      originator_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 3;
  private readonly static string MessageDefaultValue = "";

  private string message_;
  /// <summary>
  /// a message describing further details of this game event
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Message {
    get { return message_ ?? MessageDefaultValue; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "message" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMessage {
    get { return message_ != null; }
  }
  /// <summary>Clears the value of the "message" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMessage() {
    message_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Game_Event);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Game_Event other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GameEventType != other.GameEventType) return false;
    if (!object.Equals(Originator, other.Originator)) return false;
    if (Message != other.Message) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGameEventType) hash ^= GameEventType.GetHashCode();
    if (originator_ != null) hash ^= Originator.GetHashCode();
    if (HasMessage) hash ^= Message.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGameEventType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GameEventType);
    }
    if (originator_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Originator);
    }
    if (HasMessage) {
      output.WriteRawTag(26);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGameEventType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GameEventType);
    }
    if (originator_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Originator);
    }
    if (HasMessage) {
      output.WriteRawTag(26);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGameEventType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameEventType);
    }
    if (originator_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Originator);
    }
    if (HasMessage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Game_Event other) {
    if (other == null) {
      return;
    }
    if (other.HasGameEventType) {
      GameEventType = other.GameEventType;
    }
    if (other.originator_ != null) {
      if (originator_ == null) {
        Originator = new global::Game_Event.Types.Originator();
      }
      Originator.MergeFrom(other.Originator);
    }
    if (other.HasMessage) {
      Message = other.Message;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GameEventType = (global::Game_Event.Types.GameEventType) input.ReadEnum();
          break;
        }
        case 18: {
          if (originator_ == null) {
            Originator = new global::Game_Event.Types.Originator();
          }
          input.ReadMessage(Originator);
          break;
        }
        case 26: {
          Message = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          GameEventType = (global::Game_Event.Types.GameEventType) input.ReadEnum();
          break;
        }
        case 18: {
          if (originator_ == null) {
            Originator = new global::Game_Event.Types.Originator();
          }
          input.ReadMessage(Originator);
          break;
        }
        case 26: {
          Message = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the Game_Event message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum GameEventType {
      /// <summary>
      /// not set
      /// </summary>
      [pbr::OriginalName("UNKNOWN")] Unknown = 0,
      /// <summary>
      /// an event that is not listed in this enum yet.
      /// Give further details in the message below
      /// </summary>
      [pbr::OriginalName("CUSTOM")] Custom = 1,
      /// <summary>
      /// Law 3: Number of players
      /// </summary>
      [pbr::OriginalName("NUMBER_OF_PLAYERS")] NumberOfPlayers = 2,
      /// <summary>
      /// Law 9: Ball out of play
      /// </summary>
      [pbr::OriginalName("BALL_LEFT_FIELD")] BallLeftField = 3,
      /// <summary>
      /// Law 10: Team scored a goal
      /// </summary>
      [pbr::OriginalName("GOAL")] Goal = 4,
      /// <summary>
      /// Law 9.3: lack of progress while bringing the ball into play
      /// </summary>
      [pbr::OriginalName("KICK_TIMEOUT")] KickTimeout = 5,
      /// <summary>
      /// Law ?: There is no progress in game for (10|15)? seconds
      /// </summary>
      [pbr::OriginalName("NO_PROGRESS_IN_GAME")] NoProgressInGame = 6,
      /// <summary>
      /// Law 12: Pushing / Substantial Contact
      /// </summary>
      [pbr::OriginalName("BOT_COLLISION")] BotCollision = 7,
      /// <summary>
      /// Law 12.2: Defender is completely inside penalty area
      /// </summary>
      [pbr::OriginalName("MULTIPLE_DEFENDER")] MultipleDefender = 8,
      /// <summary>
      /// Law 12: Defender is partially inside penalty area
      /// </summary>
      [pbr::OriginalName("MULTIPLE_DEFENDER_PARTIALLY")] MultipleDefenderPartially = 9,
      /// <summary>
      /// Law 12.3: Attacker in defense area
      /// </summary>
      [pbr::OriginalName("ATTACKER_IN_DEFENSE_AREA")] AttackerInDefenseArea = 10,
      /// <summary>
      /// Law 12: Icing (kicking over midline and opponent goal line)
      /// </summary>
      [pbr::OriginalName("ICING")] Icing = 11,
      /// <summary>
      /// Law 12: Ball speed
      /// </summary>
      [pbr::OriginalName("BALL_SPEED")] BallSpeed = 12,
      /// <summary>
      /// Law 12: Robot speed during STOP
      /// </summary>
      [pbr::OriginalName("ROBOT_STOP_SPEED")] RobotStopSpeed = 13,
      /// <summary>
      /// Law 12: Maximum dribbling distance
      /// </summary>
      [pbr::OriginalName("BALL_DRIBBLING")] BallDribbling = 14,
      /// <summary>
      /// Law 12: Touching the opponent goalkeeper
      /// </summary>
      [pbr::OriginalName("ATTACKER_TOUCH_KEEPER")] AttackerTouchKeeper = 15,
      /// <summary>
      /// Law 12: Double touch
      /// </summary>
      [pbr::OriginalName("DOUBLE_TOUCH")] DoubleTouch = 16,
      /// <summary>
      /// Law 13-17: Attacker not too close to the opponent's penalty area when ball enters play
      /// </summary>
      [pbr::OriginalName("ATTACKER_TO_DEFENCE_AREA")] AttackerToDefenceArea = 17,
      /// <summary>
      /// Law 13-17: Keeping the correct distance to the ball during opponents freekicks
      /// </summary>
      [pbr::OriginalName("DEFENDER_TO_KICK_POINT_DISTANCE")] DefenderToKickPointDistance = 18,
      /// <summary>
      /// Law 12: A robot holds the ball deliberately
      /// </summary>
      [pbr::OriginalName("BALL_HOLDING")] BallHolding = 19,
      /// <summary>
      /// Law 12: The ball entered the goal directly after an indirect kick was performed
      /// </summary>
      [pbr::OriginalName("INDIRECT_GOAL")] IndirectGoal = 20,
      /// <summary>
      /// Law 9.2: Ball placement
      /// </summary>
      [pbr::OriginalName("BALL_PLACEMENT_FAILED")] BallPlacementFailed = 21,
      /// <summary>
      /// Law 10: A goal is only scored if the ball has not exceeded a robot height (150mm) between the last
      /// kick of an attacker and the time the ball crossed the goal line.
      /// </summary>
      [pbr::OriginalName("CHIP_ON_GOAL")] ChipOnGoal = 22,
    }

    /// <summary>
    /// a team
    /// </summary>
    public enum Team {
      [pbr::OriginalName("TEAM_UNKNOWN")] Unknown = 0,
      [pbr::OriginalName("TEAM_YELLOW")] Yellow = 1,
      [pbr::OriginalName("TEAM_BLUE")] Blue = 2,
    }

    /// <summary>
    /// information about an originator
    /// </summary>
    public sealed partial class Originator : pb::IMessage<Originator>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Originator> _parser = new pb::MessageParser<Originator>(() => new Originator());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Originator> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::Game_Event.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Originator() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Originator(Originator other) : this() {
        _hasBits0 = other._hasBits0;
        team_ = other.team_;
        botId_ = other.botId_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Originator Clone() {
        return new Originator(this);
      }

      /// <summary>Field number for the "team" field.</summary>
      public const int TeamFieldNumber = 1;
      private readonly static global::Game_Event.Types.Team TeamDefaultValue = global::Game_Event.Types.Team.Unknown;

      private global::Game_Event.Types.Team team_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::Game_Event.Types.Team Team {
        get { if ((_hasBits0 & 1) != 0) { return team_; } else { return TeamDefaultValue; } }
        set {
          _hasBits0 |= 1;
          team_ = value;
        }
      }
      /// <summary>Gets whether the "team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTeam {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTeam() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "botId" field.</summary>
      public const int BotIdFieldNumber = 2;
      private readonly static uint BotIdDefaultValue = 0;

      private uint botId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint BotId {
        get { if ((_hasBits0 & 2) != 0) { return botId_; } else { return BotIdDefaultValue; } }
        set {
          _hasBits0 |= 2;
          botId_ = value;
        }
      }
      /// <summary>Gets whether the "botId" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBotId {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "botId" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBotId() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Originator);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Originator other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Team != other.Team) return false;
        if (BotId != other.BotId) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasTeam) hash ^= Team.GetHashCode();
        if (HasBotId) hash ^= BotId.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Team);
        }
        if (HasBotId) {
          output.WriteRawTag(16);
          output.WriteUInt32(BotId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasTeam) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Team);
        }
        if (HasBotId) {
          output.WriteRawTag(16);
          output.WriteUInt32(BotId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
        }
        if (HasBotId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BotId);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Originator other) {
        if (other == null) {
          return;
        }
        if (other.HasTeam) {
          Team = other.Team;
        }
        if (other.HasBotId) {
          BotId = other.BotId;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Team = (global::Game_Event.Types.Team) input.ReadEnum();
              break;
            }
            case 16: {
              BotId = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Team = (global::Game_Event.Types.Team) input.ReadEnum();
              break;
            }
            case 16: {
              BotId = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
